/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the LockSpendableList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockSpendableList200Response{}

// LockSpendableList200Response struct for LockSpendableList200Response
type LockSpendableList200Response struct {
	// Whether the locking or unlocking operation has been successfully executed. - `true`: The operation has been successfully executed. - `false`: The operation has not been executed. 
	Executed *bool `json:"executed,omitempty"`
}

// NewLockSpendableList200Response instantiates a new LockSpendableList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockSpendableList200Response() *LockSpendableList200Response {
	this := LockSpendableList200Response{}
	return &this
}

// NewLockSpendableList200ResponseWithDefaults instantiates a new LockSpendableList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockSpendableList200ResponseWithDefaults() *LockSpendableList200Response {
	this := LockSpendableList200Response{}
	return &this
}

// GetExecuted returns the Executed field value if set, zero value otherwise.
func (o *LockSpendableList200Response) GetExecuted() bool {
	if o == nil || IsNil(o.Executed) {
		var ret bool
		return ret
	}
	return *o.Executed
}

// GetExecutedOk returns a tuple with the Executed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockSpendableList200Response) GetExecutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Executed) {
		return nil, false
	}
	return o.Executed, true
}

// HasExecuted returns a boolean if a field has been set.
func (o *LockSpendableList200Response) HasExecuted() bool {
	if o != nil && !IsNil(o.Executed) {
		return true
	}

	return false
}

// SetExecuted gets a reference to the given bool and assigns it to the Executed field.
func (o *LockSpendableList200Response) SetExecuted(v bool) {
	o.Executed = &v
}

func (o LockSpendableList200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockSpendableList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Executed) {
		toSerialize["executed"] = o.Executed
	}
	return toSerialize, nil
}

type NullableLockSpendableList200Response struct {
	value *LockSpendableList200Response
	isSet bool
}

func (v NullableLockSpendableList200Response) Get() *LockSpendableList200Response {
	return v.value
}

func (v *NullableLockSpendableList200Response) Set(val *LockSpendableList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLockSpendableList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLockSpendableList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockSpendableList200Response(val *LockSpendableList200Response) *NullableLockSpendableList200Response {
	return &NullableLockSpendableList200Response{value: val, isSet: true}
}

func (v NullableLockSpendableList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockSpendableList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


