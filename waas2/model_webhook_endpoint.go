/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEndpoint{}

// WebhookEndpoint The information about a webhook endpoint.
type WebhookEndpoint struct {
	// The webhook endpoint URL.
	Url string `json:"url"`
	// The event types subscribed by a webhook endpoint.
	SubscribedEvents []WebhookEventType `json:"subscribed_events"`
	// The time when the endpoint was registered, in Unix timestamp format, measured in seconds.
	CreatedTimestamp int64 `json:"created_timestamp"`
	// The webhook endpoint ID.
	EndpointId *string `json:"endpoint_id,omitempty"`
	Status WebhookEndpointStatus `json:"status"`
	// The description of the webhook endpoint.
	Description *string `json:"description,omitempty"`
}

type _WebhookEndpoint WebhookEndpoint

// NewWebhookEndpoint instantiates a new WebhookEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEndpoint(url string, subscribedEvents []WebhookEventType, createdTimestamp int64, status WebhookEndpointStatus) *WebhookEndpoint {
	this := WebhookEndpoint{}
	this.Url = url
	this.SubscribedEvents = subscribedEvents
	this.CreatedTimestamp = createdTimestamp
	this.Status = status
	return &this
}

// NewWebhookEndpointWithDefaults instantiates a new WebhookEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEndpointWithDefaults() *WebhookEndpoint {
	this := WebhookEndpoint{}
	return &this
}

// GetUrl returns the Url field value
func (o *WebhookEndpoint) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookEndpoint) SetUrl(v string) {
	o.Url = v
}

// GetSubscribedEvents returns the SubscribedEvents field value
func (o *WebhookEndpoint) GetSubscribedEvents() []WebhookEventType {
	if o == nil {
		var ret []WebhookEventType
		return ret
	}

	return o.SubscribedEvents
}

// GetSubscribedEventsOk returns a tuple with the SubscribedEvents field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetSubscribedEventsOk() ([]WebhookEventType, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscribedEvents, true
}

// SetSubscribedEvents sets field value
func (o *WebhookEndpoint) SetSubscribedEvents(v []WebhookEventType) {
	o.SubscribedEvents = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *WebhookEndpoint) GetCreatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *WebhookEndpoint) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetEndpointId() string {
	if o == nil || IsNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetEndpointIdOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasEndpointId() bool {
	if o != nil && !IsNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *WebhookEndpoint) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetStatus returns the Status field value
func (o *WebhookEndpoint) GetStatus() WebhookEndpointStatus {
	if o == nil {
		var ret WebhookEndpointStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetStatusOk() (*WebhookEndpointStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebhookEndpoint) SetStatus(v WebhookEndpointStatus) {
	o.Status = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebhookEndpoint) SetDescription(v string) {
	o.Description = &v
}

func (o WebhookEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["subscribed_events"] = o.SubscribedEvents
	toSerialize["created_timestamp"] = o.CreatedTimestamp
	if !IsNil(o.EndpointId) {
		toSerialize["endpoint_id"] = o.EndpointId
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *WebhookEndpoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"subscribed_events",
		"created_timestamp",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEndpoint := _WebhookEndpoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEndpoint)

	if err != nil {
		return err
	}

	*o = WebhookEndpoint(varWebhookEndpoint)

	return err
}

type NullableWebhookEndpoint struct {
	value *WebhookEndpoint
	isSet bool
}

func (v NullableWebhookEndpoint) Get() *WebhookEndpoint {
	return v.value
}

func (v *NullableWebhookEndpoint) Set(val *WebhookEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEndpoint(val *WebhookEndpoint) *NullableWebhookEndpoint {
	return &NullableWebhookEndpoint{value: val, isSet: true}
}

func (v NullableWebhookEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


