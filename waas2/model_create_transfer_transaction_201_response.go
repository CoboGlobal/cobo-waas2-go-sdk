/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTransferTransaction201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferTransaction201Response{}

// CreateTransferTransaction201Response struct for CreateTransferTransaction201Response
type CreateTransferTransaction201Response struct {
	// The request ID that is used to track a transaction request. The request ID is provided by you and must be unique within your organization.
	RequestId string `json:"request_id"`
	// The transaction ID.
	TransactionId string `json:"transaction_id"`
	Status TransactionStatus `json:"status"`
}

type _CreateTransferTransaction201Response CreateTransferTransaction201Response

// NewCreateTransferTransaction201Response instantiates a new CreateTransferTransaction201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferTransaction201Response(requestId string, transactionId string, status TransactionStatus) *CreateTransferTransaction201Response {
	this := CreateTransferTransaction201Response{}
	this.RequestId = requestId
	this.TransactionId = transactionId
	this.Status = status
	return &this
}

// NewCreateTransferTransaction201ResponseWithDefaults instantiates a new CreateTransferTransaction201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferTransaction201ResponseWithDefaults() *CreateTransferTransaction201Response {
	this := CreateTransferTransaction201Response{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *CreateTransferTransaction201Response) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferTransaction201Response) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CreateTransferTransaction201Response) SetRequestId(v string) {
	o.RequestId = v
}

// GetTransactionId returns the TransactionId field value
func (o *CreateTransferTransaction201Response) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferTransaction201Response) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *CreateTransferTransaction201Response) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetStatus returns the Status field value
func (o *CreateTransferTransaction201Response) GetStatus() TransactionStatus {
	if o == nil {
		var ret TransactionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CreateTransferTransaction201Response) GetStatusOk() (*TransactionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CreateTransferTransaction201Response) SetStatus(v TransactionStatus) {
	o.Status = v
}

func (o CreateTransferTransaction201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTransferTransaction201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["transaction_id"] = o.TransactionId
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *CreateTransferTransaction201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"transaction_id",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTransferTransaction201Response := _CreateTransferTransaction201Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTransferTransaction201Response)

	if err != nil {
		return err
	}

	*o = CreateTransferTransaction201Response(varCreateTransferTransaction201Response)

	return err
}

type NullableCreateTransferTransaction201Response struct {
	value *CreateTransferTransaction201Response
	isSet bool
}

func (v NullableCreateTransferTransaction201Response) Get() *CreateTransferTransaction201Response {
	return v.value
}

func (v *NullableCreateTransferTransaction201Response) Set(val *CreateTransferTransaction201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferTransaction201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferTransaction201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferTransaction201Response(val *CreateTransferTransaction201Response) *NullableCreateTransferTransaction201Response {
	return &NullableCreateTransferTransaction201Response{value: val, isSet: true}
}

func (v NullableCreateTransferTransaction201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferTransaction201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


