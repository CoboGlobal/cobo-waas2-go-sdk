/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the RetryWebhookEvent201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetryWebhookEvent201Response{}

// RetryWebhookEvent201Response struct for RetryWebhookEvent201Response
type RetryWebhookEvent201Response struct {
	Retried *bool `json:"retried,omitempty"`
}

// NewRetryWebhookEvent201Response instantiates a new RetryWebhookEvent201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetryWebhookEvent201Response() *RetryWebhookEvent201Response {
	this := RetryWebhookEvent201Response{}
	return &this
}

// NewRetryWebhookEvent201ResponseWithDefaults instantiates a new RetryWebhookEvent201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetryWebhookEvent201ResponseWithDefaults() *RetryWebhookEvent201Response {
	this := RetryWebhookEvent201Response{}
	return &this
}

// GetRetried returns the Retried field value if set, zero value otherwise.
func (o *RetryWebhookEvent201Response) GetRetried() bool {
	if o == nil || IsNil(o.Retried) {
		var ret bool
		return ret
	}
	return *o.Retried
}

// GetRetriedOk returns a tuple with the Retried field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetryWebhookEvent201Response) GetRetriedOk() (*bool, bool) {
	if o == nil || IsNil(o.Retried) {
		return nil, false
	}
	return o.Retried, true
}

// HasRetried returns a boolean if a field has been set.
func (o *RetryWebhookEvent201Response) HasRetried() bool {
	if o != nil && !IsNil(o.Retried) {
		return true
	}

	return false
}

// SetRetried gets a reference to the given bool and assigns it to the Retried field.
func (o *RetryWebhookEvent201Response) SetRetried(v bool) {
	o.Retried = &v
}

func (o RetryWebhookEvent201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetryWebhookEvent201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Retried) {
		toSerialize["retried"] = o.Retried
	}
	return toSerialize, nil
}

type NullableRetryWebhookEvent201Response struct {
	value *RetryWebhookEvent201Response
	isSet bool
}

func (v NullableRetryWebhookEvent201Response) Get() *RetryWebhookEvent201Response {
	return v.value
}

func (v *NullableRetryWebhookEvent201Response) Set(val *RetryWebhookEvent201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRetryWebhookEvent201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRetryWebhookEvent201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetryWebhookEvent201Response(val *RetryWebhookEvent201Response) *NullableRetryWebhookEvent201Response {
	return &NullableRetryWebhookEvent201Response{value: val, isSet: true}
}

func (v NullableRetryWebhookEvent201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetryWebhookEvent201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


