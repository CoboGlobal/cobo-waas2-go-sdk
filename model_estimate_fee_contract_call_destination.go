/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the EstimateFeeContractCallDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EstimateFeeContractCallDestination{}

// EstimateFeeContractCallDestination The information about the transaction destination.
type EstimateFeeContractCallDestination struct {
	// The destination address.
	Address *string `json:"address,omitempty"`
	// The quantity of the token in the transaction. For example, if you trade 1.5 ETH, then the value is `1.5`. 
	Value *string `json:"value,omitempty"`
	// The data that is used to invoke a specific function or method within the specified contract at the destination address. 
	Calldata *string `json:"calldata,omitempty"`
}

// NewEstimateFeeContractCallDestination instantiates a new EstimateFeeContractCallDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateFeeContractCallDestination() *EstimateFeeContractCallDestination {
	this := EstimateFeeContractCallDestination{}
	return &this
}

// NewEstimateFeeContractCallDestinationWithDefaults instantiates a new EstimateFeeContractCallDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateFeeContractCallDestinationWithDefaults() *EstimateFeeContractCallDestination {
	this := EstimateFeeContractCallDestination{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *EstimateFeeContractCallDestination) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCallDestination) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *EstimateFeeContractCallDestination) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *EstimateFeeContractCallDestination) SetAddress(v string) {
	o.Address = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *EstimateFeeContractCallDestination) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCallDestination) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *EstimateFeeContractCallDestination) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *EstimateFeeContractCallDestination) SetValue(v string) {
	o.Value = &v
}

// GetCalldata returns the Calldata field value if set, zero value otherwise.
func (o *EstimateFeeContractCallDestination) GetCalldata() string {
	if o == nil || IsNil(o.Calldata) {
		var ret string
		return ret
	}
	return *o.Calldata
}

// GetCalldataOk returns a tuple with the Calldata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCallDestination) GetCalldataOk() (*string, bool) {
	if o == nil || IsNil(o.Calldata) {
		return nil, false
	}
	return o.Calldata, true
}

// HasCalldata returns a boolean if a field has been set.
func (o *EstimateFeeContractCallDestination) HasCalldata() bool {
	if o != nil && !IsNil(o.Calldata) {
		return true
	}

	return false
}

// SetCalldata gets a reference to the given string and assigns it to the Calldata field.
func (o *EstimateFeeContractCallDestination) SetCalldata(v string) {
	o.Calldata = &v
}

func (o EstimateFeeContractCallDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EstimateFeeContractCallDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Calldata) {
		toSerialize["calldata"] = o.Calldata
	}
	return toSerialize, nil
}

type NullableEstimateFeeContractCallDestination struct {
	value *EstimateFeeContractCallDestination
	isSet bool
}

func (v NullableEstimateFeeContractCallDestination) Get() *EstimateFeeContractCallDestination {
	return v.value
}

func (v *NullableEstimateFeeContractCallDestination) Set(val *EstimateFeeContractCallDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateFeeContractCallDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateFeeContractCallDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateFeeContractCallDestination(val *EstimateFeeContractCallDestination) *NullableEstimateFeeContractCallDestination {
	return &NullableEstimateFeeContractCallDestination{value: val, isSet: true}
}

func (v NullableEstimateFeeContractCallDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateFeeContractCallDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


