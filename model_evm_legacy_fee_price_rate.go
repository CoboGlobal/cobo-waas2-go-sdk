/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the EvmLegacyFeePriceRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EvmLegacyFeePriceRate{}

// EvmLegacyFeePriceRate struct for EvmLegacyFeePriceRate
type EvmLegacyFeePriceRate struct {
	Slow *EvmLegacyFeeBasePrice `json:"slow,omitempty"`
	Recommended *EvmLegacyFeeBasePrice `json:"recommended,omitempty"`
	Fast *EvmLegacyFeeBasePrice `json:"fast,omitempty"`
}

// NewEvmLegacyFeePriceRate instantiates a new EvmLegacyFeePriceRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvmLegacyFeePriceRate() *EvmLegacyFeePriceRate {
	this := EvmLegacyFeePriceRate{}
	return &this
}

// NewEvmLegacyFeePriceRateWithDefaults instantiates a new EvmLegacyFeePriceRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvmLegacyFeePriceRateWithDefaults() *EvmLegacyFeePriceRate {
	this := EvmLegacyFeePriceRate{}
	return &this
}

// GetSlow returns the Slow field value if set, zero value otherwise.
func (o *EvmLegacyFeePriceRate) GetSlow() EvmLegacyFeeBasePrice {
	if o == nil || IsNil(o.Slow) {
		var ret EvmLegacyFeeBasePrice
		return ret
	}
	return *o.Slow
}

// GetSlowOk returns a tuple with the Slow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvmLegacyFeePriceRate) GetSlowOk() (*EvmLegacyFeeBasePrice, bool) {
	if o == nil || IsNil(o.Slow) {
		return nil, false
	}
	return o.Slow, true
}

// HasSlow returns a boolean if a field has been set.
func (o *EvmLegacyFeePriceRate) HasSlow() bool {
	if o != nil && !IsNil(o.Slow) {
		return true
	}

	return false
}

// SetSlow gets a reference to the given EvmLegacyFeeBasePrice and assigns it to the Slow field.
func (o *EvmLegacyFeePriceRate) SetSlow(v EvmLegacyFeeBasePrice) {
	o.Slow = &v
}

// GetRecommended returns the Recommended field value if set, zero value otherwise.
func (o *EvmLegacyFeePriceRate) GetRecommended() EvmLegacyFeeBasePrice {
	if o == nil || IsNil(o.Recommended) {
		var ret EvmLegacyFeeBasePrice
		return ret
	}
	return *o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvmLegacyFeePriceRate) GetRecommendedOk() (*EvmLegacyFeeBasePrice, bool) {
	if o == nil || IsNil(o.Recommended) {
		return nil, false
	}
	return o.Recommended, true
}

// HasRecommended returns a boolean if a field has been set.
func (o *EvmLegacyFeePriceRate) HasRecommended() bool {
	if o != nil && !IsNil(o.Recommended) {
		return true
	}

	return false
}

// SetRecommended gets a reference to the given EvmLegacyFeeBasePrice and assigns it to the Recommended field.
func (o *EvmLegacyFeePriceRate) SetRecommended(v EvmLegacyFeeBasePrice) {
	o.Recommended = &v
}

// GetFast returns the Fast field value if set, zero value otherwise.
func (o *EvmLegacyFeePriceRate) GetFast() EvmLegacyFeeBasePrice {
	if o == nil || IsNil(o.Fast) {
		var ret EvmLegacyFeeBasePrice
		return ret
	}
	return *o.Fast
}

// GetFastOk returns a tuple with the Fast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvmLegacyFeePriceRate) GetFastOk() (*EvmLegacyFeeBasePrice, bool) {
	if o == nil || IsNil(o.Fast) {
		return nil, false
	}
	return o.Fast, true
}

// HasFast returns a boolean if a field has been set.
func (o *EvmLegacyFeePriceRate) HasFast() bool {
	if o != nil && !IsNil(o.Fast) {
		return true
	}

	return false
}

// SetFast gets a reference to the given EvmLegacyFeeBasePrice and assigns it to the Fast field.
func (o *EvmLegacyFeePriceRate) SetFast(v EvmLegacyFeeBasePrice) {
	o.Fast = &v
}

func (o EvmLegacyFeePriceRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EvmLegacyFeePriceRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Slow) {
		toSerialize["slow"] = o.Slow
	}
	if !IsNil(o.Recommended) {
		toSerialize["recommended"] = o.Recommended
	}
	if !IsNil(o.Fast) {
		toSerialize["fast"] = o.Fast
	}
	return toSerialize, nil
}

type NullableEvmLegacyFeePriceRate struct {
	value *EvmLegacyFeePriceRate
	isSet bool
}

func (v NullableEvmLegacyFeePriceRate) Get() *EvmLegacyFeePriceRate {
	return v.value
}

func (v *NullableEvmLegacyFeePriceRate) Set(val *EvmLegacyFeePriceRate) {
	v.value = val
	v.isSet = true
}

func (v NullableEvmLegacyFeePriceRate) IsSet() bool {
	return v.isSet
}

func (v *NullableEvmLegacyFeePriceRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvmLegacyFeePriceRate(val *EvmLegacyFeePriceRate) *NullableEvmLegacyFeePriceRate {
	return &NullableEvmLegacyFeePriceRate{value: val, isSet: true}
}

func (v NullableEvmLegacyFeePriceRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvmLegacyFeePriceRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


