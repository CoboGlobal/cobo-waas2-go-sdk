/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EstimateFeeContractCall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EstimateFeeContractCall{}

// EstimateFeeContractCall The information about a transaction that interacts with a smart contract
type EstimateFeeContractCall struct {
	// The request ID that is used to track a withdrawal request. The request ID is provided by you and must be unique within your organization.
	RequestId string `json:"request_id"`
	// The request type. Possible values include:   - `Transfer`: A request to transfer tokens.   - `ContractCall`: A request to interact with a smart contract.   - `MessageSign`: A request to sign a message. 
	RequestType string `json:"request_type"`
	// The chain ID, which is the unique identifier of a blockchain. You can retrieve the IDs of all the chains you can use by calling [List organization enabled chains](/v2/api-references/wallets/list-organization-enabled-chains).
	ChainId string `json:"chain_id"`
	Source ContractCallSource `json:"source"`
	Destination EstimateFeeContractCallDestination `json:"destination"`
}

type _EstimateFeeContractCall EstimateFeeContractCall

// NewEstimateFeeContractCall instantiates a new EstimateFeeContractCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimateFeeContractCall(requestId string, requestType string, chainId string, source ContractCallSource, destination EstimateFeeContractCallDestination) *EstimateFeeContractCall {
	this := EstimateFeeContractCall{}
	this.RequestId = requestId
	this.RequestType = requestType
	this.ChainId = chainId
	this.Source = source
	this.Destination = destination
	return &this
}

// NewEstimateFeeContractCallWithDefaults instantiates a new EstimateFeeContractCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimateFeeContractCallWithDefaults() *EstimateFeeContractCall {
	this := EstimateFeeContractCall{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *EstimateFeeContractCall) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCall) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *EstimateFeeContractCall) SetRequestId(v string) {
	o.RequestId = v
}

// GetRequestType returns the RequestType field value
func (o *EstimateFeeContractCall) GetRequestType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCall) GetRequestTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// SetRequestType sets field value
func (o *EstimateFeeContractCall) SetRequestType(v string) {
	o.RequestType = v
}

// GetChainId returns the ChainId field value
func (o *EstimateFeeContractCall) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCall) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *EstimateFeeContractCall) SetChainId(v string) {
	o.ChainId = v
}

// GetSource returns the Source field value
func (o *EstimateFeeContractCall) GetSource() ContractCallSource {
	if o == nil {
		var ret ContractCallSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCall) GetSourceOk() (*ContractCallSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *EstimateFeeContractCall) SetSource(v ContractCallSource) {
	o.Source = v
}

// GetDestination returns the Destination field value
func (o *EstimateFeeContractCall) GetDestination() EstimateFeeContractCallDestination {
	if o == nil {
		var ret EstimateFeeContractCallDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *EstimateFeeContractCall) GetDestinationOk() (*EstimateFeeContractCallDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *EstimateFeeContractCall) SetDestination(v EstimateFeeContractCallDestination) {
	o.Destination = v
}

func (o EstimateFeeContractCall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EstimateFeeContractCall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["request_type"] = o.RequestType
	toSerialize["chain_id"] = o.ChainId
	toSerialize["source"] = o.Source
	toSerialize["destination"] = o.Destination
	return toSerialize, nil
}

func (o *EstimateFeeContractCall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"request_type",
		"chain_id",
		"source",
		"destination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEstimateFeeContractCall := _EstimateFeeContractCall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEstimateFeeContractCall)

	if err != nil {
		return err
	}

	*o = EstimateFeeContractCall(varEstimateFeeContractCall)

	return err
}

type NullableEstimateFeeContractCall struct {
	value *EstimateFeeContractCall
	isSet bool
}

func (v NullableEstimateFeeContractCall) Get() *EstimateFeeContractCall {
	return v.value
}

func (v *NullableEstimateFeeContractCall) Set(val *EstimateFeeContractCall) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimateFeeContractCall) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimateFeeContractCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimateFeeContractCall(val *EstimateFeeContractCall) *NullableEstimateFeeContractCall {
	return &NullableEstimateFeeContractCall{value: val, isSet: true}
}

func (v NullableEstimateFeeContractCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimateFeeContractCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


