/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the SignMessageDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignMessageDestination{}

// SignMessageDestination The information about the transaction destination.
type SignMessageDestination struct {
	// The raw data of the message to be signed, encoded in Base64 format.
	Message *string `json:"message,omitempty"`
	// The structured data of the message to be signed, encoded in JSON format.
	StructuredData map[string]interface{} `json:"structured_data,omitempty"`
}

// NewSignMessageDestination instantiates a new SignMessageDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignMessageDestination() *SignMessageDestination {
	this := SignMessageDestination{}
	return &this
}

// NewSignMessageDestinationWithDefaults instantiates a new SignMessageDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignMessageDestinationWithDefaults() *SignMessageDestination {
	this := SignMessageDestination{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SignMessageDestination) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignMessageDestination) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SignMessageDestination) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SignMessageDestination) SetMessage(v string) {
	o.Message = &v
}

// GetStructuredData returns the StructuredData field value if set, zero value otherwise.
func (o *SignMessageDestination) GetStructuredData() map[string]interface{} {
	if o == nil || IsNil(o.StructuredData) {
		var ret map[string]interface{}
		return ret
	}
	return o.StructuredData
}

// GetStructuredDataOk returns a tuple with the StructuredData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignMessageDestination) GetStructuredDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.StructuredData) {
		return map[string]interface{}{}, false
	}
	return o.StructuredData, true
}

// HasStructuredData returns a boolean if a field has been set.
func (o *SignMessageDestination) HasStructuredData() bool {
	if o != nil && !IsNil(o.StructuredData) {
		return true
	}

	return false
}

// SetStructuredData gets a reference to the given map[string]interface{} and assigns it to the StructuredData field.
func (o *SignMessageDestination) SetStructuredData(v map[string]interface{}) {
	o.StructuredData = v
}

func (o SignMessageDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignMessageDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.StructuredData) {
		toSerialize["structured_data"] = o.StructuredData
	}
	return toSerialize, nil
}

type NullableSignMessageDestination struct {
	value *SignMessageDestination
	isSet bool
}

func (v NullableSignMessageDestination) Get() *SignMessageDestination {
	return v.value
}

func (v *NullableSignMessageDestination) Set(val *SignMessageDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableSignMessageDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableSignMessageDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignMessageDestination(val *SignMessageDestination) *NullableSignMessageDestination {
	return &NullableSignMessageDestination{value: val, isSet: true}
}

func (v NullableSignMessageDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignMessageDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


