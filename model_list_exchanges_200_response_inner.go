/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListExchanges200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListExchanges200ResponseInner{}

// ListExchanges200ResponseInner Settings details for the exchange
type ListExchanges200ResponseInner struct {
	ExchangeId ExchangeId `json:"exchange_id"`
	// Introduction of the supported features of this exchange.
	Subtitle *string `json:"subtitle,omitempty"`
	// The trading accounts(sub_wallet_ids) supported for this exchange.
	SupportedSubWalletIds []string `json:"supported_sub_wallet_ids"`
}

type _ListExchanges200ResponseInner ListExchanges200ResponseInner

// NewListExchanges200ResponseInner instantiates a new ListExchanges200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListExchanges200ResponseInner(exchangeId ExchangeId, supportedSubWalletIds []string) *ListExchanges200ResponseInner {
	this := ListExchanges200ResponseInner{}
	this.ExchangeId = exchangeId
	this.SupportedSubWalletIds = supportedSubWalletIds
	return &this
}

// NewListExchanges200ResponseInnerWithDefaults instantiates a new ListExchanges200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListExchanges200ResponseInnerWithDefaults() *ListExchanges200ResponseInner {
	this := ListExchanges200ResponseInner{}
	return &this
}

// GetExchangeId returns the ExchangeId field value
func (o *ListExchanges200ResponseInner) GetExchangeId() ExchangeId {
	if o == nil {
		var ret ExchangeId
		return ret
	}

	return o.ExchangeId
}

// GetExchangeIdOk returns a tuple with the ExchangeId field value
// and a boolean to check if the value has been set.
func (o *ListExchanges200ResponseInner) GetExchangeIdOk() (*ExchangeId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeId, true
}

// SetExchangeId sets field value
func (o *ListExchanges200ResponseInner) SetExchangeId(v ExchangeId) {
	o.ExchangeId = v
}

// GetSubtitle returns the Subtitle field value if set, zero value otherwise.
func (o *ListExchanges200ResponseInner) GetSubtitle() string {
	if o == nil || IsNil(o.Subtitle) {
		var ret string
		return ret
	}
	return *o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListExchanges200ResponseInner) GetSubtitleOk() (*string, bool) {
	if o == nil || IsNil(o.Subtitle) {
		return nil, false
	}
	return o.Subtitle, true
}

// HasSubtitle returns a boolean if a field has been set.
func (o *ListExchanges200ResponseInner) HasSubtitle() bool {
	if o != nil && !IsNil(o.Subtitle) {
		return true
	}

	return false
}

// SetSubtitle gets a reference to the given string and assigns it to the Subtitle field.
func (o *ListExchanges200ResponseInner) SetSubtitle(v string) {
	o.Subtitle = &v
}

// GetSupportedSubWalletIds returns the SupportedSubWalletIds field value
func (o *ListExchanges200ResponseInner) GetSupportedSubWalletIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SupportedSubWalletIds
}

// GetSupportedSubWalletIdsOk returns a tuple with the SupportedSubWalletIds field value
// and a boolean to check if the value has been set.
func (o *ListExchanges200ResponseInner) GetSupportedSubWalletIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportedSubWalletIds, true
}

// SetSupportedSubWalletIds sets field value
func (o *ListExchanges200ResponseInner) SetSupportedSubWalletIds(v []string) {
	o.SupportedSubWalletIds = v
}

func (o ListExchanges200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListExchanges200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["exchange_id"] = o.ExchangeId
	if !IsNil(o.Subtitle) {
		toSerialize["subtitle"] = o.Subtitle
	}
	toSerialize["supported_sub_wallet_ids"] = o.SupportedSubWalletIds
	return toSerialize, nil
}

func (o *ListExchanges200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"exchange_id",
		"supported_sub_wallet_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListExchanges200ResponseInner := _ListExchanges200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListExchanges200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListExchanges200ResponseInner(varListExchanges200ResponseInner)

	return err
}

type NullableListExchanges200ResponseInner struct {
	value *ListExchanges200ResponseInner
	isSet bool
}

func (v NullableListExchanges200ResponseInner) Get() *ListExchanges200ResponseInner {
	return v.value
}

func (v *NullableListExchanges200ResponseInner) Set(val *ListExchanges200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListExchanges200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListExchanges200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListExchanges200ResponseInner(val *ListExchanges200ResponseInner) *NullableListExchanges200ResponseInner {
	return &NullableListExchanges200ResponseInner{value: val, isSet: true}
}

func (v NullableListExchanges200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListExchanges200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


