/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateMpcVaultRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMpcVaultRequest{}

// CreateMpcVaultRequest struct for CreateMpcVaultRequest
type CreateMpcVaultRequest struct {
	// The id of the mpc project.
	ProjectId *string `json:"project_id,omitempty"`
	// The name of the mpc vault.
	Name string `json:"name"`
	VaultType MPCVaultType `json:"vault_type"`
}

type _CreateMpcVaultRequest CreateMpcVaultRequest

// NewCreateMpcVaultRequest instantiates a new CreateMpcVaultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMpcVaultRequest(name string, vaultType MPCVaultType) *CreateMpcVaultRequest {
	this := CreateMpcVaultRequest{}
	this.Name = name
	this.VaultType = vaultType
	return &this
}

// NewCreateMpcVaultRequestWithDefaults instantiates a new CreateMpcVaultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMpcVaultRequestWithDefaults() *CreateMpcVaultRequest {
	this := CreateMpcVaultRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateMpcVaultRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMpcVaultRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateMpcVaultRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateMpcVaultRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetName returns the Name field value
func (o *CreateMpcVaultRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateMpcVaultRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateMpcVaultRequest) SetName(v string) {
	o.Name = v
}

// GetVaultType returns the VaultType field value
func (o *CreateMpcVaultRequest) GetVaultType() MPCVaultType {
	if o == nil {
		var ret MPCVaultType
		return ret
	}

	return o.VaultType
}

// GetVaultTypeOk returns a tuple with the VaultType field value
// and a boolean to check if the value has been set.
func (o *CreateMpcVaultRequest) GetVaultTypeOk() (*MPCVaultType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultType, true
}

// SetVaultType sets field value
func (o *CreateMpcVaultRequest) SetVaultType(v MPCVaultType) {
	o.VaultType = v
}

func (o CreateMpcVaultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMpcVaultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	toSerialize["name"] = o.Name
	toSerialize["vault_type"] = o.VaultType
	return toSerialize, nil
}

func (o *CreateMpcVaultRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"vault_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMpcVaultRequest := _CreateMpcVaultRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateMpcVaultRequest)

	if err != nil {
		return err
	}

	*o = CreateMpcVaultRequest(varCreateMpcVaultRequest)

	return err
}

type NullableCreateMpcVaultRequest struct {
	value *CreateMpcVaultRequest
	isSet bool
}

func (v NullableCreateMpcVaultRequest) Get() *CreateMpcVaultRequest {
	return v.value
}

func (v *NullableCreateMpcVaultRequest) Set(val *CreateMpcVaultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMpcVaultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMpcVaultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMpcVaultRequest(val *CreateMpcVaultRequest) *NullableCreateMpcVaultRequest {
	return &NullableCreateMpcVaultRequest{value: val, isSet: true}
}

func (v NullableCreateMpcVaultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMpcVaultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


