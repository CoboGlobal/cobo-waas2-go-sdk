/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the ListWebhookEventDefinitions200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWebhookEventDefinitions200Response{}

// ListWebhookEventDefinitions200Response struct for ListWebhookEventDefinitions200Response
type ListWebhookEventDefinitions200Response struct {
	Result []ListWebhookEventDefinitions200ResponseResultInner `json:"result,omitempty"`
}

// NewListWebhookEventDefinitions200Response instantiates a new ListWebhookEventDefinitions200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWebhookEventDefinitions200Response() *ListWebhookEventDefinitions200Response {
	this := ListWebhookEventDefinitions200Response{}
	return &this
}

// NewListWebhookEventDefinitions200ResponseWithDefaults instantiates a new ListWebhookEventDefinitions200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWebhookEventDefinitions200ResponseWithDefaults() *ListWebhookEventDefinitions200Response {
	this := ListWebhookEventDefinitions200Response{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ListWebhookEventDefinitions200Response) GetResult() []ListWebhookEventDefinitions200ResponseResultInner {
	if o == nil || IsNil(o.Result) {
		var ret []ListWebhookEventDefinitions200ResponseResultInner
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWebhookEventDefinitions200Response) GetResultOk() ([]ListWebhookEventDefinitions200ResponseResultInner, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ListWebhookEventDefinitions200Response) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []ListWebhookEventDefinitions200ResponseResultInner and assigns it to the Result field.
func (o *ListWebhookEventDefinitions200Response) SetResult(v []ListWebhookEventDefinitions200ResponseResultInner) {
	o.Result = v
}

func (o ListWebhookEventDefinitions200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWebhookEventDefinitions200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableListWebhookEventDefinitions200Response struct {
	value *ListWebhookEventDefinitions200Response
	isSet bool
}

func (v NullableListWebhookEventDefinitions200Response) Get() *ListWebhookEventDefinitions200Response {
	return v.value
}

func (v *NullableListWebhookEventDefinitions200Response) Set(val *ListWebhookEventDefinitions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListWebhookEventDefinitions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListWebhookEventDefinitions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWebhookEventDefinitions200Response(val *ListWebhookEventDefinitions200Response) *NullableListWebhookEventDefinitions200Response {
	return &NullableListWebhookEventDefinitions200Response{value: val, isSet: true}
}

func (v NullableListWebhookEventDefinitions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWebhookEventDefinitions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


