/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the SafeTransactionAddressAllOfDelegate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SafeTransactionAddressAllOfDelegate{}

// SafeTransactionAddressAllOfDelegate struct for SafeTransactionAddressAllOfDelegate
type SafeTransactionAddressAllOfDelegate struct {
	// The wallet id of the delegate.
	WalletId *string `json:"wallet_id,omitempty"`
	// The wallet type of the delegate. This is required when user initiate a transfer.
	WalletType *string `json:"wallet_type,omitempty"`
	// The wallet address of the delegate. This is required when user initiate a transfer.
	WalletAddress *string `json:"wallet_address,omitempty"`
}

// NewSafeTransactionAddressAllOfDelegate instantiates a new SafeTransactionAddressAllOfDelegate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafeTransactionAddressAllOfDelegate() *SafeTransactionAddressAllOfDelegate {
	this := SafeTransactionAddressAllOfDelegate{}
	return &this
}

// NewSafeTransactionAddressAllOfDelegateWithDefaults instantiates a new SafeTransactionAddressAllOfDelegate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafeTransactionAddressAllOfDelegateWithDefaults() *SafeTransactionAddressAllOfDelegate {
	this := SafeTransactionAddressAllOfDelegate{}
	return &this
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletId() string {
	if o == nil || IsNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletId) {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *SafeTransactionAddressAllOfDelegate) HasWalletId() bool {
	if o != nil && !IsNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *SafeTransactionAddressAllOfDelegate) SetWalletId(v string) {
	o.WalletId = &v
}

// GetWalletType returns the WalletType field value if set, zero value otherwise.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletType() string {
	if o == nil || IsNil(o.WalletType) {
		var ret string
		return ret
	}
	return *o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WalletType) {
		return nil, false
	}
	return o.WalletType, true
}

// HasWalletType returns a boolean if a field has been set.
func (o *SafeTransactionAddressAllOfDelegate) HasWalletType() bool {
	if o != nil && !IsNil(o.WalletType) {
		return true
	}

	return false
}

// SetWalletType gets a reference to the given string and assigns it to the WalletType field.
func (o *SafeTransactionAddressAllOfDelegate) SetWalletType(v string) {
	o.WalletType = &v
}

// GetWalletAddress returns the WalletAddress field value if set, zero value otherwise.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletAddress() string {
	if o == nil || IsNil(o.WalletAddress) {
		var ret string
		return ret
	}
	return *o.WalletAddress
}

// GetWalletAddressOk returns a tuple with the WalletAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTransactionAddressAllOfDelegate) GetWalletAddressOk() (*string, bool) {
	if o == nil || IsNil(o.WalletAddress) {
		return nil, false
	}
	return o.WalletAddress, true
}

// HasWalletAddress returns a boolean if a field has been set.
func (o *SafeTransactionAddressAllOfDelegate) HasWalletAddress() bool {
	if o != nil && !IsNil(o.WalletAddress) {
		return true
	}

	return false
}

// SetWalletAddress gets a reference to the given string and assigns it to the WalletAddress field.
func (o *SafeTransactionAddressAllOfDelegate) SetWalletAddress(v string) {
	o.WalletAddress = &v
}

func (o SafeTransactionAddressAllOfDelegate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SafeTransactionAddressAllOfDelegate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	if !IsNil(o.WalletType) {
		toSerialize["wallet_type"] = o.WalletType
	}
	if !IsNil(o.WalletAddress) {
		toSerialize["wallet_address"] = o.WalletAddress
	}
	return toSerialize, nil
}

type NullableSafeTransactionAddressAllOfDelegate struct {
	value *SafeTransactionAddressAllOfDelegate
	isSet bool
}

func (v NullableSafeTransactionAddressAllOfDelegate) Get() *SafeTransactionAddressAllOfDelegate {
	return v.value
}

func (v *NullableSafeTransactionAddressAllOfDelegate) Set(val *SafeTransactionAddressAllOfDelegate) {
	v.value = val
	v.isSet = true
}

func (v NullableSafeTransactionAddressAllOfDelegate) IsSet() bool {
	return v.isSet
}

func (v *NullableSafeTransactionAddressAllOfDelegate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafeTransactionAddressAllOfDelegate(val *SafeTransactionAddressAllOfDelegate) *NullableSafeTransactionAddressAllOfDelegate {
	return &NullableSafeTransactionAddressAllOfDelegate{value: val, isSet: true}
}

func (v NullableSafeTransactionAddressAllOfDelegate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafeTransactionAddressAllOfDelegate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


