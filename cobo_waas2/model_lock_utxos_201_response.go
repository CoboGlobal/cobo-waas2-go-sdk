/*
Cobo Wallet as a Service 2.0

Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the LockUtxos201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockUtxos201Response{}

// LockUtxos201Response struct for LockUtxos201Response
type LockUtxos201Response struct {
	// Whether the locking or unlocking operation has been successfully executed. - `true`: The operation has been successfully executed. - `false`: The operation has not been executed. 
	Executed *bool `json:"executed,omitempty"`
}

// NewLockUtxos201Response instantiates a new LockUtxos201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockUtxos201Response() *LockUtxos201Response {
	this := LockUtxos201Response{}
	return &this
}

// NewLockUtxos201ResponseWithDefaults instantiates a new LockUtxos201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockUtxos201ResponseWithDefaults() *LockUtxos201Response {
	this := LockUtxos201Response{}
	return &this
}

// GetExecuted returns the Executed field value if set, zero value otherwise.
func (o *LockUtxos201Response) GetExecuted() bool {
	if o == nil || IsNil(o.Executed) {
		var ret bool
		return ret
	}
	return *o.Executed
}

// GetExecutedOk returns a tuple with the Executed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockUtxos201Response) GetExecutedOk() (*bool, bool) {
	if o == nil || IsNil(o.Executed) {
		return nil, false
	}
	return o.Executed, true
}

// HasExecuted returns a boolean if a field has been set.
func (o *LockUtxos201Response) HasExecuted() bool {
	if o != nil && !IsNil(o.Executed) {
		return true
	}

	return false
}

// SetExecuted gets a reference to the given bool and assigns it to the Executed field.
func (o *LockUtxos201Response) SetExecuted(v bool) {
	o.Executed = &v
}

func (o LockUtxos201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockUtxos201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Executed) {
		toSerialize["executed"] = o.Executed
	}
	return toSerialize, nil
}

type NullableLockUtxos201Response struct {
	value *LockUtxos201Response
	isSet bool
}

func (v NullableLockUtxos201Response) Get() *LockUtxos201Response {
	return v.value
}

func (v *NullableLockUtxos201Response) Set(val *LockUtxos201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLockUtxos201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLockUtxos201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockUtxos201Response(val *LockUtxos201Response) *NullableLockUtxos201Response {
	return &NullableLockUtxos201Response{value: val, isSet: true}
}

func (v NullableLockUtxos201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockUtxos201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


