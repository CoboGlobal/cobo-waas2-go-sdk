/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetTopUpAddress200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTopUpAddress200Response{}

// GetTopUpAddress200Response struct for GetTopUpAddress200Response
type GetTopUpAddress200Response struct {
	// Dedicated deposit address assigned to the specified custom_payer_id. The address is guaranteed to be unique under the same merchant and token's blockchain network (chain). 
	Address string `json:"address"`
	// Unique payer identifier on the Cobo side, auto-generated by the system. 
	PayerId string `json:"payer_id"`
	// Unique user identifier on the merchant side, used to assign a dedicated deposit address. 
	CustomPayerId string `json:"custom_payer_id"`
	// Merchant ID assigned by the system, e.g., 'M1001'. 
	MerchantId string `json:"merchant_id"`
	// The token ID for the top-up, e.g., 'ETH_USDT' refers to USDT on the Ethereum network. 
	TokenId string `json:"token_id"`
	// Blockchain network identifier, e.g., 'ETH' for Ethereum, 'TRON' for Tron. 
	Chain *string `json:"chain,omitempty"`
	// Developer fee rate for this token. For example, 0.01 represents a 1% fee. 
	DeveloperFeeRate *string `json:"developer_fee_rate,omitempty"`
	// Minimum deposit amount allowed for this address. Deposits below this threshold may not be credited. 
	MinAmount string `json:"min_amount"`
	// The created time of the payer address, represented as a UNIX timestamp in seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// The updated time of the payer address, represented as a UNIX timestamp in seconds.
	UpdatedTimestamp *int32 `json:"updated_timestamp,omitempty"`
}

type _GetTopUpAddress200Response GetTopUpAddress200Response

// NewGetTopUpAddress200Response instantiates a new GetTopUpAddress200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTopUpAddress200Response(address string, payerId string, customPayerId string, merchantId string, tokenId string, minAmount string) *GetTopUpAddress200Response {
	this := GetTopUpAddress200Response{}
	this.Address = address
	this.PayerId = payerId
	this.CustomPayerId = customPayerId
	this.MerchantId = merchantId
	this.TokenId = tokenId
	this.MinAmount = minAmount
	return &this
}

// NewGetTopUpAddress200ResponseWithDefaults instantiates a new GetTopUpAddress200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTopUpAddress200ResponseWithDefaults() *GetTopUpAddress200Response {
	this := GetTopUpAddress200Response{}
	return &this
}

// GetAddress returns the Address field value
func (o *GetTopUpAddress200Response) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *GetTopUpAddress200Response) SetAddress(v string) {
	o.Address = v
}

// GetPayerId returns the PayerId field value
func (o *GetTopUpAddress200Response) GetPayerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayerId
}

// GetPayerIdOk returns a tuple with the PayerId field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetPayerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayerId, true
}

// SetPayerId sets field value
func (o *GetTopUpAddress200Response) SetPayerId(v string) {
	o.PayerId = v
}

// GetCustomPayerId returns the CustomPayerId field value
func (o *GetTopUpAddress200Response) GetCustomPayerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomPayerId
}

// GetCustomPayerIdOk returns a tuple with the CustomPayerId field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetCustomPayerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomPayerId, true
}

// SetCustomPayerId sets field value
func (o *GetTopUpAddress200Response) SetCustomPayerId(v string) {
	o.CustomPayerId = v
}

// GetMerchantId returns the MerchantId field value
func (o *GetTopUpAddress200Response) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *GetTopUpAddress200Response) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetTokenId returns the TokenId field value
func (o *GetTopUpAddress200Response) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *GetTopUpAddress200Response) SetTokenId(v string) {
	o.TokenId = v
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *GetTopUpAddress200Response) GetChain() string {
	if o == nil || IsNil(o.Chain) {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetChainOk() (*string, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *GetTopUpAddress200Response) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *GetTopUpAddress200Response) SetChain(v string) {
	o.Chain = &v
}

// GetDeveloperFeeRate returns the DeveloperFeeRate field value if set, zero value otherwise.
func (o *GetTopUpAddress200Response) GetDeveloperFeeRate() string {
	if o == nil || IsNil(o.DeveloperFeeRate) {
		var ret string
		return ret
	}
	return *o.DeveloperFeeRate
}

// GetDeveloperFeeRateOk returns a tuple with the DeveloperFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetDeveloperFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperFeeRate) {
		return nil, false
	}
	return o.DeveloperFeeRate, true
}

// HasDeveloperFeeRate returns a boolean if a field has been set.
func (o *GetTopUpAddress200Response) HasDeveloperFeeRate() bool {
	if o != nil && !IsNil(o.DeveloperFeeRate) {
		return true
	}

	return false
}

// SetDeveloperFeeRate gets a reference to the given string and assigns it to the DeveloperFeeRate field.
func (o *GetTopUpAddress200Response) SetDeveloperFeeRate(v string) {
	o.DeveloperFeeRate = &v
}

// GetMinAmount returns the MinAmount field value
func (o *GetTopUpAddress200Response) GetMinAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinAmount
}

// GetMinAmountOk returns a tuple with the MinAmount field value
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetMinAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinAmount, true
}

// SetMinAmount sets field value
func (o *GetTopUpAddress200Response) SetMinAmount(v string) {
	o.MinAmount = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *GetTopUpAddress200Response) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *GetTopUpAddress200Response) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *GetTopUpAddress200Response) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *GetTopUpAddress200Response) GetUpdatedTimestamp() int32 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTopUpAddress200Response) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *GetTopUpAddress200Response) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int32 and assigns it to the UpdatedTimestamp field.
func (o *GetTopUpAddress200Response) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp = &v
}

func (o GetTopUpAddress200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTopUpAddress200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["payer_id"] = o.PayerId
	toSerialize["custom_payer_id"] = o.CustomPayerId
	toSerialize["merchant_id"] = o.MerchantId
	toSerialize["token_id"] = o.TokenId
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.DeveloperFeeRate) {
		toSerialize["developer_fee_rate"] = o.DeveloperFeeRate
	}
	toSerialize["min_amount"] = o.MinAmount
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	return toSerialize, nil
}

func (o *GetTopUpAddress200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"payer_id",
		"custom_payer_id",
		"merchant_id",
		"token_id",
		"min_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTopUpAddress200Response := _GetTopUpAddress200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTopUpAddress200Response)

	if err != nil {
		return err
	}

	*o = GetTopUpAddress200Response(varGetTopUpAddress200Response)

	return err
}

type NullableGetTopUpAddress200Response struct {
	value *GetTopUpAddress200Response
	isSet bool
}

func (v NullableGetTopUpAddress200Response) Get() *GetTopUpAddress200Response {
	return v.value
}

func (v *NullableGetTopUpAddress200Response) Set(val *GetTopUpAddress200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTopUpAddress200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTopUpAddress200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTopUpAddress200Response(val *GetTopUpAddress200Response) *NullableGetTopUpAddress200Response {
	return &NullableGetTopUpAddress200Response{value: val, isSet: true}
}

func (v NullableGetTopUpAddress200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTopUpAddress200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


