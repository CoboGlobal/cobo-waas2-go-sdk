/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionCosmosContractDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionCosmosContractDestination{}

// TransactionCosmosContractDestination Information about the transaction destination type `COSMOS_Contract`. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.  Switch between the tabs to display the properties for different transaction destinations. 
type TransactionCosmosContractDestination struct {
	DestinationType TransactionDestinationType `json:"destination_type"`
	CosmosMessages []TransactionCosmosMessage `json:"cosmos_messages"`
	// The transfer amount. For example, if you trade 1.5 ETH, then the value is `1.5`. 
	Value *string `json:"value,omitempty"`
}

type _TransactionCosmosContractDestination TransactionCosmosContractDestination

// NewTransactionCosmosContractDestination instantiates a new TransactionCosmosContractDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionCosmosContractDestination(destinationType TransactionDestinationType, cosmosMessages []TransactionCosmosMessage) *TransactionCosmosContractDestination {
	this := TransactionCosmosContractDestination{}
	this.DestinationType = destinationType
	this.CosmosMessages = cosmosMessages
	return &this
}

// NewTransactionCosmosContractDestinationWithDefaults instantiates a new TransactionCosmosContractDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionCosmosContractDestinationWithDefaults() *TransactionCosmosContractDestination {
	this := TransactionCosmosContractDestination{}
	return &this
}

// GetDestinationType returns the DestinationType field value
func (o *TransactionCosmosContractDestination) GetDestinationType() TransactionDestinationType {
	if o == nil {
		var ret TransactionDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *TransactionCosmosContractDestination) GetDestinationTypeOk() (*TransactionDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *TransactionCosmosContractDestination) SetDestinationType(v TransactionDestinationType) {
	o.DestinationType = v
}

// GetCosmosMessages returns the CosmosMessages field value
func (o *TransactionCosmosContractDestination) GetCosmosMessages() []TransactionCosmosMessage {
	if o == nil {
		var ret []TransactionCosmosMessage
		return ret
	}

	return o.CosmosMessages
}

// GetCosmosMessagesOk returns a tuple with the CosmosMessages field value
// and a boolean to check if the value has been set.
func (o *TransactionCosmosContractDestination) GetCosmosMessagesOk() ([]TransactionCosmosMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.CosmosMessages, true
}

// SetCosmosMessages sets field value
func (o *TransactionCosmosContractDestination) SetCosmosMessages(v []TransactionCosmosMessage) {
	o.CosmosMessages = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TransactionCosmosContractDestination) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCosmosContractDestination) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TransactionCosmosContractDestination) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TransactionCosmosContractDestination) SetValue(v string) {
	o.Value = &v
}

func (o TransactionCosmosContractDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionCosmosContractDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_type"] = o.DestinationType
	toSerialize["cosmos_messages"] = o.CosmosMessages
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *TransactionCosmosContractDestination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_type",
		"cosmos_messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionCosmosContractDestination := _TransactionCosmosContractDestination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionCosmosContractDestination)

	if err != nil {
		return err
	}

	*o = TransactionCosmosContractDestination(varTransactionCosmosContractDestination)

	return err
}

type NullableTransactionCosmosContractDestination struct {
	value *TransactionCosmosContractDestination
	isSet bool
}

func (v NullableTransactionCosmosContractDestination) Get() *TransactionCosmosContractDestination {
	return v.value
}

func (v *NullableTransactionCosmosContractDestination) Set(val *TransactionCosmosContractDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionCosmosContractDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionCosmosContractDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionCosmosContractDestination(val *TransactionCosmosContractDestination) *NullableTransactionCosmosContractDestination {
	return &NullableTransactionCosmosContractDestination{value: val, isSet: true}
}

func (v NullableTransactionCosmosContractDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionCosmosContractDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


