/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetApiKeyInfo200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiKeyInfo200Response{}

// GetApiKeyInfo200Response struct for GetApiKeyInfo200Response
type GetApiKeyInfo200Response struct {
	// The API key name.
	Name string `json:"name"`
	// The curve type used for the API key, which determines the cryptographic algorithm for key generation and signing. Possible values include: - `ED25519`: Ed25519 - `SECP256K1`: Secp256k1 
	CurveType string `json:"curve_type"`
	// The API key value.
	Key string `json:"key"`
	// The URL of the callback endpoint that receives callback messages triggered by this API key.
	CallbackUrl *string `json:"callback_url,omitempty"`
	// (Applicable to permanent API keys only) The list of IP addresses that are allowed to use this API key.
	ValidIps []string `json:"valid_ips,omitempty"`
	// The time when the API key was registered, in Unix timestamp format, measured in milliseconds.
	CreatedTimestamp int64 `json:"created_timestamp"`
	// The time when the API key information was last updated, in Unix timestamp format, measured in milliseconds.
	UpdatedTimestamp int64 `json:"updated_timestamp"`
	// The time when the API key expires, in Unix timestamp format, measured in milliseconds. For permanent API keys, this property value is `null`.
	ExpiredTimestamp *int64 `json:"expired_timestamp,omitempty"`
	// The list of user roles and wallet scopes associated with the API key.
	RoleScopes []RoleScopes `json:"role_scopes,omitempty"`
}

type _GetApiKeyInfo200Response GetApiKeyInfo200Response

// NewGetApiKeyInfo200Response instantiates a new GetApiKeyInfo200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiKeyInfo200Response(name string, curveType string, key string, createdTimestamp int64, updatedTimestamp int64) *GetApiKeyInfo200Response {
	this := GetApiKeyInfo200Response{}
	this.Name = name
	this.CurveType = curveType
	this.Key = key
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	return &this
}

// NewGetApiKeyInfo200ResponseWithDefaults instantiates a new GetApiKeyInfo200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiKeyInfo200ResponseWithDefaults() *GetApiKeyInfo200Response {
	this := GetApiKeyInfo200Response{}
	return &this
}

// GetName returns the Name field value
func (o *GetApiKeyInfo200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetApiKeyInfo200Response) SetName(v string) {
	o.Name = v
}

// GetCurveType returns the CurveType field value
func (o *GetApiKeyInfo200Response) GetCurveType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurveType
}

// GetCurveTypeOk returns a tuple with the CurveType field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetCurveTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurveType, true
}

// SetCurveType sets field value
func (o *GetApiKeyInfo200Response) SetCurveType(v string) {
	o.CurveType = v
}

// GetKey returns the Key field value
func (o *GetApiKeyInfo200Response) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GetApiKeyInfo200Response) SetKey(v string) {
	o.Key = v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *GetApiKeyInfo200Response) GetCallbackUrl() string {
	if o == nil || IsNil(o.CallbackUrl) {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetCallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackUrl) {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *GetApiKeyInfo200Response) HasCallbackUrl() bool {
	if o != nil && !IsNil(o.CallbackUrl) {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *GetApiKeyInfo200Response) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetValidIps returns the ValidIps field value if set, zero value otherwise.
func (o *GetApiKeyInfo200Response) GetValidIps() []string {
	if o == nil || IsNil(o.ValidIps) {
		var ret []string
		return ret
	}
	return o.ValidIps
}

// GetValidIpsOk returns a tuple with the ValidIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetValidIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.ValidIps) {
		return nil, false
	}
	return o.ValidIps, true
}

// HasValidIps returns a boolean if a field has been set.
func (o *GetApiKeyInfo200Response) HasValidIps() bool {
	if o != nil && !IsNil(o.ValidIps) {
		return true
	}

	return false
}

// SetValidIps gets a reference to the given []string and assigns it to the ValidIps field.
func (o *GetApiKeyInfo200Response) SetValidIps(v []string) {
	o.ValidIps = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *GetApiKeyInfo200Response) GetCreatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *GetApiKeyInfo200Response) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *GetApiKeyInfo200Response) GetUpdatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetUpdatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *GetApiKeyInfo200Response) SetUpdatedTimestamp(v int64) {
	o.UpdatedTimestamp = v
}

// GetExpiredTimestamp returns the ExpiredTimestamp field value if set, zero value otherwise.
func (o *GetApiKeyInfo200Response) GetExpiredTimestamp() int64 {
	if o == nil || IsNil(o.ExpiredTimestamp) {
		var ret int64
		return ret
	}
	return *o.ExpiredTimestamp
}

// GetExpiredTimestampOk returns a tuple with the ExpiredTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetExpiredTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiredTimestamp) {
		return nil, false
	}
	return o.ExpiredTimestamp, true
}

// HasExpiredTimestamp returns a boolean if a field has been set.
func (o *GetApiKeyInfo200Response) HasExpiredTimestamp() bool {
	if o != nil && !IsNil(o.ExpiredTimestamp) {
		return true
	}

	return false
}

// SetExpiredTimestamp gets a reference to the given int64 and assigns it to the ExpiredTimestamp field.
func (o *GetApiKeyInfo200Response) SetExpiredTimestamp(v int64) {
	o.ExpiredTimestamp = &v
}

// GetRoleScopes returns the RoleScopes field value if set, zero value otherwise.
func (o *GetApiKeyInfo200Response) GetRoleScopes() []RoleScopes {
	if o == nil || IsNil(o.RoleScopes) {
		var ret []RoleScopes
		return ret
	}
	return o.RoleScopes
}

// GetRoleScopesOk returns a tuple with the RoleScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiKeyInfo200Response) GetRoleScopesOk() ([]RoleScopes, bool) {
	if o == nil || IsNil(o.RoleScopes) {
		return nil, false
	}
	return o.RoleScopes, true
}

// HasRoleScopes returns a boolean if a field has been set.
func (o *GetApiKeyInfo200Response) HasRoleScopes() bool {
	if o != nil && !IsNil(o.RoleScopes) {
		return true
	}

	return false
}

// SetRoleScopes gets a reference to the given []RoleScopes and assigns it to the RoleScopes field.
func (o *GetApiKeyInfo200Response) SetRoleScopes(v []RoleScopes) {
	o.RoleScopes = v
}

func (o GetApiKeyInfo200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiKeyInfo200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["curve_type"] = o.CurveType
	toSerialize["key"] = o.Key
	if !IsNil(o.CallbackUrl) {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if !IsNil(o.ValidIps) {
		toSerialize["valid_ips"] = o.ValidIps
	}
	toSerialize["created_timestamp"] = o.CreatedTimestamp
	toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	if !IsNil(o.ExpiredTimestamp) {
		toSerialize["expired_timestamp"] = o.ExpiredTimestamp
	}
	if !IsNil(o.RoleScopes) {
		toSerialize["role_scopes"] = o.RoleScopes
	}
	return toSerialize, nil
}

func (o *GetApiKeyInfo200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"curve_type",
		"key",
		"created_timestamp",
		"updated_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApiKeyInfo200Response := _GetApiKeyInfo200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApiKeyInfo200Response)

	if err != nil {
		return err
	}

	*o = GetApiKeyInfo200Response(varGetApiKeyInfo200Response)

	return err
}

type NullableGetApiKeyInfo200Response struct {
	value *GetApiKeyInfo200Response
	isSet bool
}

func (v NullableGetApiKeyInfo200Response) Get() *GetApiKeyInfo200Response {
	return v.value
}

func (v *NullableGetApiKeyInfo200Response) Set(val *GetApiKeyInfo200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiKeyInfo200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiKeyInfo200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiKeyInfo200Response(val *GetApiKeyInfo200Response) *NullableGetApiKeyInfo200Response {
	return &NullableGetApiKeyInfo200Response{value: val, isSet: true}
}

func (v NullableGetApiKeyInfo200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiKeyInfo200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


