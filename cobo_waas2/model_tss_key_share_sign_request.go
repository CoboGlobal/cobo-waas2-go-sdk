/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeyShareSignRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeyShareSignRequest{}

// TSSKeyShareSignRequest struct for TSSKeyShareSignRequest
type TSSKeyShareSignRequest struct {
	// The node ID of the key share holder.
	NodeId *string `json:"node_id,omitempty"`
	// The task ID.
	TaskId *string `json:"task_id,omitempty"`
	Details []TSSKeyShareSignDetail `json:"details,omitempty"`
	// The business task ID. This field contains the key share sign request ID.
	BizTaskId *string `json:"biz_task_id,omitempty"`
}

// NewTSSKeyShareSignRequest instantiates a new TSSKeyShareSignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeyShareSignRequest() *TSSKeyShareSignRequest {
	this := TSSKeyShareSignRequest{}
	return &this
}

// NewTSSKeyShareSignRequestWithDefaults instantiates a new TSSKeyShareSignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeyShareSignRequestWithDefaults() *TSSKeyShareSignRequest {
	this := TSSKeyShareSignRequest{}
	return &this
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *TSSKeyShareSignRequest) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyShareSignRequest) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *TSSKeyShareSignRequest) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *TSSKeyShareSignRequest) SetNodeId(v string) {
	o.NodeId = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *TSSKeyShareSignRequest) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyShareSignRequest) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *TSSKeyShareSignRequest) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *TSSKeyShareSignRequest) SetTaskId(v string) {
	o.TaskId = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *TSSKeyShareSignRequest) GetDetails() []TSSKeyShareSignDetail {
	if o == nil || IsNil(o.Details) {
		var ret []TSSKeyShareSignDetail
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyShareSignRequest) GetDetailsOk() ([]TSSKeyShareSignDetail, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *TSSKeyShareSignRequest) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []TSSKeyShareSignDetail and assigns it to the Details field.
func (o *TSSKeyShareSignRequest) SetDetails(v []TSSKeyShareSignDetail) {
	o.Details = v
}

// GetBizTaskId returns the BizTaskId field value if set, zero value otherwise.
func (o *TSSKeyShareSignRequest) GetBizTaskId() string {
	if o == nil || IsNil(o.BizTaskId) {
		var ret string
		return ret
	}
	return *o.BizTaskId
}

// GetBizTaskIdOk returns a tuple with the BizTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyShareSignRequest) GetBizTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.BizTaskId) {
		return nil, false
	}
	return o.BizTaskId, true
}

// HasBizTaskId returns a boolean if a field has been set.
func (o *TSSKeyShareSignRequest) HasBizTaskId() bool {
	if o != nil && !IsNil(o.BizTaskId) {
		return true
	}

	return false
}

// SetBizTaskId gets a reference to the given string and assigns it to the BizTaskId field.
func (o *TSSKeyShareSignRequest) SetBizTaskId(v string) {
	o.BizTaskId = &v
}

func (o TSSKeyShareSignRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeyShareSignRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.BizTaskId) {
		toSerialize["biz_task_id"] = o.BizTaskId
	}
	return toSerialize, nil
}

type NullableTSSKeyShareSignRequest struct {
	value *TSSKeyShareSignRequest
	isSet bool
}

func (v NullableTSSKeyShareSignRequest) Get() *TSSKeyShareSignRequest {
	return v.value
}

func (v *NullableTSSKeyShareSignRequest) Set(val *TSSKeyShareSignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeyShareSignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeyShareSignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeyShareSignRequest(val *TSSKeyShareSignRequest) *NullableTSSKeyShareSignRequest {
	return &NullableTSSKeyShareSignRequest{value: val, isSet: true}
}

func (v NullableTSSKeyShareSignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeyShareSignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


