/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookkeepingSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookkeepingSummary{}

// BookkeepingSummary The bookkeeping item information.
type BookkeepingSummary struct {
	// Total transaction count.
	TotalTransactionCount int32 `json:"total_transaction_count"`
	// The USD value of the inflow.
	TotalInflowValue string `json:"total_inflow_value"`
	// The USD value of the outflow.
	TotalOutflowValue string `json:"total_outflow_value"`
	// The USD value of the fee.
	TotalFeeValue *string `json:"total_fee_value,omitempty"`
}

type _BookkeepingSummary BookkeepingSummary

// NewBookkeepingSummary instantiates a new BookkeepingSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookkeepingSummary(totalTransactionCount int32, totalInflowValue string, totalOutflowValue string) *BookkeepingSummary {
	this := BookkeepingSummary{}
	this.TotalTransactionCount = totalTransactionCount
	this.TotalInflowValue = totalInflowValue
	this.TotalOutflowValue = totalOutflowValue
	return &this
}

// NewBookkeepingSummaryWithDefaults instantiates a new BookkeepingSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookkeepingSummaryWithDefaults() *BookkeepingSummary {
	this := BookkeepingSummary{}
	return &this
}

// GetTotalTransactionCount returns the TotalTransactionCount field value
func (o *BookkeepingSummary) GetTotalTransactionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalTransactionCount
}

// GetTotalTransactionCountOk returns a tuple with the TotalTransactionCount field value
// and a boolean to check if the value has been set.
func (o *BookkeepingSummary) GetTotalTransactionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTransactionCount, true
}

// SetTotalTransactionCount sets field value
func (o *BookkeepingSummary) SetTotalTransactionCount(v int32) {
	o.TotalTransactionCount = v
}

// GetTotalInflowValue returns the TotalInflowValue field value
func (o *BookkeepingSummary) GetTotalInflowValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalInflowValue
}

// GetTotalInflowValueOk returns a tuple with the TotalInflowValue field value
// and a boolean to check if the value has been set.
func (o *BookkeepingSummary) GetTotalInflowValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalInflowValue, true
}

// SetTotalInflowValue sets field value
func (o *BookkeepingSummary) SetTotalInflowValue(v string) {
	o.TotalInflowValue = v
}

// GetTotalOutflowValue returns the TotalOutflowValue field value
func (o *BookkeepingSummary) GetTotalOutflowValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalOutflowValue
}

// GetTotalOutflowValueOk returns a tuple with the TotalOutflowValue field value
// and a boolean to check if the value has been set.
func (o *BookkeepingSummary) GetTotalOutflowValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalOutflowValue, true
}

// SetTotalOutflowValue sets field value
func (o *BookkeepingSummary) SetTotalOutflowValue(v string) {
	o.TotalOutflowValue = v
}

// GetTotalFeeValue returns the TotalFeeValue field value if set, zero value otherwise.
func (o *BookkeepingSummary) GetTotalFeeValue() string {
	if o == nil || IsNil(o.TotalFeeValue) {
		var ret string
		return ret
	}
	return *o.TotalFeeValue
}

// GetTotalFeeValueOk returns a tuple with the TotalFeeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookkeepingSummary) GetTotalFeeValueOk() (*string, bool) {
	if o == nil || IsNil(o.TotalFeeValue) {
		return nil, false
	}
	return o.TotalFeeValue, true
}

// HasTotalFeeValue returns a boolean if a field has been set.
func (o *BookkeepingSummary) HasTotalFeeValue() bool {
	if o != nil && !IsNil(o.TotalFeeValue) {
		return true
	}

	return false
}

// SetTotalFeeValue gets a reference to the given string and assigns it to the TotalFeeValue field.
func (o *BookkeepingSummary) SetTotalFeeValue(v string) {
	o.TotalFeeValue = &v
}

func (o BookkeepingSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookkeepingSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_transaction_count"] = o.TotalTransactionCount
	toSerialize["total_inflow_value"] = o.TotalInflowValue
	toSerialize["total_outflow_value"] = o.TotalOutflowValue
	if !IsNil(o.TotalFeeValue) {
		toSerialize["total_fee_value"] = o.TotalFeeValue
	}
	return toSerialize, nil
}

func (o *BookkeepingSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_transaction_count",
		"total_inflow_value",
		"total_outflow_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookkeepingSummary := _BookkeepingSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookkeepingSummary)

	if err != nil {
		return err
	}

	*o = BookkeepingSummary(varBookkeepingSummary)

	return err
}

type NullableBookkeepingSummary struct {
	value *BookkeepingSummary
	isSet bool
}

func (v NullableBookkeepingSummary) Get() *BookkeepingSummary {
	return v.value
}

func (v *NullableBookkeepingSummary) Set(val *BookkeepingSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableBookkeepingSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableBookkeepingSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookkeepingSummary(val *BookkeepingSummary) *NullableBookkeepingSummary {
	return &NullableBookkeepingSummary{value: val, isSet: true}
}

func (v NullableBookkeepingSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookkeepingSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


