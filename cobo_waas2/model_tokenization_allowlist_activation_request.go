/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationAllowlistActivationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationAllowlistActivationRequest{}

// TokenizationAllowlistActivationRequest struct for TokenizationAllowlistActivationRequest
type TokenizationAllowlistActivationRequest struct {
	Source TokenizationTokenOperationSource `json:"source"`
	// Whether to activate the allowlist feature for the token.
	Activation bool `json:"activation"`
	// The initiator of the tokenization activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
	AppInitiator *string `json:"app_initiator,omitempty"`
	Fee TransactionRequestFee `json:"fee"`
}

type _TokenizationAllowlistActivationRequest TokenizationAllowlistActivationRequest

// NewTokenizationAllowlistActivationRequest instantiates a new TokenizationAllowlistActivationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationAllowlistActivationRequest(source TokenizationTokenOperationSource, activation bool, fee TransactionRequestFee) *TokenizationAllowlistActivationRequest {
	this := TokenizationAllowlistActivationRequest{}
	this.Source = source
	this.Activation = activation
	this.Fee = fee
	return &this
}

// NewTokenizationAllowlistActivationRequestWithDefaults instantiates a new TokenizationAllowlistActivationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationAllowlistActivationRequestWithDefaults() *TokenizationAllowlistActivationRequest {
	this := TokenizationAllowlistActivationRequest{}
	return &this
}

// GetSource returns the Source field value
func (o *TokenizationAllowlistActivationRequest) GetSource() TokenizationTokenOperationSource {
	if o == nil {
		var ret TokenizationTokenOperationSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TokenizationAllowlistActivationRequest) GetSourceOk() (*TokenizationTokenOperationSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TokenizationAllowlistActivationRequest) SetSource(v TokenizationTokenOperationSource) {
	o.Source = v
}

// GetActivation returns the Activation field value
func (o *TokenizationAllowlistActivationRequest) GetActivation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Activation
}

// GetActivationOk returns a tuple with the Activation field value
// and a boolean to check if the value has been set.
func (o *TokenizationAllowlistActivationRequest) GetActivationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Activation, true
}

// SetActivation sets field value
func (o *TokenizationAllowlistActivationRequest) SetActivation(v bool) {
	o.Activation = v
}

// GetAppInitiator returns the AppInitiator field value if set, zero value otherwise.
func (o *TokenizationAllowlistActivationRequest) GetAppInitiator() string {
	if o == nil || IsNil(o.AppInitiator) {
		var ret string
		return ret
	}
	return *o.AppInitiator
}

// GetAppInitiatorOk returns a tuple with the AppInitiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizationAllowlistActivationRequest) GetAppInitiatorOk() (*string, bool) {
	if o == nil || IsNil(o.AppInitiator) {
		return nil, false
	}
	return o.AppInitiator, true
}

// HasAppInitiator returns a boolean if a field has been set.
func (o *TokenizationAllowlistActivationRequest) HasAppInitiator() bool {
	if o != nil && !IsNil(o.AppInitiator) {
		return true
	}

	return false
}

// SetAppInitiator gets a reference to the given string and assigns it to the AppInitiator field.
func (o *TokenizationAllowlistActivationRequest) SetAppInitiator(v string) {
	o.AppInitiator = &v
}

// GetFee returns the Fee field value
func (o *TokenizationAllowlistActivationRequest) GetFee() TransactionRequestFee {
	if o == nil {
		var ret TransactionRequestFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *TokenizationAllowlistActivationRequest) GetFeeOk() (*TransactionRequestFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *TokenizationAllowlistActivationRequest) SetFee(v TransactionRequestFee) {
	o.Fee = v
}

func (o TokenizationAllowlistActivationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationAllowlistActivationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["activation"] = o.Activation
	if !IsNil(o.AppInitiator) {
		toSerialize["app_initiator"] = o.AppInitiator
	}
	toSerialize["fee"] = o.Fee
	return toSerialize, nil
}

func (o *TokenizationAllowlistActivationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source",
		"activation",
		"fee",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationAllowlistActivationRequest := _TokenizationAllowlistActivationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationAllowlistActivationRequest)

	if err != nil {
		return err
	}

	*o = TokenizationAllowlistActivationRequest(varTokenizationAllowlistActivationRequest)

	return err
}

type NullableTokenizationAllowlistActivationRequest struct {
	value *TokenizationAllowlistActivationRequest
	isSet bool
}

func (v NullableTokenizationAllowlistActivationRequest) Get() *TokenizationAllowlistActivationRequest {
	return v.value
}

func (v *NullableTokenizationAllowlistActivationRequest) Set(val *TokenizationAllowlistActivationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationAllowlistActivationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationAllowlistActivationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationAllowlistActivationRequest(val *TokenizationAllowlistActivationRequest) *NullableTokenizationAllowlistActivationRequest {
	return &NullableTokenizationAllowlistActivationRequest{value: val, isSet: true}
}

func (v NullableTokenizationAllowlistActivationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationAllowlistActivationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


