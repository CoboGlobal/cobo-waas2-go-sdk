/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CheckAddressChainsValidity200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckAddressChainsValidity200ResponseInner{}

// CheckAddressChainsValidity200ResponseInner struct for CheckAddressChainsValidity200ResponseInner
type CheckAddressChainsValidity200ResponseInner struct {
	// The chain ID, which is the unique identifier of a blockchain.
	ChainId string `json:"chain_id"`
	// Whether the address is valid for the specified chain.  - `true`: The address is valid.  - `false`: The address is invalid. 
	Validity bool `json:"validity"`
}

type _CheckAddressChainsValidity200ResponseInner CheckAddressChainsValidity200ResponseInner

// NewCheckAddressChainsValidity200ResponseInner instantiates a new CheckAddressChainsValidity200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAddressChainsValidity200ResponseInner(chainId string, validity bool) *CheckAddressChainsValidity200ResponseInner {
	this := CheckAddressChainsValidity200ResponseInner{}
	this.ChainId = chainId
	this.Validity = validity
	return &this
}

// NewCheckAddressChainsValidity200ResponseInnerWithDefaults instantiates a new CheckAddressChainsValidity200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAddressChainsValidity200ResponseInnerWithDefaults() *CheckAddressChainsValidity200ResponseInner {
	this := CheckAddressChainsValidity200ResponseInner{}
	return &this
}

// GetChainId returns the ChainId field value
func (o *CheckAddressChainsValidity200ResponseInner) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *CheckAddressChainsValidity200ResponseInner) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *CheckAddressChainsValidity200ResponseInner) SetChainId(v string) {
	o.ChainId = v
}

// GetValidity returns the Validity field value
func (o *CheckAddressChainsValidity200ResponseInner) GetValidity() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Validity
}

// GetValidityOk returns a tuple with the Validity field value
// and a boolean to check if the value has been set.
func (o *CheckAddressChainsValidity200ResponseInner) GetValidityOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Validity, true
}

// SetValidity sets field value
func (o *CheckAddressChainsValidity200ResponseInner) SetValidity(v bool) {
	o.Validity = v
}

func (o CheckAddressChainsValidity200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckAddressChainsValidity200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chain_id"] = o.ChainId
	toSerialize["validity"] = o.Validity
	return toSerialize, nil
}

func (o *CheckAddressChainsValidity200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain_id",
		"validity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckAddressChainsValidity200ResponseInner := _CheckAddressChainsValidity200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCheckAddressChainsValidity200ResponseInner)

	if err != nil {
		return err
	}

	*o = CheckAddressChainsValidity200ResponseInner(varCheckAddressChainsValidity200ResponseInner)

	return err
}

type NullableCheckAddressChainsValidity200ResponseInner struct {
	value *CheckAddressChainsValidity200ResponseInner
	isSet bool
}

func (v NullableCheckAddressChainsValidity200ResponseInner) Get() *CheckAddressChainsValidity200ResponseInner {
	return v.value
}

func (v *NullableCheckAddressChainsValidity200ResponseInner) Set(val *CheckAddressChainsValidity200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAddressChainsValidity200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAddressChainsValidity200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAddressChainsValidity200ResponseInner(val *CheckAddressChainsValidity200ResponseInner) *NullableCheckAddressChainsValidity200ResponseInner {
	return &NullableCheckAddressChainsValidity200ResponseInner{value: val, isSet: true}
}

func (v NullableCheckAddressChainsValidity200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAddressChainsValidity200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


