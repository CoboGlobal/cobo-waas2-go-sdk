/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationUnpauseTokenParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationUnpauseTokenParams{}

// TokenizationUnpauseTokenParams struct for TokenizationUnpauseTokenParams
type TokenizationUnpauseTokenParams struct {
	Source TokenizationTokenOperationSource `json:"source"`
}

type _TokenizationUnpauseTokenParams TokenizationUnpauseTokenParams

// NewTokenizationUnpauseTokenParams instantiates a new TokenizationUnpauseTokenParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationUnpauseTokenParams(source TokenizationTokenOperationSource) *TokenizationUnpauseTokenParams {
	this := TokenizationUnpauseTokenParams{}
	this.Source = source
	return &this
}

// NewTokenizationUnpauseTokenParamsWithDefaults instantiates a new TokenizationUnpauseTokenParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationUnpauseTokenParamsWithDefaults() *TokenizationUnpauseTokenParams {
	this := TokenizationUnpauseTokenParams{}
	return &this
}

// GetSource returns the Source field value
func (o *TokenizationUnpauseTokenParams) GetSource() TokenizationTokenOperationSource {
	if o == nil {
		var ret TokenizationTokenOperationSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TokenizationUnpauseTokenParams) GetSourceOk() (*TokenizationTokenOperationSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TokenizationUnpauseTokenParams) SetSource(v TokenizationTokenOperationSource) {
	o.Source = v
}

func (o TokenizationUnpauseTokenParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationUnpauseTokenParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	return toSerialize, nil
}

func (o *TokenizationUnpauseTokenParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationUnpauseTokenParams := _TokenizationUnpauseTokenParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationUnpauseTokenParams)

	if err != nil {
		return err
	}

	*o = TokenizationUnpauseTokenParams(varTokenizationUnpauseTokenParams)

	return err
}

type NullableTokenizationUnpauseTokenParams struct {
	value *TokenizationUnpauseTokenParams
	isSet bool
}

func (v NullableTokenizationUnpauseTokenParams) Get() *TokenizationUnpauseTokenParams {
	return v.value
}

func (v *NullableTokenizationUnpauseTokenParams) Set(val *TokenizationUnpauseTokenParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationUnpauseTokenParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationUnpauseTokenParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationUnpauseTokenParams(val *TokenizationUnpauseTokenParams) *NullableTokenizationUnpauseTokenParams {
	return &NullableTokenizationUnpauseTokenParams{value: val, isSet: true}
}

func (v NullableTokenizationUnpauseTokenParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationUnpauseTokenParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


