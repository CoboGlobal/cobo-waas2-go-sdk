/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentExtendPeriodSubscriptionActionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentExtendPeriodSubscriptionActionData{}

// PaymentExtendPeriodSubscriptionActionData struct for PaymentExtendPeriodSubscriptionActionData
type PaymentExtendPeriodSubscriptionActionData struct {
	// The periods needed updated.
	Periods *int32 `json:"periods,omitempty"`
	ActionType PaymentSubscriptionActionType `json:"action_type"`
	// The subscription id in cobo.
	SubscriptionId string `json:"subscription_id"`
	// The signature for transaction.
	Signature string `json:"signature"`
}

type _PaymentExtendPeriodSubscriptionActionData PaymentExtendPeriodSubscriptionActionData

// NewPaymentExtendPeriodSubscriptionActionData instantiates a new PaymentExtendPeriodSubscriptionActionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentExtendPeriodSubscriptionActionData(actionType PaymentSubscriptionActionType, subscriptionId string, signature string) *PaymentExtendPeriodSubscriptionActionData {
	this := PaymentExtendPeriodSubscriptionActionData{}
	this.ActionType = actionType
	this.SubscriptionId = subscriptionId
	this.Signature = signature
	return &this
}

// NewPaymentExtendPeriodSubscriptionActionDataWithDefaults instantiates a new PaymentExtendPeriodSubscriptionActionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentExtendPeriodSubscriptionActionDataWithDefaults() *PaymentExtendPeriodSubscriptionActionData {
	this := PaymentExtendPeriodSubscriptionActionData{}
	return &this
}

// GetPeriods returns the Periods field value if set, zero value otherwise.
func (o *PaymentExtendPeriodSubscriptionActionData) GetPeriods() int32 {
	if o == nil || IsNil(o.Periods) {
		var ret int32
		return ret
	}
	return *o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentExtendPeriodSubscriptionActionData) GetPeriodsOk() (*int32, bool) {
	if o == nil || IsNil(o.Periods) {
		return nil, false
	}
	return o.Periods, true
}

// HasPeriods returns a boolean if a field has been set.
func (o *PaymentExtendPeriodSubscriptionActionData) HasPeriods() bool {
	if o != nil && !IsNil(o.Periods) {
		return true
	}

	return false
}

// SetPeriods gets a reference to the given int32 and assigns it to the Periods field.
func (o *PaymentExtendPeriodSubscriptionActionData) SetPeriods(v int32) {
	o.Periods = &v
}

// GetActionType returns the ActionType field value
func (o *PaymentExtendPeriodSubscriptionActionData) GetActionType() PaymentSubscriptionActionType {
	if o == nil {
		var ret PaymentSubscriptionActionType
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *PaymentExtendPeriodSubscriptionActionData) GetActionTypeOk() (*PaymentSubscriptionActionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *PaymentExtendPeriodSubscriptionActionData) SetActionType(v PaymentSubscriptionActionType) {
	o.ActionType = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PaymentExtendPeriodSubscriptionActionData) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PaymentExtendPeriodSubscriptionActionData) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PaymentExtendPeriodSubscriptionActionData) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetSignature returns the Signature field value
func (o *PaymentExtendPeriodSubscriptionActionData) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *PaymentExtendPeriodSubscriptionActionData) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *PaymentExtendPeriodSubscriptionActionData) SetSignature(v string) {
	o.Signature = v
}

func (o PaymentExtendPeriodSubscriptionActionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentExtendPeriodSubscriptionActionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Periods) {
		toSerialize["periods"] = o.Periods
	}
	toSerialize["action_type"] = o.ActionType
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

func (o *PaymentExtendPeriodSubscriptionActionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action_type",
		"subscription_id",
		"signature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentExtendPeriodSubscriptionActionData := _PaymentExtendPeriodSubscriptionActionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentExtendPeriodSubscriptionActionData)

	if err != nil {
		return err
	}

	*o = PaymentExtendPeriodSubscriptionActionData(varPaymentExtendPeriodSubscriptionActionData)

	return err
}

type NullablePaymentExtendPeriodSubscriptionActionData struct {
	value *PaymentExtendPeriodSubscriptionActionData
	isSet bool
}

func (v NullablePaymentExtendPeriodSubscriptionActionData) Get() *PaymentExtendPeriodSubscriptionActionData {
	return v.value
}

func (v *NullablePaymentExtendPeriodSubscriptionActionData) Set(val *PaymentExtendPeriodSubscriptionActionData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentExtendPeriodSubscriptionActionData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentExtendPeriodSubscriptionActionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentExtendPeriodSubscriptionActionData(val *PaymentExtendPeriodSubscriptionActionData) *NullablePaymentExtendPeriodSubscriptionActionData {
	return &NullablePaymentExtendPeriodSubscriptionActionData{value: val, isSet: true}
}

func (v NullablePaymentExtendPeriodSubscriptionActionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentExtendPeriodSubscriptionActionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


