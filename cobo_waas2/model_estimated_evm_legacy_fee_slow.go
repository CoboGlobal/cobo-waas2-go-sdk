/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EstimatedEvmLegacyFeeSlow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EstimatedEvmLegacyFeeSlow{}

// EstimatedEvmLegacyFeeSlow struct for EstimatedEvmLegacyFeeSlow
type EstimatedEvmLegacyFeeSlow struct {
	// The gas price, in wei. The gas price represents the amount of ETH that must be paid to validators for processing transactions per gas unit used.
	GasPrice string `json:"gas_price"`
	// The gas limit. It represents the maximum number of gas units that you are willing to pay for the execution of a transaction or Ethereum Virtual Machine (EVM) operation. The gas unit cost of each operation varies.
	GasLimit string `json:"gas_limit"`
	// The estimated fee required for submitting the transaction data to L1 (Layer 1), measured in wei.
	ReservedFee *string `json:"reserved_fee,omitempty"`
}

type _EstimatedEvmLegacyFeeSlow EstimatedEvmLegacyFeeSlow

// NewEstimatedEvmLegacyFeeSlow instantiates a new EstimatedEvmLegacyFeeSlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstimatedEvmLegacyFeeSlow(gasPrice string, gasLimit string) *EstimatedEvmLegacyFeeSlow {
	this := EstimatedEvmLegacyFeeSlow{}
	this.GasPrice = gasPrice
	this.GasLimit = gasLimit
	return &this
}

// NewEstimatedEvmLegacyFeeSlowWithDefaults instantiates a new EstimatedEvmLegacyFeeSlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstimatedEvmLegacyFeeSlowWithDefaults() *EstimatedEvmLegacyFeeSlow {
	this := EstimatedEvmLegacyFeeSlow{}
	return &this
}

// GetGasPrice returns the GasPrice field value
func (o *EstimatedEvmLegacyFeeSlow) GetGasPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value
// and a boolean to check if the value has been set.
func (o *EstimatedEvmLegacyFeeSlow) GetGasPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasPrice, true
}

// SetGasPrice sets field value
func (o *EstimatedEvmLegacyFeeSlow) SetGasPrice(v string) {
	o.GasPrice = v
}

// GetGasLimit returns the GasLimit field value
func (o *EstimatedEvmLegacyFeeSlow) GetGasLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value
// and a boolean to check if the value has been set.
func (o *EstimatedEvmLegacyFeeSlow) GetGasLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasLimit, true
}

// SetGasLimit sets field value
func (o *EstimatedEvmLegacyFeeSlow) SetGasLimit(v string) {
	o.GasLimit = v
}

// GetReservedFee returns the ReservedFee field value if set, zero value otherwise.
func (o *EstimatedEvmLegacyFeeSlow) GetReservedFee() string {
	if o == nil || IsNil(o.ReservedFee) {
		var ret string
		return ret
	}
	return *o.ReservedFee
}

// GetReservedFeeOk returns a tuple with the ReservedFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimatedEvmLegacyFeeSlow) GetReservedFeeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservedFee) {
		return nil, false
	}
	return o.ReservedFee, true
}

// HasReservedFee returns a boolean if a field has been set.
func (o *EstimatedEvmLegacyFeeSlow) HasReservedFee() bool {
	if o != nil && !IsNil(o.ReservedFee) {
		return true
	}

	return false
}

// SetReservedFee gets a reference to the given string and assigns it to the ReservedFee field.
func (o *EstimatedEvmLegacyFeeSlow) SetReservedFee(v string) {
	o.ReservedFee = &v
}

func (o EstimatedEvmLegacyFeeSlow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EstimatedEvmLegacyFeeSlow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gas_price"] = o.GasPrice
	toSerialize["gas_limit"] = o.GasLimit
	if !IsNil(o.ReservedFee) {
		toSerialize["reserved_fee"] = o.ReservedFee
	}
	return toSerialize, nil
}

func (o *EstimatedEvmLegacyFeeSlow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gas_price",
		"gas_limit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEstimatedEvmLegacyFeeSlow := _EstimatedEvmLegacyFeeSlow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEstimatedEvmLegacyFeeSlow)

	if err != nil {
		return err
	}

	*o = EstimatedEvmLegacyFeeSlow(varEstimatedEvmLegacyFeeSlow)

	return err
}

type NullableEstimatedEvmLegacyFeeSlow struct {
	value *EstimatedEvmLegacyFeeSlow
	isSet bool
}

func (v NullableEstimatedEvmLegacyFeeSlow) Get() *EstimatedEvmLegacyFeeSlow {
	return v.value
}

func (v *NullableEstimatedEvmLegacyFeeSlow) Set(val *EstimatedEvmLegacyFeeSlow) {
	v.value = val
	v.isSet = true
}

func (v NullableEstimatedEvmLegacyFeeSlow) IsSet() bool {
	return v.isSet
}

func (v *NullableEstimatedEvmLegacyFeeSlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstimatedEvmLegacyFeeSlow(val *EstimatedEvmLegacyFeeSlow) *NullableEstimatedEvmLegacyFeeSlow {
	return &NullableEstimatedEvmLegacyFeeSlow{value: val, isSet: true}
}

func (v NullableEstimatedEvmLegacyFeeSlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstimatedEvmLegacyFeeSlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


