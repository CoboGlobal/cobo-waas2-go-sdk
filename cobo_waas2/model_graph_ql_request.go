/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GraphQLRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLRequest{}

// GraphQLRequest The request body for a GraphQL query or mutation.
type GraphQLRequest struct {
	// The GraphQL query or mutation as a string.
	Query string `json:"query"`
	// Variables to use in the GraphQL operation. Can include dynamic values required for the query or mutation.
	Variables map[string]interface{} `json:"variables,omitempty"`
	// The operation name in case of multiple operations in the same query or mutation.
	OperationName *string `json:"operationName,omitempty"`
}

type _GraphQLRequest GraphQLRequest

// NewGraphQLRequest instantiates a new GraphQLRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLRequest(query string) *GraphQLRequest {
	this := GraphQLRequest{}
	this.Query = query
	return &this
}

// NewGraphQLRequestWithDefaults instantiates a new GraphQLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLRequestWithDefaults() *GraphQLRequest {
	this := GraphQLRequest{}
	return &this
}

// GetQuery returns the Query field value
func (o *GraphQLRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *GraphQLRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *GraphQLRequest) SetQuery(v string) {
	o.Query = v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *GraphQLRequest) GetVariables() map[string]interface{} {
	if o == nil || IsNil(o.Variables) {
		var ret map[string]interface{}
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLRequest) GetVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Variables) {
		return map[string]interface{}{}, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *GraphQLRequest) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *GraphQLRequest) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

// GetOperationName returns the OperationName field value if set, zero value otherwise.
func (o *GraphQLRequest) GetOperationName() string {
	if o == nil || IsNil(o.OperationName) {
		var ret string
		return ret
	}
	return *o.OperationName
}

// GetOperationNameOk returns a tuple with the OperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLRequest) GetOperationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OperationName) {
		return nil, false
	}
	return o.OperationName, true
}

// HasOperationName returns a boolean if a field has been set.
func (o *GraphQLRequest) HasOperationName() bool {
	if o != nil && !IsNil(o.OperationName) {
		return true
	}

	return false
}

// SetOperationName gets a reference to the given string and assigns it to the OperationName field.
func (o *GraphQLRequest) SetOperationName(v string) {
	o.OperationName = &v
}

func (o GraphQLRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["query"] = o.Query
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	if !IsNil(o.OperationName) {
		toSerialize["operationName"] = o.OperationName
	}
	return toSerialize, nil
}

func (o *GraphQLRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"query",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGraphQLRequest := _GraphQLRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGraphQLRequest)

	if err != nil {
		return err
	}

	*o = GraphQLRequest(varGraphQLRequest)

	return err
}

type NullableGraphQLRequest struct {
	value *GraphQLRequest
	isSet bool
}

func (v NullableGraphQLRequest) Get() *GraphQLRequest {
	return v.value
}

func (v *NullableGraphQLRequest) Set(val *GraphQLRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLRequest(val *GraphQLRequest) *NullableGraphQLRequest {
	return &NullableGraphQLRequest{value: val, isSet: true}
}

func (v NullableGraphQLRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


