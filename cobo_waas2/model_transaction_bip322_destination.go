/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionBIP322Destination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionBIP322Destination{}

// TransactionBIP322Destination The information about the destination `BTC_BIP_322`. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.  Switch between the tabs to display the properties for different transaction destinations. 
type TransactionBIP322Destination struct {
	DestinationType TransactionDestinationType `json:"destination_type"`
	// Message to be signed, in hexadecimal format.
	MessageBip322 string `json:"message_bip322"`
}

type _TransactionBIP322Destination TransactionBIP322Destination

// NewTransactionBIP322Destination instantiates a new TransactionBIP322Destination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionBIP322Destination(destinationType TransactionDestinationType, messageBip322 string) *TransactionBIP322Destination {
	this := TransactionBIP322Destination{}
	this.DestinationType = destinationType
	this.MessageBip322 = messageBip322
	return &this
}

// NewTransactionBIP322DestinationWithDefaults instantiates a new TransactionBIP322Destination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionBIP322DestinationWithDefaults() *TransactionBIP322Destination {
	this := TransactionBIP322Destination{}
	return &this
}

// GetDestinationType returns the DestinationType field value
func (o *TransactionBIP322Destination) GetDestinationType() TransactionDestinationType {
	if o == nil {
		var ret TransactionDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *TransactionBIP322Destination) GetDestinationTypeOk() (*TransactionDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *TransactionBIP322Destination) SetDestinationType(v TransactionDestinationType) {
	o.DestinationType = v
}

// GetMessageBip322 returns the MessageBip322 field value
func (o *TransactionBIP322Destination) GetMessageBip322() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageBip322
}

// GetMessageBip322Ok returns a tuple with the MessageBip322 field value
// and a boolean to check if the value has been set.
func (o *TransactionBIP322Destination) GetMessageBip322Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageBip322, true
}

// SetMessageBip322 sets field value
func (o *TransactionBIP322Destination) SetMessageBip322(v string) {
	o.MessageBip322 = v
}

func (o TransactionBIP322Destination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionBIP322Destination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_type"] = o.DestinationType
	toSerialize["message_bip322"] = o.MessageBip322
	return toSerialize, nil
}

func (o *TransactionBIP322Destination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_type",
		"message_bip322",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionBIP322Destination := _TransactionBIP322Destination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionBIP322Destination)

	if err != nil {
		return err
	}

	*o = TransactionBIP322Destination(varTransactionBIP322Destination)

	return err
}

type NullableTransactionBIP322Destination struct {
	value *TransactionBIP322Destination
	isSet bool
}

func (v NullableTransactionBIP322Destination) Get() *TransactionBIP322Destination {
	return v.value
}

func (v *NullableTransactionBIP322Destination) Set(val *TransactionBIP322Destination) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionBIP322Destination) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionBIP322Destination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionBIP322Destination(val *TransactionBIP322Destination) *NullableTransactionBIP322Destination {
	return &NullableTransactionBIP322Destination{value: val, isSet: true}
}

func (v NullableTransactionBIP322Destination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionBIP322Destination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


