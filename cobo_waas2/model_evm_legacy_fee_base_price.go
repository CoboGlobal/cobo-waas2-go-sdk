/*
Cobo Wallet as a Service 2.0

API version: 1.1.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the EvmLegacyFeeBasePrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EvmLegacyFeeBasePrice{}

// EvmLegacyFeeBasePrice The transaction gas price based on the legacy fee model.
type EvmLegacyFeeBasePrice struct {
	// The gas price, in wei. The gas price represents the amount of ETH that must be paid to validators for processing transactions per gas unit used.
	GasPrice *string `json:"gas_price,omitempty"`
}

// NewEvmLegacyFeeBasePrice instantiates a new EvmLegacyFeeBasePrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvmLegacyFeeBasePrice() *EvmLegacyFeeBasePrice {
	this := EvmLegacyFeeBasePrice{}
	return &this
}

// NewEvmLegacyFeeBasePriceWithDefaults instantiates a new EvmLegacyFeeBasePrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvmLegacyFeeBasePriceWithDefaults() *EvmLegacyFeeBasePrice {
	this := EvmLegacyFeeBasePrice{}
	return &this
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *EvmLegacyFeeBasePrice) GetGasPrice() string {
	if o == nil || IsNil(o.GasPrice) {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvmLegacyFeeBasePrice) GetGasPriceOk() (*string, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *EvmLegacyFeeBasePrice) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *EvmLegacyFeeBasePrice) SetGasPrice(v string) {
	o.GasPrice = &v
}

func (o EvmLegacyFeeBasePrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EvmLegacyFeeBasePrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GasPrice) {
		toSerialize["gas_price"] = o.GasPrice
	}
	return toSerialize, nil
}

type NullableEvmLegacyFeeBasePrice struct {
	value *EvmLegacyFeeBasePrice
	isSet bool
}

func (v NullableEvmLegacyFeeBasePrice) Get() *EvmLegacyFeeBasePrice {
	return v.value
}

func (v *NullableEvmLegacyFeeBasePrice) Set(val *EvmLegacyFeeBasePrice) {
	v.value = val
	v.isSet = true
}

func (v NullableEvmLegacyFeeBasePrice) IsSet() bool {
	return v.isSet
}

func (v *NullableEvmLegacyFeeBasePrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvmLegacyFeeBasePrice(val *EvmLegacyFeeBasePrice) *NullableEvmLegacyFeeBasePrice {
	return &NullableEvmLegacyFeeBasePrice{value: val, isSet: true}
}

func (v NullableEvmLegacyFeeBasePrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvmLegacyFeeBasePrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


