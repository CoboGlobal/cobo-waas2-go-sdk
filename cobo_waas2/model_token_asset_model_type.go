/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"fmt"
)

// TokenAssetModelType The asset model type. Possible values include:  - `Account`: The account model. This model tracks the balances of user accounts, similar to the traditional banking system.  - `UTXO`: The UTXO model. This model tracks individual outputs of a transaction rather than account balances. Each transaction consists of inputs (previous UTXOs) and outputs (new UTXOs). 
type TokenAssetModelType string

// List of TokenAssetModelType
const (
	TOKENASSETMODELTYPE_ACCOUNT TokenAssetModelType = "Account"
	TOKENASSETMODELTYPE_UTXO TokenAssetModelType = "UTXO"
)

// All allowed values of TokenAssetModelType enum
var AllowedTokenAssetModelTypeEnumValues = []TokenAssetModelType{
	"Account",
	"UTXO",
}

func (v *TokenAssetModelType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TokenAssetModelType(value)
	for _, existing := range AllowedTokenAssetModelTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}
	*v = TokenAssetModelType("unknown")
	return nil
}

// NewTokenAssetModelTypeFromValue returns a pointer to a valid TokenAssetModelType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTokenAssetModelTypeFromValue(v string) (*TokenAssetModelType, error) {
	ev := TokenAssetModelType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TokenAssetModelType: valid values are %v", v, AllowedTokenAssetModelTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TokenAssetModelType) IsValid() bool {
	for _, existing := range AllowedTokenAssetModelTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TokenAssetModelType value
func (v TokenAssetModelType) Ptr() *TokenAssetModelType {
	return &v
}

type NullableTokenAssetModelType struct {
	value *TokenAssetModelType
	isSet bool
}

func (v NullableTokenAssetModelType) Get() *TokenAssetModelType {
	return v.value
}

func (v *NullableTokenAssetModelType) Set(val *TokenAssetModelType) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenAssetModelType) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenAssetModelType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenAssetModelType(val *TokenAssetModelType) *NullableTokenAssetModelType {
	return &NullableTokenAssetModelType{value: val, isSet: true}
}

func (v NullableTokenAssetModelType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenAssetModelType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

