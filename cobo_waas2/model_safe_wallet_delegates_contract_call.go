/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SafeWalletDelegatesContractCall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SafeWalletDelegatesContractCall{}

// SafeWalletDelegatesContractCall struct for SafeWalletDelegatesContractCall
type SafeWalletDelegatesContractCall struct {
	RequestType EstimateFeeRequestType `json:"request_type"`
	// The destination address.
	Address *string `json:"address,omitempty"`
	// The transfer amount. For example, if you trade 1.5 ETH, then the value is `1.5`. 
	Value *string `json:"value,omitempty"`
	// The data that is used to invoke a specific function or method within the specified contract at the destination address. 
	Calldata *string `json:"calldata,omitempty"`
}

type _SafeWalletDelegatesContractCall SafeWalletDelegatesContractCall

// NewSafeWalletDelegatesContractCall instantiates a new SafeWalletDelegatesContractCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafeWalletDelegatesContractCall(requestType EstimateFeeRequestType) *SafeWalletDelegatesContractCall {
	this := SafeWalletDelegatesContractCall{}
	this.RequestType = requestType
	return &this
}

// NewSafeWalletDelegatesContractCallWithDefaults instantiates a new SafeWalletDelegatesContractCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafeWalletDelegatesContractCallWithDefaults() *SafeWalletDelegatesContractCall {
	this := SafeWalletDelegatesContractCall{}
	return &this
}

// GetRequestType returns the RequestType field value
func (o *SafeWalletDelegatesContractCall) GetRequestType() EstimateFeeRequestType {
	if o == nil {
		var ret EstimateFeeRequestType
		return ret
	}

	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value
// and a boolean to check if the value has been set.
func (o *SafeWalletDelegatesContractCall) GetRequestTypeOk() (*EstimateFeeRequestType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// SetRequestType sets field value
func (o *SafeWalletDelegatesContractCall) SetRequestType(v EstimateFeeRequestType) {
	o.RequestType = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SafeWalletDelegatesContractCall) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeWalletDelegatesContractCall) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SafeWalletDelegatesContractCall) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *SafeWalletDelegatesContractCall) SetAddress(v string) {
	o.Address = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SafeWalletDelegatesContractCall) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeWalletDelegatesContractCall) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SafeWalletDelegatesContractCall) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SafeWalletDelegatesContractCall) SetValue(v string) {
	o.Value = &v
}

// GetCalldata returns the Calldata field value if set, zero value otherwise.
func (o *SafeWalletDelegatesContractCall) GetCalldata() string {
	if o == nil || IsNil(o.Calldata) {
		var ret string
		return ret
	}
	return *o.Calldata
}

// GetCalldataOk returns a tuple with the Calldata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeWalletDelegatesContractCall) GetCalldataOk() (*string, bool) {
	if o == nil || IsNil(o.Calldata) {
		return nil, false
	}
	return o.Calldata, true
}

// HasCalldata returns a boolean if a field has been set.
func (o *SafeWalletDelegatesContractCall) HasCalldata() bool {
	if o != nil && !IsNil(o.Calldata) {
		return true
	}

	return false
}

// SetCalldata gets a reference to the given string and assigns it to the Calldata field.
func (o *SafeWalletDelegatesContractCall) SetCalldata(v string) {
	o.Calldata = &v
}

func (o SafeWalletDelegatesContractCall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SafeWalletDelegatesContractCall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_type"] = o.RequestType
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Calldata) {
		toSerialize["calldata"] = o.Calldata
	}
	return toSerialize, nil
}

func (o *SafeWalletDelegatesContractCall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSafeWalletDelegatesContractCall := _SafeWalletDelegatesContractCall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSafeWalletDelegatesContractCall)

	if err != nil {
		return err
	}

	*o = SafeWalletDelegatesContractCall(varSafeWalletDelegatesContractCall)

	return err
}

type NullableSafeWalletDelegatesContractCall struct {
	value *SafeWalletDelegatesContractCall
	isSet bool
}

func (v NullableSafeWalletDelegatesContractCall) Get() *SafeWalletDelegatesContractCall {
	return v.value
}

func (v *NullableSafeWalletDelegatesContractCall) Set(val *SafeWalletDelegatesContractCall) {
	v.value = val
	v.isSet = true
}

func (v NullableSafeWalletDelegatesContractCall) IsSet() bool {
	return v.isSet
}

func (v *NullableSafeWalletDelegatesContractCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafeWalletDelegatesContractCall(val *SafeWalletDelegatesContractCall) *NullableSafeWalletDelegatesContractCall {
	return &NullableSafeWalletDelegatesContractCall{value: val, isSet: true}
}

func (v NullableSafeWalletDelegatesContractCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafeWalletDelegatesContractCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


