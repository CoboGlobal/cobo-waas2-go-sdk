/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the ListSwapEnabledTokens200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSwapEnabledTokens200Response{}

// ListSwapEnabledTokens200Response struct for ListSwapEnabledTokens200Response
type ListSwapEnabledTokens200Response struct {
	Data []SwapToken `json:"data,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
}

// NewListSwapEnabledTokens200Response instantiates a new ListSwapEnabledTokens200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSwapEnabledTokens200Response() *ListSwapEnabledTokens200Response {
	this := ListSwapEnabledTokens200Response{}
	return &this
}

// NewListSwapEnabledTokens200ResponseWithDefaults instantiates a new ListSwapEnabledTokens200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSwapEnabledTokens200ResponseWithDefaults() *ListSwapEnabledTokens200Response {
	this := ListSwapEnabledTokens200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListSwapEnabledTokens200Response) GetData() []SwapToken {
	if o == nil || IsNil(o.Data) {
		var ret []SwapToken
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSwapEnabledTokens200Response) GetDataOk() ([]SwapToken, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListSwapEnabledTokens200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []SwapToken and assigns it to the Data field.
func (o *ListSwapEnabledTokens200Response) SetData(v []SwapToken) {
	o.Data = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ListSwapEnabledTokens200Response) GetPagination() Pagination {
	if o == nil || IsNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSwapEnabledTokens200Response) GetPaginationOk() (*Pagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ListSwapEnabledTokens200Response) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *ListSwapEnabledTokens200Response) SetPagination(v Pagination) {
	o.Pagination = &v
}

func (o ListSwapEnabledTokens200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSwapEnabledTokens200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableListSwapEnabledTokens200Response struct {
	value *ListSwapEnabledTokens200Response
	isSet bool
}

func (v NullableListSwapEnabledTokens200Response) Get() *ListSwapEnabledTokens200Response {
	return v.value
}

func (v *NullableListSwapEnabledTokens200Response) Set(val *ListSwapEnabledTokens200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListSwapEnabledTokens200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListSwapEnabledTokens200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSwapEnabledTokens200Response(val *ListSwapEnabledTokens200Response) *NullableListSwapEnabledTokens200Response {
	return &NullableListSwapEnabledTokens200Response{value: val, isSet: true}
}

func (v NullableListSwapEnabledTokens200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSwapEnabledTokens200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


