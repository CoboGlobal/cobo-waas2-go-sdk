/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSCallbackResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSCallbackResponse{}

// TSSCallbackResponse struct for TSSCallbackResponse
type TSSCallbackResponse struct {
	// The unique ID of the callback request.
	RequestId *string `json:"request_id,omitempty"`
	// The response status code. 0 indicates success.  Any other value indicates that an error occurred while processing the request in the callback server.
	Status *int32 `json:"status,omitempty"`
	Action *TSSCallbackActionType `json:"action,omitempty"`
	// The error message. - When status is not 0, Contains internal error messages from the callback server. - When status is 0 and action is REJECT, Contains the specific reason for the rejection.
	Error *string `json:"error,omitempty"`
}

// NewTSSCallbackResponse instantiates a new TSSCallbackResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSCallbackResponse() *TSSCallbackResponse {
	this := TSSCallbackResponse{}
	return &this
}

// NewTSSCallbackResponseWithDefaults instantiates a new TSSCallbackResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSCallbackResponseWithDefaults() *TSSCallbackResponse {
	this := TSSCallbackResponse{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *TSSCallbackResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSCallbackResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *TSSCallbackResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *TSSCallbackResponse) SetRequestId(v string) {
	o.RequestId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TSSCallbackResponse) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSCallbackResponse) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TSSCallbackResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *TSSCallbackResponse) SetStatus(v int32) {
	o.Status = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *TSSCallbackResponse) GetAction() TSSCallbackActionType {
	if o == nil || IsNil(o.Action) {
		var ret TSSCallbackActionType
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSCallbackResponse) GetActionOk() (*TSSCallbackActionType, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *TSSCallbackResponse) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given TSSCallbackActionType and assigns it to the Action field.
func (o *TSSCallbackResponse) SetAction(v TSSCallbackActionType) {
	o.Action = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *TSSCallbackResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSCallbackResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *TSSCallbackResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *TSSCallbackResponse) SetError(v string) {
	o.Error = &v
}

func (o TSSCallbackResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSCallbackResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableTSSCallbackResponse struct {
	value *TSSCallbackResponse
	isSet bool
}

func (v NullableTSSCallbackResponse) Get() *TSSCallbackResponse {
	return v.value
}

func (v *NullableTSSCallbackResponse) Set(val *TSSCallbackResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSCallbackResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSCallbackResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSCallbackResponse(val *TSSCallbackResponse) *NullableTSSCallbackResponse {
	return &NullableTSSCallbackResponse{value: val, isSet: true}
}

func (v NullableTSSCallbackResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSCallbackResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


