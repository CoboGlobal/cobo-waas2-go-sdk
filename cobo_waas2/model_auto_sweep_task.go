/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoSweepTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoSweepTask{}

// AutoSweepTask The auto sweep task information.
type AutoSweepTask struct {
	// The auto sweep task ID.
	TaskId string `json:"task_id"`
	// The wallet ID.
	WalletId string `json:"wallet_id"`
	// The token ID of the swept token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens).
	TokenId string `json:"token_id"`
	Status AutoSweepTaskStatus `json:"status"`
	// The IDs of the corresponding transactions of the auto sweep task.
	TransactionIds []string `json:"transaction_ids,omitempty"`
	// Failed reason of create auto sweep transaction.
	FailedReasons []string `json:"failed_reasons,omitempty"`
	// The time when the task was created, in Unix timestamp format, measured in milliseconds.
	CreatedTimestamp int64 `json:"created_timestamp"`
	// The time when the task was updated, in Unix timestamp format, measured in milliseconds.
	UpdatedTimestamp *int64 `json:"updated_timestamp,omitempty"`
}

type _AutoSweepTask AutoSweepTask

// NewAutoSweepTask instantiates a new AutoSweepTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoSweepTask(taskId string, walletId string, tokenId string, status AutoSweepTaskStatus, createdTimestamp int64) *AutoSweepTask {
	this := AutoSweepTask{}
	this.TaskId = taskId
	this.WalletId = walletId
	this.TokenId = tokenId
	this.Status = status
	this.CreatedTimestamp = createdTimestamp
	return &this
}

// NewAutoSweepTaskWithDefaults instantiates a new AutoSweepTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoSweepTaskWithDefaults() *AutoSweepTask {
	this := AutoSweepTask{}
	return &this
}

// GetTaskId returns the TaskId field value
func (o *AutoSweepTask) GetTaskId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskId, true
}

// SetTaskId sets field value
func (o *AutoSweepTask) SetTaskId(v string) {
	o.TaskId = v
}

// GetWalletId returns the WalletId field value
func (o *AutoSweepTask) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *AutoSweepTask) SetWalletId(v string) {
	o.WalletId = v
}

// GetTokenId returns the TokenId field value
func (o *AutoSweepTask) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *AutoSweepTask) SetTokenId(v string) {
	o.TokenId = v
}

// GetStatus returns the Status field value
func (o *AutoSweepTask) GetStatus() AutoSweepTaskStatus {
	if o == nil {
		var ret AutoSweepTaskStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetStatusOk() (*AutoSweepTaskStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AutoSweepTask) SetStatus(v AutoSweepTaskStatus) {
	o.Status = v
}

// GetTransactionIds returns the TransactionIds field value if set, zero value otherwise.
func (o *AutoSweepTask) GetTransactionIds() []string {
	if o == nil || IsNil(o.TransactionIds) {
		var ret []string
		return ret
	}
	return o.TransactionIds
}

// GetTransactionIdsOk returns a tuple with the TransactionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetTransactionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionIds) {
		return nil, false
	}
	return o.TransactionIds, true
}

// HasTransactionIds returns a boolean if a field has been set.
func (o *AutoSweepTask) HasTransactionIds() bool {
	if o != nil && !IsNil(o.TransactionIds) {
		return true
	}

	return false
}

// SetTransactionIds gets a reference to the given []string and assigns it to the TransactionIds field.
func (o *AutoSweepTask) SetTransactionIds(v []string) {
	o.TransactionIds = v
}

// GetFailedReasons returns the FailedReasons field value if set, zero value otherwise.
func (o *AutoSweepTask) GetFailedReasons() []string {
	if o == nil || IsNil(o.FailedReasons) {
		var ret []string
		return ret
	}
	return o.FailedReasons
}

// GetFailedReasonsOk returns a tuple with the FailedReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetFailedReasonsOk() ([]string, bool) {
	if o == nil || IsNil(o.FailedReasons) {
		return nil, false
	}
	return o.FailedReasons, true
}

// HasFailedReasons returns a boolean if a field has been set.
func (o *AutoSweepTask) HasFailedReasons() bool {
	if o != nil && !IsNil(o.FailedReasons) {
		return true
	}

	return false
}

// SetFailedReasons gets a reference to the given []string and assigns it to the FailedReasons field.
func (o *AutoSweepTask) SetFailedReasons(v []string) {
	o.FailedReasons = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *AutoSweepTask) GetCreatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *AutoSweepTask) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *AutoSweepTask) GetUpdatedTimestamp() int64 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoSweepTask) GetUpdatedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *AutoSweepTask) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int64 and assigns it to the UpdatedTimestamp field.
func (o *AutoSweepTask) SetUpdatedTimestamp(v int64) {
	o.UpdatedTimestamp = &v
}

func (o AutoSweepTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoSweepTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["task_id"] = o.TaskId
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["token_id"] = o.TokenId
	toSerialize["status"] = o.Status
	if !IsNil(o.TransactionIds) {
		toSerialize["transaction_ids"] = o.TransactionIds
	}
	if !IsNil(o.FailedReasons) {
		toSerialize["failed_reasons"] = o.FailedReasons
	}
	toSerialize["created_timestamp"] = o.CreatedTimestamp
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	return toSerialize, nil
}

func (o *AutoSweepTask) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"task_id",
		"wallet_id",
		"token_id",
		"status",
		"created_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoSweepTask := _AutoSweepTask{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoSweepTask)

	if err != nil {
		return err
	}

	*o = AutoSweepTask(varAutoSweepTask)

	return err
}

type NullableAutoSweepTask struct {
	value *AutoSweepTask
	isSet bool
}

func (v NullableAutoSweepTask) Get() *AutoSweepTask {
	return v.value
}

func (v *NullableAutoSweepTask) Set(val *AutoSweepTask) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoSweepTask) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoSweepTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoSweepTask(val *AutoSweepTask) *NullableAutoSweepTask {
	return &NullableAutoSweepTask{value: val, isSet: true}
}

func (v NullableAutoSweepTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoSweepTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


