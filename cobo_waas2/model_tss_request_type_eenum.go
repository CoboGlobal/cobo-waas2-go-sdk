/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"fmt"
)

// TSSRequestTypeEenum  The request type. - `KeyGen`: The key gen request. - `KeyReshare`: The key reshare request. - `KeySign`: The key sign request. - `KeyShareSign`: The key share sign request.
type TSSRequestTypeEenum string

// List of TSSRequestTypeEenum
const (
	TSSREQUESTTYPEEENUM_KEY_GEN TSSRequestTypeEenum = "KeyGen"
	TSSREQUESTTYPEEENUM_KEY_RESHARE TSSRequestTypeEenum = "KeyReshare"
	TSSREQUESTTYPEEENUM_KEY_SIGN TSSRequestTypeEenum = "KeySign"
	TSSREQUESTTYPEEENUM_KEY_SHARE_SIGN TSSRequestTypeEenum = "KeyShareSign"
)

// All allowed values of TSSRequestTypeEenum enum
var AllowedTSSRequestTypeEenumEnumValues = []TSSRequestTypeEenum{
	"KeyGen",
	"KeyReshare",
	"KeySign",
	"KeyShareSign",
}

func (v *TSSRequestTypeEenum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TSSRequestTypeEenum(value)
	for _, existing := range AllowedTSSRequestTypeEenumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}
	*v = TSSRequestTypeEenum("unknown")
	return nil
}

// NewTSSRequestTypeEenumFromValue returns a pointer to a valid TSSRequestTypeEenum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTSSRequestTypeEenumFromValue(v string) (*TSSRequestTypeEenum, error) {
	ev := TSSRequestTypeEenum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TSSRequestTypeEenum: valid values are %v", v, AllowedTSSRequestTypeEenumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TSSRequestTypeEenum) IsValid() bool {
	for _, existing := range AllowedTSSRequestTypeEenumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TSSRequestTypeEenum value
func (v TSSRequestTypeEenum) Ptr() *TSSRequestTypeEenum {
	return &v
}

type NullableTSSRequestTypeEenum struct {
	value *TSSRequestTypeEenum
	isSet bool
}

func (v NullableTSSRequestTypeEenum) Get() *TSSRequestTypeEenum {
	return v.value
}

func (v *NullableTSSRequestTypeEenum) Set(val *TSSRequestTypeEenum) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSRequestTypeEenum) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSRequestTypeEenum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSRequestTypeEenum(val *TSSRequestTypeEenum) *NullableTSSRequestTypeEenum {
	return &NullableTSSRequestTypeEenum{value: val, isSet: true}
}

func (v NullableTSSRequestTypeEenum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSRequestTypeEenum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

