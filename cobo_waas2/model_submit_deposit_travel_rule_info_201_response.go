/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the SubmitDepositTravelRuleInfo201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitDepositTravelRuleInfo201Response{}

// SubmitDepositTravelRuleInfo201Response struct for SubmitDepositTravelRuleInfo201Response
type SubmitDepositTravelRuleInfo201Response struct {
	// Whether the Travel Rule information has been successfully submitted. - `true`: The information has been successfully submitted. - `false`: The information has not been submitted. 
	Submitted *bool `json:"submitted,omitempty"`
}

// NewSubmitDepositTravelRuleInfo201Response instantiates a new SubmitDepositTravelRuleInfo201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitDepositTravelRuleInfo201Response() *SubmitDepositTravelRuleInfo201Response {
	this := SubmitDepositTravelRuleInfo201Response{}
	return &this
}

// NewSubmitDepositTravelRuleInfo201ResponseWithDefaults instantiates a new SubmitDepositTravelRuleInfo201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitDepositTravelRuleInfo201ResponseWithDefaults() *SubmitDepositTravelRuleInfo201Response {
	this := SubmitDepositTravelRuleInfo201Response{}
	return &this
}

// GetSubmitted returns the Submitted field value if set, zero value otherwise.
func (o *SubmitDepositTravelRuleInfo201Response) GetSubmitted() bool {
	if o == nil || IsNil(o.Submitted) {
		var ret bool
		return ret
	}
	return *o.Submitted
}

// GetSubmittedOk returns a tuple with the Submitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitDepositTravelRuleInfo201Response) GetSubmittedOk() (*bool, bool) {
	if o == nil || IsNil(o.Submitted) {
		return nil, false
	}
	return o.Submitted, true
}

// HasSubmitted returns a boolean if a field has been set.
func (o *SubmitDepositTravelRuleInfo201Response) HasSubmitted() bool {
	if o != nil && !IsNil(o.Submitted) {
		return true
	}

	return false
}

// SetSubmitted gets a reference to the given bool and assigns it to the Submitted field.
func (o *SubmitDepositTravelRuleInfo201Response) SetSubmitted(v bool) {
	o.Submitted = &v
}

func (o SubmitDepositTravelRuleInfo201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitDepositTravelRuleInfo201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Submitted) {
		toSerialize["submitted"] = o.Submitted
	}
	return toSerialize, nil
}

type NullableSubmitDepositTravelRuleInfo201Response struct {
	value *SubmitDepositTravelRuleInfo201Response
	isSet bool
}

func (v NullableSubmitDepositTravelRuleInfo201Response) Get() *SubmitDepositTravelRuleInfo201Response {
	return v.value
}

func (v *NullableSubmitDepositTravelRuleInfo201Response) Set(val *SubmitDepositTravelRuleInfo201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitDepositTravelRuleInfo201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitDepositTravelRuleInfo201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitDepositTravelRuleInfo201Response(val *SubmitDepositTravelRuleInfo201Response) *NullableSubmitDepositTravelRuleInfo201Response {
	return &NullableSubmitDepositTravelRuleInfo201Response{value: val, isSet: true}
}

func (v NullableSubmitDepositTravelRuleInfo201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitDepositTravelRuleInfo201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


