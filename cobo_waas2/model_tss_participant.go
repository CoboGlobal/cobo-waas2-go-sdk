/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSParticipant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSParticipant{}

// TSSParticipant struct for TSSParticipant
type TSSParticipant struct {
	// The node ID.
	NodeId *string `json:"node_id,omitempty"`
	// The share ID.
	ShareId *string `json:"share_id,omitempty"`
	// The share public key.
	SharePublicKey *string `json:"share_public_key,omitempty"`
}

// NewTSSParticipant instantiates a new TSSParticipant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSParticipant() *TSSParticipant {
	this := TSSParticipant{}
	return &this
}

// NewTSSParticipantWithDefaults instantiates a new TSSParticipant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSParticipantWithDefaults() *TSSParticipant {
	this := TSSParticipant{}
	return &this
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *TSSParticipant) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSParticipant) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *TSSParticipant) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *TSSParticipant) SetNodeId(v string) {
	o.NodeId = &v
}

// GetShareId returns the ShareId field value if set, zero value otherwise.
func (o *TSSParticipant) GetShareId() string {
	if o == nil || IsNil(o.ShareId) {
		var ret string
		return ret
	}
	return *o.ShareId
}

// GetShareIdOk returns a tuple with the ShareId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSParticipant) GetShareIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShareId) {
		return nil, false
	}
	return o.ShareId, true
}

// HasShareId returns a boolean if a field has been set.
func (o *TSSParticipant) HasShareId() bool {
	if o != nil && !IsNil(o.ShareId) {
		return true
	}

	return false
}

// SetShareId gets a reference to the given string and assigns it to the ShareId field.
func (o *TSSParticipant) SetShareId(v string) {
	o.ShareId = &v
}

// GetSharePublicKey returns the SharePublicKey field value if set, zero value otherwise.
func (o *TSSParticipant) GetSharePublicKey() string {
	if o == nil || IsNil(o.SharePublicKey) {
		var ret string
		return ret
	}
	return *o.SharePublicKey
}

// GetSharePublicKeyOk returns a tuple with the SharePublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSParticipant) GetSharePublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SharePublicKey) {
		return nil, false
	}
	return o.SharePublicKey, true
}

// HasSharePublicKey returns a boolean if a field has been set.
func (o *TSSParticipant) HasSharePublicKey() bool {
	if o != nil && !IsNil(o.SharePublicKey) {
		return true
	}

	return false
}

// SetSharePublicKey gets a reference to the given string and assigns it to the SharePublicKey field.
func (o *TSSParticipant) SetSharePublicKey(v string) {
	o.SharePublicKey = &v
}

func (o TSSParticipant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSParticipant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.ShareId) {
		toSerialize["share_id"] = o.ShareId
	}
	if !IsNil(o.SharePublicKey) {
		toSerialize["share_public_key"] = o.SharePublicKey
	}
	return toSerialize, nil
}

type NullableTSSParticipant struct {
	value *TSSParticipant
	isSet bool
}

func (v NullableTSSParticipant) Get() *TSSParticipant {
	return v.value
}

func (v *NullableTSSParticipant) Set(val *TSSParticipant) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSParticipant(val *TSSParticipant) *NullableTSSParticipant {
	return &NullableTSSParticipant{value: val, isSet: true}
}

func (v NullableTSSParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


