/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetMaxTransferableValueWithFeeModelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMaxTransferableValueWithFeeModelRequest{}

// GetMaxTransferableValueWithFeeModelRequest struct for GetMaxTransferableValueWithFeeModelRequest
type GetMaxTransferableValueWithFeeModelRequest struct {
	// The token ID of the transferred token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens). For transfers from Exchange Wallets, this property value represents the asset ID.
	TokenId string `json:"token_id"`
	Fee TransactionRequestFee `json:"fee"`
	// The recipient's address.
	ToAddress string `json:"to_address"`
	// The sender's address. For EVM addresses in MPC Wallets, this parameter is required.
	FromAddress *string `json:"from_address,omitempty"`
}

type _GetMaxTransferableValueWithFeeModelRequest GetMaxTransferableValueWithFeeModelRequest

// NewGetMaxTransferableValueWithFeeModelRequest instantiates a new GetMaxTransferableValueWithFeeModelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMaxTransferableValueWithFeeModelRequest(tokenId string, fee TransactionRequestFee, toAddress string) *GetMaxTransferableValueWithFeeModelRequest {
	this := GetMaxTransferableValueWithFeeModelRequest{}
	this.TokenId = tokenId
	this.Fee = fee
	this.ToAddress = toAddress
	return &this
}

// NewGetMaxTransferableValueWithFeeModelRequestWithDefaults instantiates a new GetMaxTransferableValueWithFeeModelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMaxTransferableValueWithFeeModelRequestWithDefaults() *GetMaxTransferableValueWithFeeModelRequest {
	this := GetMaxTransferableValueWithFeeModelRequest{}
	return &this
}

// GetTokenId returns the TokenId field value
func (o *GetMaxTransferableValueWithFeeModelRequest) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *GetMaxTransferableValueWithFeeModelRequest) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *GetMaxTransferableValueWithFeeModelRequest) SetTokenId(v string) {
	o.TokenId = v
}

// GetFee returns the Fee field value
func (o *GetMaxTransferableValueWithFeeModelRequest) GetFee() TransactionRequestFee {
	if o == nil {
		var ret TransactionRequestFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *GetMaxTransferableValueWithFeeModelRequest) GetFeeOk() (*TransactionRequestFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *GetMaxTransferableValueWithFeeModelRequest) SetFee(v TransactionRequestFee) {
	o.Fee = v
}

// GetToAddress returns the ToAddress field value
func (o *GetMaxTransferableValueWithFeeModelRequest) GetToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value
// and a boolean to check if the value has been set.
func (o *GetMaxTransferableValueWithFeeModelRequest) GetToAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddress, true
}

// SetToAddress sets field value
func (o *GetMaxTransferableValueWithFeeModelRequest) SetToAddress(v string) {
	o.ToAddress = v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *GetMaxTransferableValueWithFeeModelRequest) GetFromAddress() string {
	if o == nil || IsNil(o.FromAddress) {
		var ret string
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMaxTransferableValueWithFeeModelRequest) GetFromAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *GetMaxTransferableValueWithFeeModelRequest) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given string and assigns it to the FromAddress field.
func (o *GetMaxTransferableValueWithFeeModelRequest) SetFromAddress(v string) {
	o.FromAddress = &v
}

func (o GetMaxTransferableValueWithFeeModelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMaxTransferableValueWithFeeModelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token_id"] = o.TokenId
	toSerialize["fee"] = o.Fee
	toSerialize["to_address"] = o.ToAddress
	if !IsNil(o.FromAddress) {
		toSerialize["from_address"] = o.FromAddress
	}
	return toSerialize, nil
}

func (o *GetMaxTransferableValueWithFeeModelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token_id",
		"fee",
		"to_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMaxTransferableValueWithFeeModelRequest := _GetMaxTransferableValueWithFeeModelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMaxTransferableValueWithFeeModelRequest)

	if err != nil {
		return err
	}

	*o = GetMaxTransferableValueWithFeeModelRequest(varGetMaxTransferableValueWithFeeModelRequest)

	return err
}

type NullableGetMaxTransferableValueWithFeeModelRequest struct {
	value *GetMaxTransferableValueWithFeeModelRequest
	isSet bool
}

func (v NullableGetMaxTransferableValueWithFeeModelRequest) Get() *GetMaxTransferableValueWithFeeModelRequest {
	return v.value
}

func (v *NullableGetMaxTransferableValueWithFeeModelRequest) Set(val *GetMaxTransferableValueWithFeeModelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMaxTransferableValueWithFeeModelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMaxTransferableValueWithFeeModelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMaxTransferableValueWithFeeModelRequest(val *GetMaxTransferableValueWithFeeModelRequest) *NullableGetMaxTransferableValueWithFeeModelRequest {
	return &NullableGetMaxTransferableValueWithFeeModelRequest{value: val, isSet: true}
}

func (v NullableGetMaxTransferableValueWithFeeModelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMaxTransferableValueWithFeeModelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


