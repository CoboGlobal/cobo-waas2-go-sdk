/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAutoSweepTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAutoSweepTask{}

// CreateAutoSweepTask The sweep to address information.
type CreateAutoSweepTask struct {
	// The wallet ID.
	WalletId string `json:"wallet_id"`
	// The token ID of the swept token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens).
	TokenId string `json:"token_id"`
}

type _CreateAutoSweepTask CreateAutoSweepTask

// NewCreateAutoSweepTask instantiates a new CreateAutoSweepTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutoSweepTask(walletId string, tokenId string) *CreateAutoSweepTask {
	this := CreateAutoSweepTask{}
	this.WalletId = walletId
	this.TokenId = tokenId
	return &this
}

// NewCreateAutoSweepTaskWithDefaults instantiates a new CreateAutoSweepTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutoSweepTaskWithDefaults() *CreateAutoSweepTask {
	this := CreateAutoSweepTask{}
	return &this
}

// GetWalletId returns the WalletId field value
func (o *CreateAutoSweepTask) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *CreateAutoSweepTask) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *CreateAutoSweepTask) SetWalletId(v string) {
	o.WalletId = v
}

// GetTokenId returns the TokenId field value
func (o *CreateAutoSweepTask) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *CreateAutoSweepTask) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *CreateAutoSweepTask) SetTokenId(v string) {
	o.TokenId = v
}

func (o CreateAutoSweepTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAutoSweepTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["token_id"] = o.TokenId
	return toSerialize, nil
}

func (o *CreateAutoSweepTask) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"wallet_id",
		"token_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAutoSweepTask := _CreateAutoSweepTask{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAutoSweepTask)

	if err != nil {
		return err
	}

	*o = CreateAutoSweepTask(varCreateAutoSweepTask)

	return err
}

type NullableCreateAutoSweepTask struct {
	value *CreateAutoSweepTask
	isSet bool
}

func (v NullableCreateAutoSweepTask) Get() *CreateAutoSweepTask {
	return v.value
}

func (v *NullableCreateAutoSweepTask) Set(val *CreateAutoSweepTask) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutoSweepTask) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutoSweepTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutoSweepTask(val *CreateAutoSweepTask) *NullableCreateAutoSweepTask {
	return &NullableCreateAutoSweepTask{value: val, isSet: true}
}

func (v NullableCreateAutoSweepTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutoSweepTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


