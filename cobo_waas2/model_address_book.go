/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddressBook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressBook{}

// AddressBook The data for address book entry information.
type AddressBook struct {
	OrgId string `json:"org_id"`
	EntryId string `json:"entry_id"`
	// address.
	Address string `json:"address"`
	// memo.
	Memo *string `json:"memo,omitempty"`
	// wallet name.
	WalletName *string `json:"wallet_name,omitempty"`
	WalletType *WalletType `json:"wallet_type,omitempty"`
	// The label to address.
	Label string `json:"label"`
	// email.
	Email *string `json:"email,omitempty"`
}

type _AddressBook AddressBook

// NewAddressBook instantiates a new AddressBook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressBook(orgId string, entryId string, address string, label string) *AddressBook {
	this := AddressBook{}
	this.OrgId = orgId
	this.EntryId = entryId
	this.Address = address
	this.Label = label
	return &this
}

// NewAddressBookWithDefaults instantiates a new AddressBook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressBookWithDefaults() *AddressBook {
	this := AddressBook{}
	return &this
}

// GetOrgId returns the OrgId field value
func (o *AddressBook) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *AddressBook) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *AddressBook) SetOrgId(v string) {
	o.OrgId = v
}

// GetEntryId returns the EntryId field value
func (o *AddressBook) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *AddressBook) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *AddressBook) SetEntryId(v string) {
	o.EntryId = v
}

// GetAddress returns the Address field value
func (o *AddressBook) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *AddressBook) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *AddressBook) SetAddress(v string) {
	o.Address = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *AddressBook) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressBook) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *AddressBook) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *AddressBook) SetMemo(v string) {
	o.Memo = &v
}

// GetWalletName returns the WalletName field value if set, zero value otherwise.
func (o *AddressBook) GetWalletName() string {
	if o == nil || IsNil(o.WalletName) {
		var ret string
		return ret
	}
	return *o.WalletName
}

// GetWalletNameOk returns a tuple with the WalletName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressBook) GetWalletNameOk() (*string, bool) {
	if o == nil || IsNil(o.WalletName) {
		return nil, false
	}
	return o.WalletName, true
}

// HasWalletName returns a boolean if a field has been set.
func (o *AddressBook) HasWalletName() bool {
	if o != nil && !IsNil(o.WalletName) {
		return true
	}

	return false
}

// SetWalletName gets a reference to the given string and assigns it to the WalletName field.
func (o *AddressBook) SetWalletName(v string) {
	o.WalletName = &v
}

// GetWalletType returns the WalletType field value if set, zero value otherwise.
func (o *AddressBook) GetWalletType() WalletType {
	if o == nil || IsNil(o.WalletType) {
		var ret WalletType
		return ret
	}
	return *o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressBook) GetWalletTypeOk() (*WalletType, bool) {
	if o == nil || IsNil(o.WalletType) {
		return nil, false
	}
	return o.WalletType, true
}

// HasWalletType returns a boolean if a field has been set.
func (o *AddressBook) HasWalletType() bool {
	if o != nil && !IsNil(o.WalletType) {
		return true
	}

	return false
}

// SetWalletType gets a reference to the given WalletType and assigns it to the WalletType field.
func (o *AddressBook) SetWalletType(v WalletType) {
	o.WalletType = &v
}

// GetLabel returns the Label field value
func (o *AddressBook) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *AddressBook) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *AddressBook) SetLabel(v string) {
	o.Label = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AddressBook) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressBook) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AddressBook) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AddressBook) SetEmail(v string) {
	o.Email = &v
}

func (o AddressBook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressBook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["org_id"] = o.OrgId
	toSerialize["entry_id"] = o.EntryId
	toSerialize["address"] = o.Address
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.WalletName) {
		toSerialize["wallet_name"] = o.WalletName
	}
	if !IsNil(o.WalletType) {
		toSerialize["wallet_type"] = o.WalletType
	}
	toSerialize["label"] = o.Label
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

func (o *AddressBook) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"org_id",
		"entry_id",
		"address",
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddressBook := _AddressBook{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddressBook)

	if err != nil {
		return err
	}

	*o = AddressBook(varAddressBook)

	return err
}

type NullableAddressBook struct {
	value *AddressBook
	isSet bool
}

func (v NullableAddressBook) Get() *AddressBook {
	return v.value
}

func (v *NullableAddressBook) Set(val *AddressBook) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressBook) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressBook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressBook(val *AddressBook) *NullableAddressBook {
	return &NullableAddressBook{value: val, isSet: true}
}

func (v NullableAddressBook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressBook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


