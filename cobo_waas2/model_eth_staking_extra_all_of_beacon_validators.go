/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the EthStakingExtraAllOfBeaconValidators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthStakingExtraAllOfBeaconValidators{}

// EthStakingExtraAllOfBeaconValidators struct for EthStakingExtraAllOfBeaconValidators
type EthStakingExtraAllOfBeaconValidators struct {
	// The public key of the validator.
	Pubkey *string `json:"pubkey,omitempty"`
	Status *AmountStatus `json:"status,omitempty"`
	// The annual percentage yield (APY) of the validator.
	Apy *float32 `json:"apy,omitempty"`
	// The staked amount.
	StakedAmount *string `json:"staked_amount,omitempty"`
	// The rewards received.
	RewardsReceived *string `json:"rewards_received,omitempty"`
	// The time when the validator's status was last updated, in Unix timestamp format and measured in milliseconds.
	UpdatedTimestamp *int64 `json:"updated_timestamp,omitempty"`
}

// NewEthStakingExtraAllOfBeaconValidators instantiates a new EthStakingExtraAllOfBeaconValidators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthStakingExtraAllOfBeaconValidators() *EthStakingExtraAllOfBeaconValidators {
	this := EthStakingExtraAllOfBeaconValidators{}
	return &this
}

// NewEthStakingExtraAllOfBeaconValidatorsWithDefaults instantiates a new EthStakingExtraAllOfBeaconValidators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthStakingExtraAllOfBeaconValidatorsWithDefaults() *EthStakingExtraAllOfBeaconValidators {
	this := EthStakingExtraAllOfBeaconValidators{}
	return &this
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetPubkey() string {
	if o == nil || IsNil(o.Pubkey) {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Pubkey) {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasPubkey() bool {
	if o != nil && !IsNil(o.Pubkey) {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *EthStakingExtraAllOfBeaconValidators) SetPubkey(v string) {
	o.Pubkey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetStatus() AmountStatus {
	if o == nil || IsNil(o.Status) {
		var ret AmountStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetStatusOk() (*AmountStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AmountStatus and assigns it to the Status field.
func (o *EthStakingExtraAllOfBeaconValidators) SetStatus(v AmountStatus) {
	o.Status = &v
}

// GetApy returns the Apy field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetApy() float32 {
	if o == nil || IsNil(o.Apy) {
		var ret float32
		return ret
	}
	return *o.Apy
}

// GetApyOk returns a tuple with the Apy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetApyOk() (*float32, bool) {
	if o == nil || IsNil(o.Apy) {
		return nil, false
	}
	return o.Apy, true
}

// HasApy returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasApy() bool {
	if o != nil && !IsNil(o.Apy) {
		return true
	}

	return false
}

// SetApy gets a reference to the given float32 and assigns it to the Apy field.
func (o *EthStakingExtraAllOfBeaconValidators) SetApy(v float32) {
	o.Apy = &v
}

// GetStakedAmount returns the StakedAmount field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetStakedAmount() string {
	if o == nil || IsNil(o.StakedAmount) {
		var ret string
		return ret
	}
	return *o.StakedAmount
}

// GetStakedAmountOk returns a tuple with the StakedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetStakedAmountOk() (*string, bool) {
	if o == nil || IsNil(o.StakedAmount) {
		return nil, false
	}
	return o.StakedAmount, true
}

// HasStakedAmount returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasStakedAmount() bool {
	if o != nil && !IsNil(o.StakedAmount) {
		return true
	}

	return false
}

// SetStakedAmount gets a reference to the given string and assigns it to the StakedAmount field.
func (o *EthStakingExtraAllOfBeaconValidators) SetStakedAmount(v string) {
	o.StakedAmount = &v
}

// GetRewardsReceived returns the RewardsReceived field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetRewardsReceived() string {
	if o == nil || IsNil(o.RewardsReceived) {
		var ret string
		return ret
	}
	return *o.RewardsReceived
}

// GetRewardsReceivedOk returns a tuple with the RewardsReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetRewardsReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.RewardsReceived) {
		return nil, false
	}
	return o.RewardsReceived, true
}

// HasRewardsReceived returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasRewardsReceived() bool {
	if o != nil && !IsNil(o.RewardsReceived) {
		return true
	}

	return false
}

// SetRewardsReceived gets a reference to the given string and assigns it to the RewardsReceived field.
func (o *EthStakingExtraAllOfBeaconValidators) SetRewardsReceived(v string) {
	o.RewardsReceived = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *EthStakingExtraAllOfBeaconValidators) GetUpdatedTimestamp() int64 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthStakingExtraAllOfBeaconValidators) GetUpdatedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *EthStakingExtraAllOfBeaconValidators) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int64 and assigns it to the UpdatedTimestamp field.
func (o *EthStakingExtraAllOfBeaconValidators) SetUpdatedTimestamp(v int64) {
	o.UpdatedTimestamp = &v
}

func (o EthStakingExtraAllOfBeaconValidators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthStakingExtraAllOfBeaconValidators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pubkey) {
		toSerialize["pubkey"] = o.Pubkey
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Apy) {
		toSerialize["apy"] = o.Apy
	}
	if !IsNil(o.StakedAmount) {
		toSerialize["staked_amount"] = o.StakedAmount
	}
	if !IsNil(o.RewardsReceived) {
		toSerialize["rewards_received"] = o.RewardsReceived
	}
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	return toSerialize, nil
}

type NullableEthStakingExtraAllOfBeaconValidators struct {
	value *EthStakingExtraAllOfBeaconValidators
	isSet bool
}

func (v NullableEthStakingExtraAllOfBeaconValidators) Get() *EthStakingExtraAllOfBeaconValidators {
	return v.value
}

func (v *NullableEthStakingExtraAllOfBeaconValidators) Set(val *EthStakingExtraAllOfBeaconValidators) {
	v.value = val
	v.isSet = true
}

func (v NullableEthStakingExtraAllOfBeaconValidators) IsSet() bool {
	return v.isSet
}

func (v *NullableEthStakingExtraAllOfBeaconValidators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthStakingExtraAllOfBeaconValidators(val *EthStakingExtraAllOfBeaconValidators) *NullableEthStakingExtraAllOfBeaconValidators {
	return &NullableEthStakingExtraAllOfBeaconValidators{value: val, isSet: true}
}

func (v NullableEthStakingExtraAllOfBeaconValidators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthStakingExtraAllOfBeaconValidators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


