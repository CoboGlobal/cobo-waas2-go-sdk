/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the SafeTxDecodedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SafeTxDecodedData{}

// SafeTxDecodedData The information about the decoded data of the transaction.
type SafeTxDecodedData struct {
	// The name of the method decoded from the transaction data.
	Method *string `json:"method,omitempty"`
	// The list of parameters decoded from the transaction data.
	Parameters []SafeTxDecodedDataParameters `json:"parameters,omitempty"`
}

// NewSafeTxDecodedData instantiates a new SafeTxDecodedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafeTxDecodedData() *SafeTxDecodedData {
	this := SafeTxDecodedData{}
	return &this
}

// NewSafeTxDecodedDataWithDefaults instantiates a new SafeTxDecodedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafeTxDecodedDataWithDefaults() *SafeTxDecodedData {
	this := SafeTxDecodedData{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *SafeTxDecodedData) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxDecodedData) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *SafeTxDecodedData) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *SafeTxDecodedData) SetMethod(v string) {
	o.Method = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *SafeTxDecodedData) GetParameters() []SafeTxDecodedDataParameters {
	if o == nil || IsNil(o.Parameters) {
		var ret []SafeTxDecodedDataParameters
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxDecodedData) GetParametersOk() ([]SafeTxDecodedDataParameters, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *SafeTxDecodedData) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []SafeTxDecodedDataParameters and assigns it to the Parameters field.
func (o *SafeTxDecodedData) SetParameters(v []SafeTxDecodedDataParameters) {
	o.Parameters = v
}

func (o SafeTxDecodedData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SafeTxDecodedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableSafeTxDecodedData struct {
	value *SafeTxDecodedData
	isSet bool
}

func (v NullableSafeTxDecodedData) Get() *SafeTxDecodedData {
	return v.value
}

func (v *NullableSafeTxDecodedData) Set(val *SafeTxDecodedData) {
	v.value = val
	v.isSet = true
}

func (v NullableSafeTxDecodedData) IsSet() bool {
	return v.isSet
}

func (v *NullableSafeTxDecodedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafeTxDecodedData(val *SafeTxDecodedData) *NullableSafeTxDecodedData {
	return &NullableSafeTxDecodedData{value: val, isSet: true}
}

func (v NullableSafeTxDecodedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafeTxDecodedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


