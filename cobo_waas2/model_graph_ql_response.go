/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the GraphQLResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLResponse{}

// GraphQLResponse struct for GraphQLResponse
type GraphQLResponse struct {
	// The response data for the GraphQL operation.
	Data map[string]interface{} `json:"data,omitempty"`
	// Any errors that occurred during the GraphQL operation.
	Errors []GraphQLError `json:"errors,omitempty"`
}

// NewGraphQLResponse instantiates a new GraphQLResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLResponse() *GraphQLResponse {
	this := GraphQLResponse{}
	return &this
}

// NewGraphQLResponseWithDefaults instantiates a new GraphQLResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLResponseWithDefaults() *GraphQLResponse {
	this := GraphQLResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GraphQLResponse) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLResponse) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GraphQLResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *GraphQLResponse) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GraphQLResponse) GetErrors() []GraphQLError {
	if o == nil || IsNil(o.Errors) {
		var ret []GraphQLError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLResponse) GetErrorsOk() ([]GraphQLError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GraphQLResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []GraphQLError and assigns it to the Errors field.
func (o *GraphQLResponse) SetErrors(v []GraphQLError) {
	o.Errors = v
}

func (o GraphQLResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableGraphQLResponse struct {
	value *GraphQLResponse
	isSet bool
}

func (v NullableGraphQLResponse) Get() *GraphQLResponse {
	return v.value
}

func (v *NullableGraphQLResponse) Set(val *GraphQLResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLResponse(val *GraphQLResponse) *NullableGraphQLResponse {
	return &NullableGraphQLResponse{value: val, isSet: true}
}

func (v NullableGraphQLResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


