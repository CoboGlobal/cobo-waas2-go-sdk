/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationListPermissionsResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationListPermissionsResponseDataInner{}

// TokenizationListPermissionsResponseDataInner struct for TokenizationListPermissionsResponseDataInner
type TokenizationListPermissionsResponseDataInner struct {
	// The address with permissions.
	Address string `json:"address"`
	// The permissions assigned to this address.
	Permissions []TokenizationTokenPermissionType `json:"permissions"`
}

type _TokenizationListPermissionsResponseDataInner TokenizationListPermissionsResponseDataInner

// NewTokenizationListPermissionsResponseDataInner instantiates a new TokenizationListPermissionsResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationListPermissionsResponseDataInner(address string, permissions []TokenizationTokenPermissionType) *TokenizationListPermissionsResponseDataInner {
	this := TokenizationListPermissionsResponseDataInner{}
	this.Address = address
	this.Permissions = permissions
	return &this
}

// NewTokenizationListPermissionsResponseDataInnerWithDefaults instantiates a new TokenizationListPermissionsResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationListPermissionsResponseDataInnerWithDefaults() *TokenizationListPermissionsResponseDataInner {
	this := TokenizationListPermissionsResponseDataInner{}
	return &this
}

// GetAddress returns the Address field value
func (o *TokenizationListPermissionsResponseDataInner) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *TokenizationListPermissionsResponseDataInner) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *TokenizationListPermissionsResponseDataInner) SetAddress(v string) {
	o.Address = v
}

// GetPermissions returns the Permissions field value
func (o *TokenizationListPermissionsResponseDataInner) GetPermissions() []TokenizationTokenPermissionType {
	if o == nil {
		var ret []TokenizationTokenPermissionType
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *TokenizationListPermissionsResponseDataInner) GetPermissionsOk() ([]TokenizationTokenPermissionType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *TokenizationListPermissionsResponseDataInner) SetPermissions(v []TokenizationTokenPermissionType) {
	o.Permissions = v
}

func (o TokenizationListPermissionsResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationListPermissionsResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *TokenizationListPermissionsResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"permissions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationListPermissionsResponseDataInner := _TokenizationListPermissionsResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationListPermissionsResponseDataInner)

	if err != nil {
		return err
	}

	*o = TokenizationListPermissionsResponseDataInner(varTokenizationListPermissionsResponseDataInner)

	return err
}

type NullableTokenizationListPermissionsResponseDataInner struct {
	value *TokenizationListPermissionsResponseDataInner
	isSet bool
}

func (v NullableTokenizationListPermissionsResponseDataInner) Get() *TokenizationListPermissionsResponseDataInner {
	return v.value
}

func (v *NullableTokenizationListPermissionsResponseDataInner) Set(val *TokenizationListPermissionsResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationListPermissionsResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationListPermissionsResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationListPermissionsResponseDataInner(val *TokenizationListPermissionsResponseDataInner) *NullableTokenizationListPermissionsResponseDataInner {
	return &NullableTokenizationListPermissionsResponseDataInner{value: val, isSet: true}
}

func (v NullableTokenizationListPermissionsResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationListPermissionsResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


