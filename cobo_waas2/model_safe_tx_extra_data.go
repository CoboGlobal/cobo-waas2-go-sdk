/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SafeTxExtraData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SafeTxExtraData{}

// SafeTxExtraData The information used to construct and sign Safe{Wallet} transactions using the EIP-712 standard.
type SafeTxExtraData struct {
	// The recipient address of the transaction.
	To string `json:"to"`
	// The human-readable transaction value, for example, `1 ETH`.
	Value string `json:"value"`
	// The transaction call data.
	Data string `json:"data"`
	// The EIP-712 domain separator hash.
	DomainHash string `json:"domain_hash"`
	// The hash of the structured message to be signed.
	MessageHash string `json:"message_hash"`
	// The address of the Safe contract.
	SafeAddress string `json:"safe_address"`
	// The hash of the transaction.
	SafeTxHash string `json:"safe_tx_hash"`
	// The nonce of the transaction.
	SafeNonce int32 `json:"safe_nonce"`
	// The operation type for the transaction.
	Operation string `json:"operation"`
	// The address of the token used to pay gas.
	GasTokenAddr *string `json:"gas_token_addr,omitempty"`
	// The gas limit used for the transaction.
	SafeTxGas *int32 `json:"safe_tx_gas,omitempty"`
	// The base gas for the transaction.
	BaseGas *int32 `json:"base_gas,omitempty"`
	// The gas price used in the transaction.
	GasPrice *string `json:"gas_price,omitempty"`
	// The address used to receive the gas refund.
	RefundReceiver *string `json:"refund_receiver,omitempty"`
	// The name of the recipient contract (if available).
	ToContractName *string `json:"to_contract_name,omitempty"`
	DecodedData *SafeTxDecodedData `json:"decoded_data,omitempty"`
	// The signature of the transaction (if signed by Cobo Signer).
	Signature *string `json:"signature,omitempty"`
	// The transaction amount in Wei.
	Wei NullableString `json:"wei,omitempty"`
}

type _SafeTxExtraData SafeTxExtraData

// NewSafeTxExtraData instantiates a new SafeTxExtraData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSafeTxExtraData(to string, value string, data string, domainHash string, messageHash string, safeAddress string, safeTxHash string, safeNonce int32, operation string) *SafeTxExtraData {
	this := SafeTxExtraData{}
	this.To = to
	this.Value = value
	this.Data = data
	this.DomainHash = domainHash
	this.MessageHash = messageHash
	this.SafeAddress = safeAddress
	this.SafeTxHash = safeTxHash
	this.SafeNonce = safeNonce
	this.Operation = operation
	return &this
}

// NewSafeTxExtraDataWithDefaults instantiates a new SafeTxExtraData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSafeTxExtraDataWithDefaults() *SafeTxExtraData {
	this := SafeTxExtraData{}
	return &this
}

// GetTo returns the To field value
func (o *SafeTxExtraData) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *SafeTxExtraData) SetTo(v string) {
	o.To = v
}

// GetValue returns the Value field value
func (o *SafeTxExtraData) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SafeTxExtraData) SetValue(v string) {
	o.Value = v
}

// GetData returns the Data field value
func (o *SafeTxExtraData) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SafeTxExtraData) SetData(v string) {
	o.Data = v
}

// GetDomainHash returns the DomainHash field value
func (o *SafeTxExtraData) GetDomainHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainHash
}

// GetDomainHashOk returns a tuple with the DomainHash field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetDomainHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainHash, true
}

// SetDomainHash sets field value
func (o *SafeTxExtraData) SetDomainHash(v string) {
	o.DomainHash = v
}

// GetMessageHash returns the MessageHash field value
func (o *SafeTxExtraData) GetMessageHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageHash
}

// GetMessageHashOk returns a tuple with the MessageHash field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetMessageHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageHash, true
}

// SetMessageHash sets field value
func (o *SafeTxExtraData) SetMessageHash(v string) {
	o.MessageHash = v
}

// GetSafeAddress returns the SafeAddress field value
func (o *SafeTxExtraData) GetSafeAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SafeAddress
}

// GetSafeAddressOk returns a tuple with the SafeAddress field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetSafeAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SafeAddress, true
}

// SetSafeAddress sets field value
func (o *SafeTxExtraData) SetSafeAddress(v string) {
	o.SafeAddress = v
}

// GetSafeTxHash returns the SafeTxHash field value
func (o *SafeTxExtraData) GetSafeTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SafeTxHash
}

// GetSafeTxHashOk returns a tuple with the SafeTxHash field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetSafeTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SafeTxHash, true
}

// SetSafeTxHash sets field value
func (o *SafeTxExtraData) SetSafeTxHash(v string) {
	o.SafeTxHash = v
}

// GetSafeNonce returns the SafeNonce field value
func (o *SafeTxExtraData) GetSafeNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SafeNonce
}

// GetSafeNonceOk returns a tuple with the SafeNonce field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetSafeNonceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SafeNonce, true
}

// SetSafeNonce sets field value
func (o *SafeTxExtraData) SetSafeNonce(v int32) {
	o.SafeNonce = v
}

// GetOperation returns the Operation field value
func (o *SafeTxExtraData) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *SafeTxExtraData) SetOperation(v string) {
	o.Operation = v
}

// GetGasTokenAddr returns the GasTokenAddr field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetGasTokenAddr() string {
	if o == nil || IsNil(o.GasTokenAddr) {
		var ret string
		return ret
	}
	return *o.GasTokenAddr
}

// GetGasTokenAddrOk returns a tuple with the GasTokenAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetGasTokenAddrOk() (*string, bool) {
	if o == nil || IsNil(o.GasTokenAddr) {
		return nil, false
	}
	return o.GasTokenAddr, true
}

// HasGasTokenAddr returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasGasTokenAddr() bool {
	if o != nil && !IsNil(o.GasTokenAddr) {
		return true
	}

	return false
}

// SetGasTokenAddr gets a reference to the given string and assigns it to the GasTokenAddr field.
func (o *SafeTxExtraData) SetGasTokenAddr(v string) {
	o.GasTokenAddr = &v
}

// GetSafeTxGas returns the SafeTxGas field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetSafeTxGas() int32 {
	if o == nil || IsNil(o.SafeTxGas) {
		var ret int32
		return ret
	}
	return *o.SafeTxGas
}

// GetSafeTxGasOk returns a tuple with the SafeTxGas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetSafeTxGasOk() (*int32, bool) {
	if o == nil || IsNil(o.SafeTxGas) {
		return nil, false
	}
	return o.SafeTxGas, true
}

// HasSafeTxGas returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasSafeTxGas() bool {
	if o != nil && !IsNil(o.SafeTxGas) {
		return true
	}

	return false
}

// SetSafeTxGas gets a reference to the given int32 and assigns it to the SafeTxGas field.
func (o *SafeTxExtraData) SetSafeTxGas(v int32) {
	o.SafeTxGas = &v
}

// GetBaseGas returns the BaseGas field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetBaseGas() int32 {
	if o == nil || IsNil(o.BaseGas) {
		var ret int32
		return ret
	}
	return *o.BaseGas
}

// GetBaseGasOk returns a tuple with the BaseGas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetBaseGasOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseGas) {
		return nil, false
	}
	return o.BaseGas, true
}

// HasBaseGas returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasBaseGas() bool {
	if o != nil && !IsNil(o.BaseGas) {
		return true
	}

	return false
}

// SetBaseGas gets a reference to the given int32 and assigns it to the BaseGas field.
func (o *SafeTxExtraData) SetBaseGas(v int32) {
	o.BaseGas = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetGasPrice() string {
	if o == nil || IsNil(o.GasPrice) {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetGasPriceOk() (*string, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *SafeTxExtraData) SetGasPrice(v string) {
	o.GasPrice = &v
}

// GetRefundReceiver returns the RefundReceiver field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetRefundReceiver() string {
	if o == nil || IsNil(o.RefundReceiver) {
		var ret string
		return ret
	}
	return *o.RefundReceiver
}

// GetRefundReceiverOk returns a tuple with the RefundReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetRefundReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.RefundReceiver) {
		return nil, false
	}
	return o.RefundReceiver, true
}

// HasRefundReceiver returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasRefundReceiver() bool {
	if o != nil && !IsNil(o.RefundReceiver) {
		return true
	}

	return false
}

// SetRefundReceiver gets a reference to the given string and assigns it to the RefundReceiver field.
func (o *SafeTxExtraData) SetRefundReceiver(v string) {
	o.RefundReceiver = &v
}

// GetToContractName returns the ToContractName field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetToContractName() string {
	if o == nil || IsNil(o.ToContractName) {
		var ret string
		return ret
	}
	return *o.ToContractName
}

// GetToContractNameOk returns a tuple with the ToContractName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetToContractNameOk() (*string, bool) {
	if o == nil || IsNil(o.ToContractName) {
		return nil, false
	}
	return o.ToContractName, true
}

// HasToContractName returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasToContractName() bool {
	if o != nil && !IsNil(o.ToContractName) {
		return true
	}

	return false
}

// SetToContractName gets a reference to the given string and assigns it to the ToContractName field.
func (o *SafeTxExtraData) SetToContractName(v string) {
	o.ToContractName = &v
}

// GetDecodedData returns the DecodedData field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetDecodedData() SafeTxDecodedData {
	if o == nil || IsNil(o.DecodedData) {
		var ret SafeTxDecodedData
		return ret
	}
	return *o.DecodedData
}

// GetDecodedDataOk returns a tuple with the DecodedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetDecodedDataOk() (*SafeTxDecodedData, bool) {
	if o == nil || IsNil(o.DecodedData) {
		return nil, false
	}
	return o.DecodedData, true
}

// HasDecodedData returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasDecodedData() bool {
	if o != nil && !IsNil(o.DecodedData) {
		return true
	}

	return false
}

// SetDecodedData gets a reference to the given SafeTxDecodedData and assigns it to the DecodedData field.
func (o *SafeTxExtraData) SetDecodedData(v SafeTxDecodedData) {
	o.DecodedData = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *SafeTxExtraData) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SafeTxExtraData) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *SafeTxExtraData) SetSignature(v string) {
	o.Signature = &v
}

// GetWei returns the Wei field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SafeTxExtraData) GetWei() string {
	if o == nil || IsNil(o.Wei.Get()) {
		var ret string
		return ret
	}
	return *o.Wei.Get()
}

// GetWeiOk returns a tuple with the Wei field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SafeTxExtraData) GetWeiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Wei.Get(), o.Wei.IsSet()
}

// HasWei returns a boolean if a field has been set.
func (o *SafeTxExtraData) HasWei() bool {
	if o != nil && o.Wei.IsSet() {
		return true
	}

	return false
}

// SetWei gets a reference to the given NullableString and assigns it to the Wei field.
func (o *SafeTxExtraData) SetWei(v string) {
	o.Wei.Set(&v)
}
// SetWeiNil sets the value for Wei to be an explicit nil
func (o *SafeTxExtraData) SetWeiNil() {
	o.Wei.Set(nil)
}

// UnsetWei ensures that no value is present for Wei, not even an explicit nil
func (o *SafeTxExtraData) UnsetWei() {
	o.Wei.Unset()
}

func (o SafeTxExtraData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SafeTxExtraData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["to"] = o.To
	toSerialize["value"] = o.Value
	toSerialize["data"] = o.Data
	toSerialize["domain_hash"] = o.DomainHash
	toSerialize["message_hash"] = o.MessageHash
	toSerialize["safe_address"] = o.SafeAddress
	toSerialize["safe_tx_hash"] = o.SafeTxHash
	toSerialize["safe_nonce"] = o.SafeNonce
	toSerialize["operation"] = o.Operation
	if !IsNil(o.GasTokenAddr) {
		toSerialize["gas_token_addr"] = o.GasTokenAddr
	}
	if !IsNil(o.SafeTxGas) {
		toSerialize["safe_tx_gas"] = o.SafeTxGas
	}
	if !IsNil(o.BaseGas) {
		toSerialize["base_gas"] = o.BaseGas
	}
	if !IsNil(o.GasPrice) {
		toSerialize["gas_price"] = o.GasPrice
	}
	if !IsNil(o.RefundReceiver) {
		toSerialize["refund_receiver"] = o.RefundReceiver
	}
	if !IsNil(o.ToContractName) {
		toSerialize["to_contract_name"] = o.ToContractName
	}
	if !IsNil(o.DecodedData) {
		toSerialize["decoded_data"] = o.DecodedData
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if o.Wei.IsSet() {
		toSerialize["wei"] = o.Wei.Get()
	}
	return toSerialize, nil
}

func (o *SafeTxExtraData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"to",
		"value",
		"data",
		"domain_hash",
		"message_hash",
		"safe_address",
		"safe_tx_hash",
		"safe_nonce",
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSafeTxExtraData := _SafeTxExtraData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSafeTxExtraData)

	if err != nil {
		return err
	}

	*o = SafeTxExtraData(varSafeTxExtraData)

	return err
}

type NullableSafeTxExtraData struct {
	value *SafeTxExtraData
	isSet bool
}

func (v NullableSafeTxExtraData) Get() *SafeTxExtraData {
	return v.value
}

func (v *NullableSafeTxExtraData) Set(val *SafeTxExtraData) {
	v.value = val
	v.isSet = true
}

func (v NullableSafeTxExtraData) IsSet() bool {
	return v.isSet
}

func (v *NullableSafeTxExtraData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSafeTxExtraData(val *SafeTxExtraData) *NullableSafeTxExtraData {
	return &NullableSafeTxExtraData{value: val, isSet: true}
}

func (v NullableSafeTxExtraData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSafeTxExtraData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


