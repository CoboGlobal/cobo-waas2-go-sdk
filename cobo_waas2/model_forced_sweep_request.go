/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ForcedSweepRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForcedSweepRequest{}

// ForcedSweepRequest struct for ForcedSweepRequest
type ForcedSweepRequest struct {
	// The request ID that is used to track a forced sweep. The request ID is provided by you and must be unique.
	RequestId string `json:"request_id"`
	// The ID of the wallet in which the funds will be forcefully swept.
	WalletId string `json:"wallet_id"`
	// The ID of the token to be forcefully swept.
	TokenId string `json:"token_id"`
	// The amount of the token to be forcefully swept.
	Amount string `json:"amount"`
}

type _ForcedSweepRequest ForcedSweepRequest

// NewForcedSweepRequest instantiates a new ForcedSweepRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForcedSweepRequest(requestId string, walletId string, tokenId string, amount string) *ForcedSweepRequest {
	this := ForcedSweepRequest{}
	this.RequestId = requestId
	this.WalletId = walletId
	this.TokenId = tokenId
	this.Amount = amount
	return &this
}

// NewForcedSweepRequestWithDefaults instantiates a new ForcedSweepRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForcedSweepRequestWithDefaults() *ForcedSweepRequest {
	this := ForcedSweepRequest{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *ForcedSweepRequest) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ForcedSweepRequest) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ForcedSweepRequest) SetRequestId(v string) {
	o.RequestId = v
}

// GetWalletId returns the WalletId field value
func (o *ForcedSweepRequest) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *ForcedSweepRequest) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *ForcedSweepRequest) SetWalletId(v string) {
	o.WalletId = v
}

// GetTokenId returns the TokenId field value
func (o *ForcedSweepRequest) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *ForcedSweepRequest) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *ForcedSweepRequest) SetTokenId(v string) {
	o.TokenId = v
}

// GetAmount returns the Amount field value
func (o *ForcedSweepRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ForcedSweepRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ForcedSweepRequest) SetAmount(v string) {
	o.Amount = v
}

func (o ForcedSweepRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForcedSweepRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["token_id"] = o.TokenId
	toSerialize["amount"] = o.Amount
	return toSerialize, nil
}

func (o *ForcedSweepRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"wallet_id",
		"token_id",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varForcedSweepRequest := _ForcedSweepRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varForcedSweepRequest)

	if err != nil {
		return err
	}

	*o = ForcedSweepRequest(varForcedSweepRequest)

	return err
}

type NullableForcedSweepRequest struct {
	value *ForcedSweepRequest
	isSet bool
}

func (v NullableForcedSweepRequest) Get() *ForcedSweepRequest {
	return v.value
}

func (v *NullableForcedSweepRequest) Set(val *ForcedSweepRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableForcedSweepRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableForcedSweepRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForcedSweepRequest(val *ForcedSweepRequest) *NullableForcedSweepRequest {
	return &NullableForcedSweepRequest{value: val, isSet: true}
}

func (v NullableForcedSweepRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForcedSweepRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


