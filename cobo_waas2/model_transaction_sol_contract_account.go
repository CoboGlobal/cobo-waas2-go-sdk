/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TransactionSolContractAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionSolContractAccount{}

// TransactionSolContractAccount sol contract instruction account
type TransactionSolContractAccount struct {
	// account address. If the account is signer, pubkey needs to match the from_address parameter. 
	Pubkey *string `json:"pubkey,omitempty"`
	// boolean value indicating whether the account can sign transactions. 
	IsSigner *bool `json:"is_signer,omitempty"`
	// boolean value indicating whether the account can be modified. 
	IsWritable *bool `json:"is_writable,omitempty"`
}

// NewTransactionSolContractAccount instantiates a new TransactionSolContractAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionSolContractAccount() *TransactionSolContractAccount {
	this := TransactionSolContractAccount{}
	return &this
}

// NewTransactionSolContractAccountWithDefaults instantiates a new TransactionSolContractAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionSolContractAccountWithDefaults() *TransactionSolContractAccount {
	this := TransactionSolContractAccount{}
	return &this
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *TransactionSolContractAccount) GetPubkey() string {
	if o == nil || IsNil(o.Pubkey) {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSolContractAccount) GetPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Pubkey) {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *TransactionSolContractAccount) HasPubkey() bool {
	if o != nil && !IsNil(o.Pubkey) {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *TransactionSolContractAccount) SetPubkey(v string) {
	o.Pubkey = &v
}

// GetIsSigner returns the IsSigner field value if set, zero value otherwise.
func (o *TransactionSolContractAccount) GetIsSigner() bool {
	if o == nil || IsNil(o.IsSigner) {
		var ret bool
		return ret
	}
	return *o.IsSigner
}

// GetIsSignerOk returns a tuple with the IsSigner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSolContractAccount) GetIsSignerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSigner) {
		return nil, false
	}
	return o.IsSigner, true
}

// HasIsSigner returns a boolean if a field has been set.
func (o *TransactionSolContractAccount) HasIsSigner() bool {
	if o != nil && !IsNil(o.IsSigner) {
		return true
	}

	return false
}

// SetIsSigner gets a reference to the given bool and assigns it to the IsSigner field.
func (o *TransactionSolContractAccount) SetIsSigner(v bool) {
	o.IsSigner = &v
}

// GetIsWritable returns the IsWritable field value if set, zero value otherwise.
func (o *TransactionSolContractAccount) GetIsWritable() bool {
	if o == nil || IsNil(o.IsWritable) {
		var ret bool
		return ret
	}
	return *o.IsWritable
}

// GetIsWritableOk returns a tuple with the IsWritable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSolContractAccount) GetIsWritableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWritable) {
		return nil, false
	}
	return o.IsWritable, true
}

// HasIsWritable returns a boolean if a field has been set.
func (o *TransactionSolContractAccount) HasIsWritable() bool {
	if o != nil && !IsNil(o.IsWritable) {
		return true
	}

	return false
}

// SetIsWritable gets a reference to the given bool and assigns it to the IsWritable field.
func (o *TransactionSolContractAccount) SetIsWritable(v bool) {
	o.IsWritable = &v
}

func (o TransactionSolContractAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionSolContractAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pubkey) {
		toSerialize["pubkey"] = o.Pubkey
	}
	if !IsNil(o.IsSigner) {
		toSerialize["is_signer"] = o.IsSigner
	}
	if !IsNil(o.IsWritable) {
		toSerialize["is_writable"] = o.IsWritable
	}
	return toSerialize, nil
}

type NullableTransactionSolContractAccount struct {
	value *TransactionSolContractAccount
	isSet bool
}

func (v NullableTransactionSolContractAccount) Get() *TransactionSolContractAccount {
	return v.value
}

func (v *NullableTransactionSolContractAccount) Set(val *TransactionSolContractAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionSolContractAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionSolContractAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionSolContractAccount(val *TransactionSolContractAccount) *NullableTransactionSolContractAccount {
	return &NullableTransactionSolContractAccount{value: val, isSet: true}
}

func (v NullableTransactionSolContractAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionSolContractAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


