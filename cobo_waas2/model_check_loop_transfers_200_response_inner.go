/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the CheckLoopTransfers200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckLoopTransfers200ResponseInner{}

// CheckLoopTransfers200ResponseInner struct for CheckLoopTransfers200ResponseInner
type CheckLoopTransfers200ResponseInner struct {
	// The wallet address.
	Address *string `json:"address,omitempty"`
	// Whether the transaction from the given source to the given destination address can be executed as a [Cobo Loop](https://manuals.cobo.com/en/portal/custodial-wallets/cobo-loop) transfer.  - `true`: The transaction can be executed as a Cobo Loop transfer. - `false`: The transaction cannot be executed as a Cobo Loop transfer. 
	IsLoop *bool `json:"is_loop,omitempty"`
}

// NewCheckLoopTransfers200ResponseInner instantiates a new CheckLoopTransfers200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckLoopTransfers200ResponseInner() *CheckLoopTransfers200ResponseInner {
	this := CheckLoopTransfers200ResponseInner{}
	return &this
}

// NewCheckLoopTransfers200ResponseInnerWithDefaults instantiates a new CheckLoopTransfers200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckLoopTransfers200ResponseInnerWithDefaults() *CheckLoopTransfers200ResponseInner {
	this := CheckLoopTransfers200ResponseInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CheckLoopTransfers200ResponseInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckLoopTransfers200ResponseInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CheckLoopTransfers200ResponseInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CheckLoopTransfers200ResponseInner) SetAddress(v string) {
	o.Address = &v
}

// GetIsLoop returns the IsLoop field value if set, zero value otherwise.
func (o *CheckLoopTransfers200ResponseInner) GetIsLoop() bool {
	if o == nil || IsNil(o.IsLoop) {
		var ret bool
		return ret
	}
	return *o.IsLoop
}

// GetIsLoopOk returns a tuple with the IsLoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckLoopTransfers200ResponseInner) GetIsLoopOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLoop) {
		return nil, false
	}
	return o.IsLoop, true
}

// HasIsLoop returns a boolean if a field has been set.
func (o *CheckLoopTransfers200ResponseInner) HasIsLoop() bool {
	if o != nil && !IsNil(o.IsLoop) {
		return true
	}

	return false
}

// SetIsLoop gets a reference to the given bool and assigns it to the IsLoop field.
func (o *CheckLoopTransfers200ResponseInner) SetIsLoop(v bool) {
	o.IsLoop = &v
}

func (o CheckLoopTransfers200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckLoopTransfers200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.IsLoop) {
		toSerialize["is_loop"] = o.IsLoop
	}
	return toSerialize, nil
}

type NullableCheckLoopTransfers200ResponseInner struct {
	value *CheckLoopTransfers200ResponseInner
	isSet bool
}

func (v NullableCheckLoopTransfers200ResponseInner) Get() *CheckLoopTransfers200ResponseInner {
	return v.value
}

func (v *NullableCheckLoopTransfers200ResponseInner) Set(val *CheckLoopTransfers200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckLoopTransfers200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckLoopTransfers200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckLoopTransfers200ResponseInner(val *CheckLoopTransfers200ResponseInner) *NullableCheckLoopTransfers200ResponseInner {
	return &NullableCheckLoopTransfers200ResponseInner{value: val, isSet: true}
}

func (v NullableCheckLoopTransfers200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckLoopTransfers200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


