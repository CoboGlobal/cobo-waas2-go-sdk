/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSwapActivityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSwapActivityRequest{}

// CreateSwapActivityRequest struct for CreateSwapActivityRequest
type CreateSwapActivityRequest struct {
	// The unique identifier of the wallet.
	WalletId string `json:"wallet_id"`
	// The unique identifier of the quote.
	QuoteId string `json:"quote_id"`
}

type _CreateSwapActivityRequest CreateSwapActivityRequest

// NewCreateSwapActivityRequest instantiates a new CreateSwapActivityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSwapActivityRequest(walletId string, quoteId string) *CreateSwapActivityRequest {
	this := CreateSwapActivityRequest{}
	this.WalletId = walletId
	this.QuoteId = quoteId
	return &this
}

// NewCreateSwapActivityRequestWithDefaults instantiates a new CreateSwapActivityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSwapActivityRequestWithDefaults() *CreateSwapActivityRequest {
	this := CreateSwapActivityRequest{}
	return &this
}

// GetWalletId returns the WalletId field value
func (o *CreateSwapActivityRequest) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *CreateSwapActivityRequest) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *CreateSwapActivityRequest) SetWalletId(v string) {
	o.WalletId = v
}

// GetQuoteId returns the QuoteId field value
func (o *CreateSwapActivityRequest) GetQuoteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *CreateSwapActivityRequest) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *CreateSwapActivityRequest) SetQuoteId(v string) {
	o.QuoteId = v
}

func (o CreateSwapActivityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSwapActivityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["quote_id"] = o.QuoteId
	return toSerialize, nil
}

func (o *CreateSwapActivityRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"wallet_id",
		"quote_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSwapActivityRequest := _CreateSwapActivityRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSwapActivityRequest)

	if err != nil {
		return err
	}

	*o = CreateSwapActivityRequest(varCreateSwapActivityRequest)

	return err
}

type NullableCreateSwapActivityRequest struct {
	value *CreateSwapActivityRequest
	isSet bool
}

func (v NullableCreateSwapActivityRequest) Get() *CreateSwapActivityRequest {
	return v.value
}

func (v *NullableCreateSwapActivityRequest) Set(val *CreateSwapActivityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSwapActivityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSwapActivityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSwapActivityRequest(val *CreateSwapActivityRequest) *NullableCreateSwapActivityRequest {
	return &NullableCreateSwapActivityRequest{value: val, isSet: true}
}

func (v NullableCreateSwapActivityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSwapActivityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


