/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TransactionApprovalDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionApprovalDetail{}

// TransactionApprovalDetail The approval detail data for transaction.
type TransactionApprovalDetail struct {
	Spender *TransactionRoleApprovalDetail `json:"spender,omitempty"`
	Approver *TransactionRoleApprovalDetail `json:"approver,omitempty"`
	AddressOwner *TransactionRoleApprovalDetail `json:"address_owner,omitempty"`
}

// NewTransactionApprovalDetail instantiates a new TransactionApprovalDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionApprovalDetail() *TransactionApprovalDetail {
	this := TransactionApprovalDetail{}
	return &this
}

// NewTransactionApprovalDetailWithDefaults instantiates a new TransactionApprovalDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionApprovalDetailWithDefaults() *TransactionApprovalDetail {
	this := TransactionApprovalDetail{}
	return &this
}

// GetSpender returns the Spender field value if set, zero value otherwise.
func (o *TransactionApprovalDetail) GetSpender() TransactionRoleApprovalDetail {
	if o == nil || IsNil(o.Spender) {
		var ret TransactionRoleApprovalDetail
		return ret
	}
	return *o.Spender
}

// GetSpenderOk returns a tuple with the Spender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionApprovalDetail) GetSpenderOk() (*TransactionRoleApprovalDetail, bool) {
	if o == nil || IsNil(o.Spender) {
		return nil, false
	}
	return o.Spender, true
}

// HasSpender returns a boolean if a field has been set.
func (o *TransactionApprovalDetail) HasSpender() bool {
	if o != nil && !IsNil(o.Spender) {
		return true
	}

	return false
}

// SetSpender gets a reference to the given TransactionRoleApprovalDetail and assigns it to the Spender field.
func (o *TransactionApprovalDetail) SetSpender(v TransactionRoleApprovalDetail) {
	o.Spender = &v
}

// GetApprover returns the Approver field value if set, zero value otherwise.
func (o *TransactionApprovalDetail) GetApprover() TransactionRoleApprovalDetail {
	if o == nil || IsNil(o.Approver) {
		var ret TransactionRoleApprovalDetail
		return ret
	}
	return *o.Approver
}

// GetApproverOk returns a tuple with the Approver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionApprovalDetail) GetApproverOk() (*TransactionRoleApprovalDetail, bool) {
	if o == nil || IsNil(o.Approver) {
		return nil, false
	}
	return o.Approver, true
}

// HasApprover returns a boolean if a field has been set.
func (o *TransactionApprovalDetail) HasApprover() bool {
	if o != nil && !IsNil(o.Approver) {
		return true
	}

	return false
}

// SetApprover gets a reference to the given TransactionRoleApprovalDetail and assigns it to the Approver field.
func (o *TransactionApprovalDetail) SetApprover(v TransactionRoleApprovalDetail) {
	o.Approver = &v
}

// GetAddressOwner returns the AddressOwner field value if set, zero value otherwise.
func (o *TransactionApprovalDetail) GetAddressOwner() TransactionRoleApprovalDetail {
	if o == nil || IsNil(o.AddressOwner) {
		var ret TransactionRoleApprovalDetail
		return ret
	}
	return *o.AddressOwner
}

// GetAddressOwnerOk returns a tuple with the AddressOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionApprovalDetail) GetAddressOwnerOk() (*TransactionRoleApprovalDetail, bool) {
	if o == nil || IsNil(o.AddressOwner) {
		return nil, false
	}
	return o.AddressOwner, true
}

// HasAddressOwner returns a boolean if a field has been set.
func (o *TransactionApprovalDetail) HasAddressOwner() bool {
	if o != nil && !IsNil(o.AddressOwner) {
		return true
	}

	return false
}

// SetAddressOwner gets a reference to the given TransactionRoleApprovalDetail and assigns it to the AddressOwner field.
func (o *TransactionApprovalDetail) SetAddressOwner(v TransactionRoleApprovalDetail) {
	o.AddressOwner = &v
}

func (o TransactionApprovalDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionApprovalDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Spender) {
		toSerialize["spender"] = o.Spender
	}
	if !IsNil(o.Approver) {
		toSerialize["approver"] = o.Approver
	}
	if !IsNil(o.AddressOwner) {
		toSerialize["address_owner"] = o.AddressOwner
	}
	return toSerialize, nil
}

type NullableTransactionApprovalDetail struct {
	value *TransactionApprovalDetail
	isSet bool
}

func (v NullableTransactionApprovalDetail) Get() *TransactionApprovalDetail {
	return v.value
}

func (v *NullableTransactionApprovalDetail) Set(val *TransactionApprovalDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionApprovalDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionApprovalDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionApprovalDetail(val *TransactionApprovalDetail) *NullableTransactionApprovalDetail {
	return &NullableTransactionApprovalDetail{value: val, isSet: true}
}

func (v NullableTransactionApprovalDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionApprovalDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


