/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SuspendedTokenEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedTokenEventData{}

// SuspendedTokenEventData struct for SuspendedTokenEventData
type SuspendedTokenEventData struct {
	//  The data type of the event. - `Transaction`: The transaction event data. - `TSSRequest`: The TSS request event data. - `Addresses`: The addresses event data. - `WalletInfo`: The wallet information event data. - `MPCVault`: The MPC vault event data. - `Chains`: The enabled chain event data. - `Tokens`: The enabled token event data. - `TokenListing`: The token listing event data.        - `PaymentOrder`: The payment order event data. - `PaymentRefund`: The payment refund event data. - `PaymentSettlement`: The payment settlement event data. - `PaymentTransaction`: The payment transaction event data. - `PaymentAddressUpdate`: The top-up address update event data. - `BalanceUpdateInfo`: The balance update event data. - `SuspendedToken`: The token suspension event data. - `ComplianceDisposition`: The compliance disposition event data.
	DataType string `json:"data_type"`
	// A list of token IDs, separated by comma.
	TokenIds string `json:"token_ids"`
	OperationType SuspendedTokenOperationType `json:"operation_type"`
}

type _SuspendedTokenEventData SuspendedTokenEventData

// NewSuspendedTokenEventData instantiates a new SuspendedTokenEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedTokenEventData(dataType string, tokenIds string, operationType SuspendedTokenOperationType) *SuspendedTokenEventData {
	this := SuspendedTokenEventData{}
	this.DataType = dataType
	this.TokenIds = tokenIds
	this.OperationType = operationType
	return &this
}

// NewSuspendedTokenEventDataWithDefaults instantiates a new SuspendedTokenEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedTokenEventDataWithDefaults() *SuspendedTokenEventData {
	this := SuspendedTokenEventData{}
	return &this
}

// GetDataType returns the DataType field value
func (o *SuspendedTokenEventData) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *SuspendedTokenEventData) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *SuspendedTokenEventData) SetDataType(v string) {
	o.DataType = v
}

// GetTokenIds returns the TokenIds field value
func (o *SuspendedTokenEventData) GetTokenIds() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenIds
}

// GetTokenIdsOk returns a tuple with the TokenIds field value
// and a boolean to check if the value has been set.
func (o *SuspendedTokenEventData) GetTokenIdsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenIds, true
}

// SetTokenIds sets field value
func (o *SuspendedTokenEventData) SetTokenIds(v string) {
	o.TokenIds = v
}

// GetOperationType returns the OperationType field value
func (o *SuspendedTokenEventData) GetOperationType() SuspendedTokenOperationType {
	if o == nil {
		var ret SuspendedTokenOperationType
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *SuspendedTokenEventData) GetOperationTypeOk() (*SuspendedTokenOperationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *SuspendedTokenEventData) SetOperationType(v SuspendedTokenOperationType) {
	o.OperationType = v
}

func (o SuspendedTokenEventData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedTokenEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_type"] = o.DataType
	toSerialize["token_ids"] = o.TokenIds
	toSerialize["operation_type"] = o.OperationType
	return toSerialize, nil
}

func (o *SuspendedTokenEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data_type",
		"token_ids",
		"operation_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSuspendedTokenEventData := _SuspendedTokenEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSuspendedTokenEventData)

	if err != nil {
		return err
	}

	*o = SuspendedTokenEventData(varSuspendedTokenEventData)

	return err
}

type NullableSuspendedTokenEventData struct {
	value *SuspendedTokenEventData
	isSet bool
}

func (v NullableSuspendedTokenEventData) Get() *SuspendedTokenEventData {
	return v.value
}

func (v *NullableSuspendedTokenEventData) Set(val *SuspendedTokenEventData) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedTokenEventData) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedTokenEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedTokenEventData(val *SuspendedTokenEventData) *NullableSuspendedTokenEventData {
	return &NullableSuspendedTokenEventData{value: val, isSet: true}
}

func (v NullableSuspendedTokenEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedTokenEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


