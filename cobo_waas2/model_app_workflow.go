/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppWorkflow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppWorkflow{}

// AppWorkflow The information of an app workflow approval user entry.
type AppWorkflow struct {
	// The workflow id.
	WorkflowId string `json:"workflow_id"`
	// The workflow operation id.
	OperationId string `json:"operation_id"`
	// The workflow operation name.
	OperationName string `json:"operation_name"`
	CurrentPolicies []AppWorkflowPolicy `json:"current_policies"`
}

type _AppWorkflow AppWorkflow

// NewAppWorkflow instantiates a new AppWorkflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppWorkflow(workflowId string, operationId string, operationName string, currentPolicies []AppWorkflowPolicy) *AppWorkflow {
	this := AppWorkflow{}
	this.WorkflowId = workflowId
	this.OperationId = operationId
	this.OperationName = operationName
	this.CurrentPolicies = currentPolicies
	return &this
}

// NewAppWorkflowWithDefaults instantiates a new AppWorkflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWorkflowWithDefaults() *AppWorkflow {
	this := AppWorkflow{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *AppWorkflow) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *AppWorkflow) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *AppWorkflow) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetOperationId returns the OperationId field value
func (o *AppWorkflow) GetOperationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value
// and a boolean to check if the value has been set.
func (o *AppWorkflow) GetOperationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationId, true
}

// SetOperationId sets field value
func (o *AppWorkflow) SetOperationId(v string) {
	o.OperationId = v
}

// GetOperationName returns the OperationName field value
func (o *AppWorkflow) GetOperationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationName
}

// GetOperationNameOk returns a tuple with the OperationName field value
// and a boolean to check if the value has been set.
func (o *AppWorkflow) GetOperationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationName, true
}

// SetOperationName sets field value
func (o *AppWorkflow) SetOperationName(v string) {
	o.OperationName = v
}

// GetCurrentPolicies returns the CurrentPolicies field value
func (o *AppWorkflow) GetCurrentPolicies() []AppWorkflowPolicy {
	if o == nil {
		var ret []AppWorkflowPolicy
		return ret
	}

	return o.CurrentPolicies
}

// GetCurrentPoliciesOk returns a tuple with the CurrentPolicies field value
// and a boolean to check if the value has been set.
func (o *AppWorkflow) GetCurrentPoliciesOk() ([]AppWorkflowPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentPolicies, true
}

// SetCurrentPolicies sets field value
func (o *AppWorkflow) SetCurrentPolicies(v []AppWorkflowPolicy) {
	o.CurrentPolicies = v
}

func (o AppWorkflow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppWorkflow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workflow_id"] = o.WorkflowId
	toSerialize["operation_id"] = o.OperationId
	toSerialize["operation_name"] = o.OperationName
	toSerialize["current_policies"] = o.CurrentPolicies
	return toSerialize, nil
}

func (o *AppWorkflow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"workflow_id",
		"operation_id",
		"operation_name",
		"current_policies",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppWorkflow := _AppWorkflow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppWorkflow)

	if err != nil {
		return err
	}

	*o = AppWorkflow(varAppWorkflow)

	return err
}

type NullableAppWorkflow struct {
	value *AppWorkflow
	isSet bool
}

func (v NullableAppWorkflow) Get() *AppWorkflow {
	return v.value
}

func (v *NullableAppWorkflow) Set(val *AppWorkflow) {
	v.value = val
	v.isSet = true
}

func (v NullableAppWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableAppWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppWorkflow(val *AppWorkflow) *NullableAppWorkflow {
	return &NullableAppWorkflow{value: val, isSet: true}
}

func (v NullableAppWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


