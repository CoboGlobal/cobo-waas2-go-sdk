/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListTokenBalancesForFeeStation200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTokenBalancesForFeeStation200ResponseDataInner{}

// ListTokenBalancesForFeeStation200ResponseDataInner The balance information.
type ListTokenBalancesForFeeStation200ResponseDataInner struct {
	// The token ID, which is the unique identifier of a token. You can retrieve the IDs of all the tokens you can use by calling [List enabled tokens](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-tokens).
	TokenId string `json:"token_id"`
	// The chain ID, which is the unique identifier of a blockchain. You can retrieve the IDs of all the chains you can use by calling [List enabled chains](https://www.cobo.com/developers/v2/api-references/wallets/list-enabled-chains).
	ChainId *string `json:"chain_id,omitempty"`
	Balance Balance `json:"balance"`
}

type _ListTokenBalancesForFeeStation200ResponseDataInner ListTokenBalancesForFeeStation200ResponseDataInner

// NewListTokenBalancesForFeeStation200ResponseDataInner instantiates a new ListTokenBalancesForFeeStation200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTokenBalancesForFeeStation200ResponseDataInner(tokenId string, balance Balance) *ListTokenBalancesForFeeStation200ResponseDataInner {
	this := ListTokenBalancesForFeeStation200ResponseDataInner{}
	this.TokenId = tokenId
	this.Balance = balance
	return &this
}

// NewListTokenBalancesForFeeStation200ResponseDataInnerWithDefaults instantiates a new ListTokenBalancesForFeeStation200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTokenBalancesForFeeStation200ResponseDataInnerWithDefaults() *ListTokenBalancesForFeeStation200ResponseDataInner {
	this := ListTokenBalancesForFeeStation200ResponseDataInner{}
	return &this
}

// GetTokenId returns the TokenId field value
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) SetTokenId(v string) {
	o.TokenId = v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetChainId() string {
	if o == nil || IsNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) SetChainId(v string) {
	o.ChainId = &v
}

// GetBalance returns the Balance field value
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetBalance() Balance {
	if o == nil {
		var ret Balance
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) GetBalanceOk() (*Balance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *ListTokenBalancesForFeeStation200ResponseDataInner) SetBalance(v Balance) {
	o.Balance = v
}

func (o ListTokenBalancesForFeeStation200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTokenBalancesForFeeStation200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token_id"] = o.TokenId
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	toSerialize["balance"] = o.Balance
	return toSerialize, nil
}

func (o *ListTokenBalancesForFeeStation200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token_id",
		"balance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListTokenBalancesForFeeStation200ResponseDataInner := _ListTokenBalancesForFeeStation200ResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListTokenBalancesForFeeStation200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = ListTokenBalancesForFeeStation200ResponseDataInner(varListTokenBalancesForFeeStation200ResponseDataInner)

	return err
}

type NullableListTokenBalancesForFeeStation200ResponseDataInner struct {
	value *ListTokenBalancesForFeeStation200ResponseDataInner
	isSet bool
}

func (v NullableListTokenBalancesForFeeStation200ResponseDataInner) Get() *ListTokenBalancesForFeeStation200ResponseDataInner {
	return v.value
}

func (v *NullableListTokenBalancesForFeeStation200ResponseDataInner) Set(val *ListTokenBalancesForFeeStation200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListTokenBalancesForFeeStation200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListTokenBalancesForFeeStation200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTokenBalancesForFeeStation200ResponseDataInner(val *ListTokenBalancesForFeeStation200ResponseDataInner) *NullableListTokenBalancesForFeeStation200ResponseDataInner {
	return &NullableListTokenBalancesForFeeStation200ResponseDataInner{value: val, isSet: true}
}

func (v NullableListTokenBalancesForFeeStation200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTokenBalancesForFeeStation200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


