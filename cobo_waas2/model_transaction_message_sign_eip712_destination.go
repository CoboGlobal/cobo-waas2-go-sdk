/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionMessageSignEIP712Destination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionMessageSignEIP712Destination{}

// TransactionMessageSignEIP712Destination Information about the transaction destination type `EVM_EIP_712_Signature`. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.  Switch between the tabs to display the properties for different transaction destinations. 
type TransactionMessageSignEIP712Destination struct {
	DestinationType TransactionDestinationType `json:"destination_type"`
	// The raw structured data to be signed, formatted as a JSON string.
	RawStructuredData *string `json:"raw_structured_data,omitempty"`
	// The structured data to be signed, formatted as a JSON object according to the EIP-712 standard.
	StructuredData map[string]interface{} `json:"structured_data"`
	SafeTxExtraData *SafeTxExtraData `json:"safe_tx_extra_data,omitempty"`
}

type _TransactionMessageSignEIP712Destination TransactionMessageSignEIP712Destination

// NewTransactionMessageSignEIP712Destination instantiates a new TransactionMessageSignEIP712Destination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionMessageSignEIP712Destination(destinationType TransactionDestinationType, structuredData map[string]interface{}) *TransactionMessageSignEIP712Destination {
	this := TransactionMessageSignEIP712Destination{}
	this.DestinationType = destinationType
	this.StructuredData = structuredData
	return &this
}

// NewTransactionMessageSignEIP712DestinationWithDefaults instantiates a new TransactionMessageSignEIP712Destination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionMessageSignEIP712DestinationWithDefaults() *TransactionMessageSignEIP712Destination {
	this := TransactionMessageSignEIP712Destination{}
	return &this
}

// GetDestinationType returns the DestinationType field value
func (o *TransactionMessageSignEIP712Destination) GetDestinationType() TransactionDestinationType {
	if o == nil {
		var ret TransactionDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *TransactionMessageSignEIP712Destination) GetDestinationTypeOk() (*TransactionDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *TransactionMessageSignEIP712Destination) SetDestinationType(v TransactionDestinationType) {
	o.DestinationType = v
}

// GetRawStructuredData returns the RawStructuredData field value if set, zero value otherwise.
func (o *TransactionMessageSignEIP712Destination) GetRawStructuredData() string {
	if o == nil || IsNil(o.RawStructuredData) {
		var ret string
		return ret
	}
	return *o.RawStructuredData
}

// GetRawStructuredDataOk returns a tuple with the RawStructuredData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMessageSignEIP712Destination) GetRawStructuredDataOk() (*string, bool) {
	if o == nil || IsNil(o.RawStructuredData) {
		return nil, false
	}
	return o.RawStructuredData, true
}

// HasRawStructuredData returns a boolean if a field has been set.
func (o *TransactionMessageSignEIP712Destination) HasRawStructuredData() bool {
	if o != nil && !IsNil(o.RawStructuredData) {
		return true
	}

	return false
}

// SetRawStructuredData gets a reference to the given string and assigns it to the RawStructuredData field.
func (o *TransactionMessageSignEIP712Destination) SetRawStructuredData(v string) {
	o.RawStructuredData = &v
}

// GetStructuredData returns the StructuredData field value
func (o *TransactionMessageSignEIP712Destination) GetStructuredData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.StructuredData
}

// GetStructuredDataOk returns a tuple with the StructuredData field value
// and a boolean to check if the value has been set.
func (o *TransactionMessageSignEIP712Destination) GetStructuredDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.StructuredData, true
}

// SetStructuredData sets field value
func (o *TransactionMessageSignEIP712Destination) SetStructuredData(v map[string]interface{}) {
	o.StructuredData = v
}

// GetSafeTxExtraData returns the SafeTxExtraData field value if set, zero value otherwise.
func (o *TransactionMessageSignEIP712Destination) GetSafeTxExtraData() SafeTxExtraData {
	if o == nil || IsNil(o.SafeTxExtraData) {
		var ret SafeTxExtraData
		return ret
	}
	return *o.SafeTxExtraData
}

// GetSafeTxExtraDataOk returns a tuple with the SafeTxExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMessageSignEIP712Destination) GetSafeTxExtraDataOk() (*SafeTxExtraData, bool) {
	if o == nil || IsNil(o.SafeTxExtraData) {
		return nil, false
	}
	return o.SafeTxExtraData, true
}

// HasSafeTxExtraData returns a boolean if a field has been set.
func (o *TransactionMessageSignEIP712Destination) HasSafeTxExtraData() bool {
	if o != nil && !IsNil(o.SafeTxExtraData) {
		return true
	}

	return false
}

// SetSafeTxExtraData gets a reference to the given SafeTxExtraData and assigns it to the SafeTxExtraData field.
func (o *TransactionMessageSignEIP712Destination) SetSafeTxExtraData(v SafeTxExtraData) {
	o.SafeTxExtraData = &v
}

func (o TransactionMessageSignEIP712Destination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionMessageSignEIP712Destination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_type"] = o.DestinationType
	if !IsNil(o.RawStructuredData) {
		toSerialize["raw_structured_data"] = o.RawStructuredData
	}
	toSerialize["structured_data"] = o.StructuredData
	if !IsNil(o.SafeTxExtraData) {
		toSerialize["safe_tx_extra_data"] = o.SafeTxExtraData
	}
	return toSerialize, nil
}

func (o *TransactionMessageSignEIP712Destination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_type",
		"structured_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionMessageSignEIP712Destination := _TransactionMessageSignEIP712Destination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionMessageSignEIP712Destination)

	if err != nil {
		return err
	}

	*o = TransactionMessageSignEIP712Destination(varTransactionMessageSignEIP712Destination)

	return err
}

type NullableTransactionMessageSignEIP712Destination struct {
	value *TransactionMessageSignEIP712Destination
	isSet bool
}

func (v NullableTransactionMessageSignEIP712Destination) Get() *TransactionMessageSignEIP712Destination {
	return v.value
}

func (v *NullableTransactionMessageSignEIP712Destination) Set(val *TransactionMessageSignEIP712Destination) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionMessageSignEIP712Destination) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionMessageSignEIP712Destination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionMessageSignEIP712Destination(val *TransactionMessageSignEIP712Destination) *NullableTransactionMessageSignEIP712Destination {
	return &NullableTransactionMessageSignEIP712Destination{value: val, isSet: true}
}

func (v NullableTransactionMessageSignEIP712Destination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionMessageSignEIP712Destination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


