/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeyShareSignSignatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeyShareSignSignatures{}

// TSSKeyShareSignSignatures struct for TSSKeyShareSignSignatures
type TSSKeyShareSignSignatures struct {
	Signatures []TSSKeyShareSignSignature `json:"signatures,omitempty"`
}

// NewTSSKeyShareSignSignatures instantiates a new TSSKeyShareSignSignatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeyShareSignSignatures() *TSSKeyShareSignSignatures {
	this := TSSKeyShareSignSignatures{}
	return &this
}

// NewTSSKeyShareSignSignaturesWithDefaults instantiates a new TSSKeyShareSignSignatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeyShareSignSignaturesWithDefaults() *TSSKeyShareSignSignatures {
	this := TSSKeyShareSignSignatures{}
	return &this
}

// GetSignatures returns the Signatures field value if set, zero value otherwise.
func (o *TSSKeyShareSignSignatures) GetSignatures() []TSSKeyShareSignSignature {
	if o == nil || IsNil(o.Signatures) {
		var ret []TSSKeyShareSignSignature
		return ret
	}
	return o.Signatures
}

// GetSignaturesOk returns a tuple with the Signatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyShareSignSignatures) GetSignaturesOk() ([]TSSKeyShareSignSignature, bool) {
	if o == nil || IsNil(o.Signatures) {
		return nil, false
	}
	return o.Signatures, true
}

// HasSignatures returns a boolean if a field has been set.
func (o *TSSKeyShareSignSignatures) HasSignatures() bool {
	if o != nil && !IsNil(o.Signatures) {
		return true
	}

	return false
}

// SetSignatures gets a reference to the given []TSSKeyShareSignSignature and assigns it to the Signatures field.
func (o *TSSKeyShareSignSignatures) SetSignatures(v []TSSKeyShareSignSignature) {
	o.Signatures = v
}

func (o TSSKeyShareSignSignatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeyShareSignSignatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Signatures) {
		toSerialize["signatures"] = o.Signatures
	}
	return toSerialize, nil
}

type NullableTSSKeyShareSignSignatures struct {
	value *TSSKeyShareSignSignatures
	isSet bool
}

func (v NullableTSSKeyShareSignSignatures) Get() *TSSKeyShareSignSignatures {
	return v.value
}

func (v *NullableTSSKeyShareSignSignatures) Set(val *TSSKeyShareSignSignatures) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeyShareSignSignatures) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeyShareSignSignatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeyShareSignSignatures(val *TSSKeyShareSignSignatures) *NullableTSSKeyShareSignSignatures {
	return &NullableTSSKeyShareSignSignatures{value: val, isSet: true}
}

func (v NullableTSSKeyShareSignSignatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeyShareSignSignatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


