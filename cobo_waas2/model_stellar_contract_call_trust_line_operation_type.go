/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"fmt"
)

// StellarContractCallTrustLineOperationType Operations to manage trustlines on the Stellar network. 
type StellarContractCallTrustLineOperationType string

// List of StellarContractCallTrustLineOperationType
const (
	STELLARCONTRACTCALLTRUSTLINEOPERATIONTYPE_CHANGE_TRUST StellarContractCallTrustLineOperationType = "ChangeTrust"
)

// All allowed values of StellarContractCallTrustLineOperationType enum
var AllowedStellarContractCallTrustLineOperationTypeEnumValues = []StellarContractCallTrustLineOperationType{
	"ChangeTrust",
}

func (v *StellarContractCallTrustLineOperationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := StellarContractCallTrustLineOperationType(value)
	for _, existing := range AllowedStellarContractCallTrustLineOperationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}
	*v = StellarContractCallTrustLineOperationType("unknown")
	return nil
}

// NewStellarContractCallTrustLineOperationTypeFromValue returns a pointer to a valid StellarContractCallTrustLineOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewStellarContractCallTrustLineOperationTypeFromValue(v string) (*StellarContractCallTrustLineOperationType, error) {
	ev := StellarContractCallTrustLineOperationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for StellarContractCallTrustLineOperationType: valid values are %v", v, AllowedStellarContractCallTrustLineOperationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v StellarContractCallTrustLineOperationType) IsValid() bool {
	for _, existing := range AllowedStellarContractCallTrustLineOperationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to StellarContractCallTrustLineOperationType value
func (v StellarContractCallTrustLineOperationType) Ptr() *StellarContractCallTrustLineOperationType {
	return &v
}

type NullableStellarContractCallTrustLineOperationType struct {
	value *StellarContractCallTrustLineOperationType
	isSet bool
}

func (v NullableStellarContractCallTrustLineOperationType) Get() *StellarContractCallTrustLineOperationType {
	return v.value
}

func (v *NullableStellarContractCallTrustLineOperationType) Set(val *StellarContractCallTrustLineOperationType) {
	v.value = val
	v.isSet = true
}

func (v NullableStellarContractCallTrustLineOperationType) IsSet() bool {
	return v.isSet
}

func (v *NullableStellarContractCallTrustLineOperationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStellarContractCallTrustLineOperationType(val *StellarContractCallTrustLineOperationType) *NullableStellarContractCallTrustLineOperationType {
	return &NullableStellarContractCallTrustLineOperationType{value: val, isSet: true}
}

func (v NullableStellarContractCallTrustLineOperationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStellarContractCallTrustLineOperationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

