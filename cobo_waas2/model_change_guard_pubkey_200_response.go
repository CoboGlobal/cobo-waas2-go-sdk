/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChangeGuardPubkey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeGuardPubkey200Response{}

// ChangeGuardPubkey200Response struct for ChangeGuardPubkey200Response
type ChangeGuardPubkey200Response struct {
	// The binding ID.
	BinderId string `json:"binder_id"`
}

type _ChangeGuardPubkey200Response ChangeGuardPubkey200Response

// NewChangeGuardPubkey200Response instantiates a new ChangeGuardPubkey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeGuardPubkey200Response(binderId string) *ChangeGuardPubkey200Response {
	this := ChangeGuardPubkey200Response{}
	this.BinderId = binderId
	return &this
}

// NewChangeGuardPubkey200ResponseWithDefaults instantiates a new ChangeGuardPubkey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeGuardPubkey200ResponseWithDefaults() *ChangeGuardPubkey200Response {
	this := ChangeGuardPubkey200Response{}
	return &this
}

// GetBinderId returns the BinderId field value
func (o *ChangeGuardPubkey200Response) GetBinderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BinderId
}

// GetBinderIdOk returns a tuple with the BinderId field value
// and a boolean to check if the value has been set.
func (o *ChangeGuardPubkey200Response) GetBinderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BinderId, true
}

// SetBinderId sets field value
func (o *ChangeGuardPubkey200Response) SetBinderId(v string) {
	o.BinderId = v
}

func (o ChangeGuardPubkey200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeGuardPubkey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["binder_id"] = o.BinderId
	return toSerialize, nil
}

func (o *ChangeGuardPubkey200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"binder_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChangeGuardPubkey200Response := _ChangeGuardPubkey200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChangeGuardPubkey200Response)

	if err != nil {
		return err
	}

	*o = ChangeGuardPubkey200Response(varChangeGuardPubkey200Response)

	return err
}

type NullableChangeGuardPubkey200Response struct {
	value *ChangeGuardPubkey200Response
	isSet bool
}

func (v NullableChangeGuardPubkey200Response) Get() *ChangeGuardPubkey200Response {
	return v.value
}

func (v *NullableChangeGuardPubkey200Response) Set(val *ChangeGuardPubkey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeGuardPubkey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeGuardPubkey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeGuardPubkey200Response(val *ChangeGuardPubkey200Response) *NullableChangeGuardPubkey200Response {
	return &NullableChangeGuardPubkey200Response{value: val, isSet: true}
}

func (v NullableChangeGuardPubkey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeGuardPubkey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


