/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the LinkDisplayInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkDisplayInfo{}

// LinkDisplayInfo struct for LinkDisplayInfo
type LinkDisplayInfo struct {
	// Optional display name for the developer/platform. This name may be shown to end users during the payment process. 
	DeveloperName *string `json:"developer_name,omitempty"`
	// Optional URL to the developer's logo image. The logo may be displayed to end users during the payment process.  Supported formats: PNG, JPG, SVG. Maximum file size: 2MB. 
	Logo *string `json:"logo,omitempty"`
}

// NewLinkDisplayInfo instantiates a new LinkDisplayInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkDisplayInfo() *LinkDisplayInfo {
	this := LinkDisplayInfo{}
	return &this
}

// NewLinkDisplayInfoWithDefaults instantiates a new LinkDisplayInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkDisplayInfoWithDefaults() *LinkDisplayInfo {
	this := LinkDisplayInfo{}
	return &this
}

// GetDeveloperName returns the DeveloperName field value if set, zero value otherwise.
func (o *LinkDisplayInfo) GetDeveloperName() string {
	if o == nil || IsNil(o.DeveloperName) {
		var ret string
		return ret
	}
	return *o.DeveloperName
}

// GetDeveloperNameOk returns a tuple with the DeveloperName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkDisplayInfo) GetDeveloperNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperName) {
		return nil, false
	}
	return o.DeveloperName, true
}

// HasDeveloperName returns a boolean if a field has been set.
func (o *LinkDisplayInfo) HasDeveloperName() bool {
	if o != nil && !IsNil(o.DeveloperName) {
		return true
	}

	return false
}

// SetDeveloperName gets a reference to the given string and assigns it to the DeveloperName field.
func (o *LinkDisplayInfo) SetDeveloperName(v string) {
	o.DeveloperName = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *LinkDisplayInfo) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkDisplayInfo) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *LinkDisplayInfo) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *LinkDisplayInfo) SetLogo(v string) {
	o.Logo = &v
}

func (o LinkDisplayInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkDisplayInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeveloperName) {
		toSerialize["developer_name"] = o.DeveloperName
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	return toSerialize, nil
}

type NullableLinkDisplayInfo struct {
	value *LinkDisplayInfo
	isSet bool
}

func (v NullableLinkDisplayInfo) Get() *LinkDisplayInfo {
	return v.value
}

func (v *NullableLinkDisplayInfo) Set(val *LinkDisplayInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkDisplayInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkDisplayInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkDisplayInfo(val *LinkDisplayInfo) *NullableLinkDisplayInfo {
	return &NullableLinkDisplayInfo{value: val, isSet: true}
}

func (v NullableLinkDisplayInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkDisplayInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


