/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RevokeApprovalRequest201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevokeApprovalRequest201Response{}

// RevokeApprovalRequest201Response struct for RevokeApprovalRequest201Response
type RevokeApprovalRequest201Response struct {
	ApprovalId string `json:"approval_id"`
	Status *ApprovalStatus `json:"status,omitempty"`
}

type _RevokeApprovalRequest201Response RevokeApprovalRequest201Response

// NewRevokeApprovalRequest201Response instantiates a new RevokeApprovalRequest201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevokeApprovalRequest201Response(approvalId string) *RevokeApprovalRequest201Response {
	this := RevokeApprovalRequest201Response{}
	this.ApprovalId = approvalId
	return &this
}

// NewRevokeApprovalRequest201ResponseWithDefaults instantiates a new RevokeApprovalRequest201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokeApprovalRequest201ResponseWithDefaults() *RevokeApprovalRequest201Response {
	this := RevokeApprovalRequest201Response{}
	return &this
}

// GetApprovalId returns the ApprovalId field value
func (o *RevokeApprovalRequest201Response) GetApprovalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalId
}

// GetApprovalIdOk returns a tuple with the ApprovalId field value
// and a boolean to check if the value has been set.
func (o *RevokeApprovalRequest201Response) GetApprovalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalId, true
}

// SetApprovalId sets field value
func (o *RevokeApprovalRequest201Response) SetApprovalId(v string) {
	o.ApprovalId = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RevokeApprovalRequest201Response) GetStatus() ApprovalStatus {
	if o == nil || IsNil(o.Status) {
		var ret ApprovalStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevokeApprovalRequest201Response) GetStatusOk() (*ApprovalStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RevokeApprovalRequest201Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ApprovalStatus and assigns it to the Status field.
func (o *RevokeApprovalRequest201Response) SetStatus(v ApprovalStatus) {
	o.Status = &v
}

func (o RevokeApprovalRequest201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevokeApprovalRequest201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approval_id"] = o.ApprovalId
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *RevokeApprovalRequest201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approval_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRevokeApprovalRequest201Response := _RevokeApprovalRequest201Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRevokeApprovalRequest201Response)

	if err != nil {
		return err
	}

	*o = RevokeApprovalRequest201Response(varRevokeApprovalRequest201Response)

	return err
}

type NullableRevokeApprovalRequest201Response struct {
	value *RevokeApprovalRequest201Response
	isSet bool
}

func (v NullableRevokeApprovalRequest201Response) Get() *RevokeApprovalRequest201Response {
	return v.value
}

func (v *NullableRevokeApprovalRequest201Response) Set(val *RevokeApprovalRequest201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRevokeApprovalRequest201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRevokeApprovalRequest201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevokeApprovalRequest201Response(val *RevokeApprovalRequest201Response) *NullableRevokeApprovalRequest201Response {
	return &NullableRevokeApprovalRequest201Response{value: val, isSet: true}
}

func (v NullableRevokeApprovalRequest201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevokeApprovalRequest201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


