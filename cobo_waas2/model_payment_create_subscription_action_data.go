/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentCreateSubscriptionActionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentCreateSubscriptionActionData{}

// PaymentCreateSubscriptionActionData struct for PaymentCreateSubscriptionActionData
type PaymentCreateSubscriptionActionData struct {
	ActionType PaymentSubscriptionActionType `json:"action_type"`
	// The subscription user address.
	UserAddress string `json:"user_address"`
	// The subscription crypto amount. 
	Amount string `json:"amount"`
	// The ID of the cryptocurrency you want to subscription. Supported values:  - USDC: `ETH_USDC`, `ARBITRUM_USDCOIN`, `BASE_USDC`, `MATIC_USDC2`, `BSC_USDC` - USDT: `ETH_USDT`, `ARBITRUM_USDT`, `BASE_USDT`, `MATIC_USDT`, `BSC_USDT` 
	TokenId string `json:"token_id"`
	// the discount rate, discount_rate/10000
	DiscountRate *int32 `json:"discount_rate,omitempty"`
}

type _PaymentCreateSubscriptionActionData PaymentCreateSubscriptionActionData

// NewPaymentCreateSubscriptionActionData instantiates a new PaymentCreateSubscriptionActionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentCreateSubscriptionActionData(actionType PaymentSubscriptionActionType, userAddress string, amount string, tokenId string) *PaymentCreateSubscriptionActionData {
	this := PaymentCreateSubscriptionActionData{}
	this.ActionType = actionType
	this.UserAddress = userAddress
	this.Amount = amount
	this.TokenId = tokenId
	return &this
}

// NewPaymentCreateSubscriptionActionDataWithDefaults instantiates a new PaymentCreateSubscriptionActionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentCreateSubscriptionActionDataWithDefaults() *PaymentCreateSubscriptionActionData {
	this := PaymentCreateSubscriptionActionData{}
	return &this
}

// GetActionType returns the ActionType field value
func (o *PaymentCreateSubscriptionActionData) GetActionType() PaymentSubscriptionActionType {
	if o == nil {
		var ret PaymentSubscriptionActionType
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionActionData) GetActionTypeOk() (*PaymentSubscriptionActionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *PaymentCreateSubscriptionActionData) SetActionType(v PaymentSubscriptionActionType) {
	o.ActionType = v
}

// GetUserAddress returns the UserAddress field value
func (o *PaymentCreateSubscriptionActionData) GetUserAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAddress
}

// GetUserAddressOk returns a tuple with the UserAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionActionData) GetUserAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAddress, true
}

// SetUserAddress sets field value
func (o *PaymentCreateSubscriptionActionData) SetUserAddress(v string) {
	o.UserAddress = v
}

// GetAmount returns the Amount field value
func (o *PaymentCreateSubscriptionActionData) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionActionData) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PaymentCreateSubscriptionActionData) SetAmount(v string) {
	o.Amount = v
}

// GetTokenId returns the TokenId field value
func (o *PaymentCreateSubscriptionActionData) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionActionData) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *PaymentCreateSubscriptionActionData) SetTokenId(v string) {
	o.TokenId = v
}

// GetDiscountRate returns the DiscountRate field value if set, zero value otherwise.
func (o *PaymentCreateSubscriptionActionData) GetDiscountRate() int32 {
	if o == nil || IsNil(o.DiscountRate) {
		var ret int32
		return ret
	}
	return *o.DiscountRate
}

// GetDiscountRateOk returns a tuple with the DiscountRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionActionData) GetDiscountRateOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscountRate) {
		return nil, false
	}
	return o.DiscountRate, true
}

// HasDiscountRate returns a boolean if a field has been set.
func (o *PaymentCreateSubscriptionActionData) HasDiscountRate() bool {
	if o != nil && !IsNil(o.DiscountRate) {
		return true
	}

	return false
}

// SetDiscountRate gets a reference to the given int32 and assigns it to the DiscountRate field.
func (o *PaymentCreateSubscriptionActionData) SetDiscountRate(v int32) {
	o.DiscountRate = &v
}

func (o PaymentCreateSubscriptionActionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentCreateSubscriptionActionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action_type"] = o.ActionType
	toSerialize["user_address"] = o.UserAddress
	toSerialize["amount"] = o.Amount
	toSerialize["token_id"] = o.TokenId
	if !IsNil(o.DiscountRate) {
		toSerialize["discount_rate"] = o.DiscountRate
	}
	return toSerialize, nil
}

func (o *PaymentCreateSubscriptionActionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action_type",
		"user_address",
		"amount",
		"token_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentCreateSubscriptionActionData := _PaymentCreateSubscriptionActionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentCreateSubscriptionActionData)

	if err != nil {
		return err
	}

	*o = PaymentCreateSubscriptionActionData(varPaymentCreateSubscriptionActionData)

	return err
}

type NullablePaymentCreateSubscriptionActionData struct {
	value *PaymentCreateSubscriptionActionData
	isSet bool
}

func (v NullablePaymentCreateSubscriptionActionData) Get() *PaymentCreateSubscriptionActionData {
	return v.value
}

func (v *NullablePaymentCreateSubscriptionActionData) Set(val *PaymentCreateSubscriptionActionData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentCreateSubscriptionActionData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentCreateSubscriptionActionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentCreateSubscriptionActionData(val *PaymentCreateSubscriptionActionData) *NullablePaymentCreateSubscriptionActionData {
	return &NullablePaymentCreateSubscriptionActionData{value: val, isSet: true}
}

func (v NullablePaymentCreateSubscriptionActionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentCreateSubscriptionActionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


