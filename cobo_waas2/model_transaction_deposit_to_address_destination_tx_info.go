/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TransactionDepositToAddressDestinationTxInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionDepositToAddressDestinationTxInfo{}

// TransactionDepositToAddressDestinationTxInfo struct for TransactionDepositToAddressDestinationTxInfo
type TransactionDepositToAddressDestinationTxInfo struct {
	// The output index of the UTXO.
	VoutN *int32 `json:"vout_n,omitempty"`
}

// NewTransactionDepositToAddressDestinationTxInfo instantiates a new TransactionDepositToAddressDestinationTxInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionDepositToAddressDestinationTxInfo() *TransactionDepositToAddressDestinationTxInfo {
	this := TransactionDepositToAddressDestinationTxInfo{}
	return &this
}

// NewTransactionDepositToAddressDestinationTxInfoWithDefaults instantiates a new TransactionDepositToAddressDestinationTxInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionDepositToAddressDestinationTxInfoWithDefaults() *TransactionDepositToAddressDestinationTxInfo {
	this := TransactionDepositToAddressDestinationTxInfo{}
	return &this
}

// GetVoutN returns the VoutN field value if set, zero value otherwise.
func (o *TransactionDepositToAddressDestinationTxInfo) GetVoutN() int32 {
	if o == nil || IsNil(o.VoutN) {
		var ret int32
		return ret
	}
	return *o.VoutN
}

// GetVoutNOk returns a tuple with the VoutN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionDepositToAddressDestinationTxInfo) GetVoutNOk() (*int32, bool) {
	if o == nil || IsNil(o.VoutN) {
		return nil, false
	}
	return o.VoutN, true
}

// HasVoutN returns a boolean if a field has been set.
func (o *TransactionDepositToAddressDestinationTxInfo) HasVoutN() bool {
	if o != nil && !IsNil(o.VoutN) {
		return true
	}

	return false
}

// SetVoutN gets a reference to the given int32 and assigns it to the VoutN field.
func (o *TransactionDepositToAddressDestinationTxInfo) SetVoutN(v int32) {
	o.VoutN = &v
}

func (o TransactionDepositToAddressDestinationTxInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionDepositToAddressDestinationTxInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoutN) {
		toSerialize["vout_n"] = o.VoutN
	}
	return toSerialize, nil
}

type NullableTransactionDepositToAddressDestinationTxInfo struct {
	value *TransactionDepositToAddressDestinationTxInfo
	isSet bool
}

func (v NullableTransactionDepositToAddressDestinationTxInfo) Get() *TransactionDepositToAddressDestinationTxInfo {
	return v.value
}

func (v *NullableTransactionDepositToAddressDestinationTxInfo) Set(val *TransactionDepositToAddressDestinationTxInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionDepositToAddressDestinationTxInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionDepositToAddressDestinationTxInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionDepositToAddressDestinationTxInfo(val *TransactionDepositToAddressDestinationTxInfo) *NullableTransactionDepositToAddressDestinationTxInfo {
	return &NullableTransactionDepositToAddressDestinationTxInfo{value: val, isSet: true}
}

func (v NullableTransactionDepositToAddressDestinationTxInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionDepositToAddressDestinationTxInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


