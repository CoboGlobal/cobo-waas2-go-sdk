/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the QueryApprovalStatement200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryApprovalStatement200Response{}

// QueryApprovalStatement200Response struct for QueryApprovalStatement200Response
type QueryApprovalStatement200Response struct {
	// approval statement id.
	Id *string `json:"id,omitempty"`
	// approver user id.
	UserId *string `json:"user_id,omitempty"`
	// approver user pubkey.
	Pubkey *string `json:"pubkey,omitempty"`
	Status *ApprovalStatementStatus `json:"status,omitempty"`
}

// NewQueryApprovalStatement200Response instantiates a new QueryApprovalStatement200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryApprovalStatement200Response() *QueryApprovalStatement200Response {
	this := QueryApprovalStatement200Response{}
	return &this
}

// NewQueryApprovalStatement200ResponseWithDefaults instantiates a new QueryApprovalStatement200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryApprovalStatement200ResponseWithDefaults() *QueryApprovalStatement200Response {
	this := QueryApprovalStatement200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QueryApprovalStatement200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryApprovalStatement200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QueryApprovalStatement200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *QueryApprovalStatement200Response) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *QueryApprovalStatement200Response) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryApprovalStatement200Response) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *QueryApprovalStatement200Response) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *QueryApprovalStatement200Response) SetUserId(v string) {
	o.UserId = &v
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *QueryApprovalStatement200Response) GetPubkey() string {
	if o == nil || IsNil(o.Pubkey) {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryApprovalStatement200Response) GetPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Pubkey) {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *QueryApprovalStatement200Response) HasPubkey() bool {
	if o != nil && !IsNil(o.Pubkey) {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *QueryApprovalStatement200Response) SetPubkey(v string) {
	o.Pubkey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *QueryApprovalStatement200Response) GetStatus() ApprovalStatementStatus {
	if o == nil || IsNil(o.Status) {
		var ret ApprovalStatementStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryApprovalStatement200Response) GetStatusOk() (*ApprovalStatementStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *QueryApprovalStatement200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ApprovalStatementStatus and assigns it to the Status field.
func (o *QueryApprovalStatement200Response) SetStatus(v ApprovalStatementStatus) {
	o.Status = &v
}

func (o QueryApprovalStatement200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryApprovalStatement200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Pubkey) {
		toSerialize["pubkey"] = o.Pubkey
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableQueryApprovalStatement200Response struct {
	value *QueryApprovalStatement200Response
	isSet bool
}

func (v NullableQueryApprovalStatement200Response) Get() *QueryApprovalStatement200Response {
	return v.value
}

func (v *NullableQueryApprovalStatement200Response) Set(val *QueryApprovalStatement200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryApprovalStatement200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryApprovalStatement200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryApprovalStatement200Response(val *QueryApprovalStatement200Response) *NullableQueryApprovalStatement200Response {
	return &NullableQueryApprovalStatement200Response{value: val, isSet: true}
}

func (v NullableQueryApprovalStatement200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryApprovalStatement200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


