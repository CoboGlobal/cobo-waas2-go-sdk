/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSGroup{}

// TSSGroup struct for TSSGroup
type TSSGroup struct {
	// The TSS key share group ID.
	Id *string `json:"id,omitempty"`
	// The canonical group ID.
	CanonicalGroupId *string `json:"canonical_group_id,omitempty"`
	// The protocol group ID.
	ProtocolGroupId *string `json:"protocol_group_id,omitempty"`
	// The protocol type.
	ProtocolType *string `json:"protocol_type,omitempty"`
	// The group creation timestamp, in Unix timestamp format, measured in milliseconds.
	CreatedTimestamp *int64 `json:"created_timestamp,omitempty"`
	Type *TSSGroupType `json:"type,omitempty"`
	// The root extended public key.
	RootExtendedPublicKey *string `json:"root_extended_public_key,omitempty"`
	// The chaincode.
	Chaincode *string `json:"chaincode,omitempty"`
	Curve *TSSCurveType `json:"curve,omitempty"`
	// The threshold.
	Threshold *int32 `json:"threshold,omitempty"`
	Participants []TSSParticipant `json:"participants,omitempty"`
}

// NewTSSGroup instantiates a new TSSGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSGroup() *TSSGroup {
	this := TSSGroup{}
	return &this
}

// NewTSSGroupWithDefaults instantiates a new TSSGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSGroupWithDefaults() *TSSGroup {
	this := TSSGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TSSGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TSSGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TSSGroup) SetId(v string) {
	o.Id = &v
}

// GetCanonicalGroupId returns the CanonicalGroupId field value if set, zero value otherwise.
func (o *TSSGroup) GetCanonicalGroupId() string {
	if o == nil || IsNil(o.CanonicalGroupId) {
		var ret string
		return ret
	}
	return *o.CanonicalGroupId
}

// GetCanonicalGroupIdOk returns a tuple with the CanonicalGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetCanonicalGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.CanonicalGroupId) {
		return nil, false
	}
	return o.CanonicalGroupId, true
}

// HasCanonicalGroupId returns a boolean if a field has been set.
func (o *TSSGroup) HasCanonicalGroupId() bool {
	if o != nil && !IsNil(o.CanonicalGroupId) {
		return true
	}

	return false
}

// SetCanonicalGroupId gets a reference to the given string and assigns it to the CanonicalGroupId field.
func (o *TSSGroup) SetCanonicalGroupId(v string) {
	o.CanonicalGroupId = &v
}

// GetProtocolGroupId returns the ProtocolGroupId field value if set, zero value otherwise.
func (o *TSSGroup) GetProtocolGroupId() string {
	if o == nil || IsNil(o.ProtocolGroupId) {
		var ret string
		return ret
	}
	return *o.ProtocolGroupId
}

// GetProtocolGroupIdOk returns a tuple with the ProtocolGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetProtocolGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProtocolGroupId) {
		return nil, false
	}
	return o.ProtocolGroupId, true
}

// HasProtocolGroupId returns a boolean if a field has been set.
func (o *TSSGroup) HasProtocolGroupId() bool {
	if o != nil && !IsNil(o.ProtocolGroupId) {
		return true
	}

	return false
}

// SetProtocolGroupId gets a reference to the given string and assigns it to the ProtocolGroupId field.
func (o *TSSGroup) SetProtocolGroupId(v string) {
	o.ProtocolGroupId = &v
}

// GetProtocolType returns the ProtocolType field value if set, zero value otherwise.
func (o *TSSGroup) GetProtocolType() string {
	if o == nil || IsNil(o.ProtocolType) {
		var ret string
		return ret
	}
	return *o.ProtocolType
}

// GetProtocolTypeOk returns a tuple with the ProtocolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetProtocolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProtocolType) {
		return nil, false
	}
	return o.ProtocolType, true
}

// HasProtocolType returns a boolean if a field has been set.
func (o *TSSGroup) HasProtocolType() bool {
	if o != nil && !IsNil(o.ProtocolType) {
		return true
	}

	return false
}

// SetProtocolType gets a reference to the given string and assigns it to the ProtocolType field.
func (o *TSSGroup) SetProtocolType(v string) {
	o.ProtocolType = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *TSSGroup) GetCreatedTimestamp() int64 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *TSSGroup) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int64 and assigns it to the CreatedTimestamp field.
func (o *TSSGroup) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TSSGroup) GetType() TSSGroupType {
	if o == nil || IsNil(o.Type) {
		var ret TSSGroupType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetTypeOk() (*TSSGroupType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TSSGroup) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given TSSGroupType and assigns it to the Type field.
func (o *TSSGroup) SetType(v TSSGroupType) {
	o.Type = &v
}

// GetRootExtendedPublicKey returns the RootExtendedPublicKey field value if set, zero value otherwise.
func (o *TSSGroup) GetRootExtendedPublicKey() string {
	if o == nil || IsNil(o.RootExtendedPublicKey) {
		var ret string
		return ret
	}
	return *o.RootExtendedPublicKey
}

// GetRootExtendedPublicKeyOk returns a tuple with the RootExtendedPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetRootExtendedPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.RootExtendedPublicKey) {
		return nil, false
	}
	return o.RootExtendedPublicKey, true
}

// HasRootExtendedPublicKey returns a boolean if a field has been set.
func (o *TSSGroup) HasRootExtendedPublicKey() bool {
	if o != nil && !IsNil(o.RootExtendedPublicKey) {
		return true
	}

	return false
}

// SetRootExtendedPublicKey gets a reference to the given string and assigns it to the RootExtendedPublicKey field.
func (o *TSSGroup) SetRootExtendedPublicKey(v string) {
	o.RootExtendedPublicKey = &v
}

// GetChaincode returns the Chaincode field value if set, zero value otherwise.
func (o *TSSGroup) GetChaincode() string {
	if o == nil || IsNil(o.Chaincode) {
		var ret string
		return ret
	}
	return *o.Chaincode
}

// GetChaincodeOk returns a tuple with the Chaincode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetChaincodeOk() (*string, bool) {
	if o == nil || IsNil(o.Chaincode) {
		return nil, false
	}
	return o.Chaincode, true
}

// HasChaincode returns a boolean if a field has been set.
func (o *TSSGroup) HasChaincode() bool {
	if o != nil && !IsNil(o.Chaincode) {
		return true
	}

	return false
}

// SetChaincode gets a reference to the given string and assigns it to the Chaincode field.
func (o *TSSGroup) SetChaincode(v string) {
	o.Chaincode = &v
}

// GetCurve returns the Curve field value if set, zero value otherwise.
func (o *TSSGroup) GetCurve() TSSCurveType {
	if o == nil || IsNil(o.Curve) {
		var ret TSSCurveType
		return ret
	}
	return *o.Curve
}

// GetCurveOk returns a tuple with the Curve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetCurveOk() (*TSSCurveType, bool) {
	if o == nil || IsNil(o.Curve) {
		return nil, false
	}
	return o.Curve, true
}

// HasCurve returns a boolean if a field has been set.
func (o *TSSGroup) HasCurve() bool {
	if o != nil && !IsNil(o.Curve) {
		return true
	}

	return false
}

// SetCurve gets a reference to the given TSSCurveType and assigns it to the Curve field.
func (o *TSSGroup) SetCurve(v TSSCurveType) {
	o.Curve = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *TSSGroup) GetThreshold() int32 {
	if o == nil || IsNil(o.Threshold) {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *TSSGroup) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *TSSGroup) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise.
func (o *TSSGroup) GetParticipants() []TSSParticipant {
	if o == nil || IsNil(o.Participants) {
		var ret []TSSParticipant
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSGroup) GetParticipantsOk() ([]TSSParticipant, bool) {
	if o == nil || IsNil(o.Participants) {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *TSSGroup) HasParticipants() bool {
	if o != nil && !IsNil(o.Participants) {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []TSSParticipant and assigns it to the Participants field.
func (o *TSSGroup) SetParticipants(v []TSSParticipant) {
	o.Participants = v
}

func (o TSSGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CanonicalGroupId) {
		toSerialize["canonical_group_id"] = o.CanonicalGroupId
	}
	if !IsNil(o.ProtocolGroupId) {
		toSerialize["protocol_group_id"] = o.ProtocolGroupId
	}
	if !IsNil(o.ProtocolType) {
		toSerialize["protocol_type"] = o.ProtocolType
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RootExtendedPublicKey) {
		toSerialize["root_extended_public_key"] = o.RootExtendedPublicKey
	}
	if !IsNil(o.Chaincode) {
		toSerialize["chaincode"] = o.Chaincode
	}
	if !IsNil(o.Curve) {
		toSerialize["curve"] = o.Curve
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.Participants) {
		toSerialize["participants"] = o.Participants
	}
	return toSerialize, nil
}

type NullableTSSGroup struct {
	value *TSSGroup
	isSet bool
}

func (v NullableTSSGroup) Get() *TSSGroup {
	return v.value
}

func (v *NullableTSSGroup) Set(val *TSSGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSGroup(val *TSSGroup) *NullableTSSGroup {
	return &NullableTSSGroup{value: val, isSet: true}
}

func (v NullableTSSGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


