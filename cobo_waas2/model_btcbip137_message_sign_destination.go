/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BTCBIP137MessageSignDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BTCBIP137MessageSignDestination{}

// BTCBIP137MessageSignDestination The information about the destination `BTC_BIP_137`. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.
type BTCBIP137MessageSignDestination struct {
	DestinationType MessageSignDestinationType `json:"destination_type"`
	// Message to be signed, in hexadecimal format.
	MessageBip137 string `json:"message_bip137"`
}

type _BTCBIP137MessageSignDestination BTCBIP137MessageSignDestination

// NewBTCBIP137MessageSignDestination instantiates a new BTCBIP137MessageSignDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTCBIP137MessageSignDestination(destinationType MessageSignDestinationType, messageBip137 string) *BTCBIP137MessageSignDestination {
	this := BTCBIP137MessageSignDestination{}
	this.DestinationType = destinationType
	this.MessageBip137 = messageBip137
	return &this
}

// NewBTCBIP137MessageSignDestinationWithDefaults instantiates a new BTCBIP137MessageSignDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTCBIP137MessageSignDestinationWithDefaults() *BTCBIP137MessageSignDestination {
	this := BTCBIP137MessageSignDestination{}
	return &this
}

// GetDestinationType returns the DestinationType field value
func (o *BTCBIP137MessageSignDestination) GetDestinationType() MessageSignDestinationType {
	if o == nil {
		var ret MessageSignDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *BTCBIP137MessageSignDestination) GetDestinationTypeOk() (*MessageSignDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *BTCBIP137MessageSignDestination) SetDestinationType(v MessageSignDestinationType) {
	o.DestinationType = v
}

// GetMessageBip137 returns the MessageBip137 field value
func (o *BTCBIP137MessageSignDestination) GetMessageBip137() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageBip137
}

// GetMessageBip137Ok returns a tuple with the MessageBip137 field value
// and a boolean to check if the value has been set.
func (o *BTCBIP137MessageSignDestination) GetMessageBip137Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageBip137, true
}

// SetMessageBip137 sets field value
func (o *BTCBIP137MessageSignDestination) SetMessageBip137(v string) {
	o.MessageBip137 = v
}

func (o BTCBIP137MessageSignDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BTCBIP137MessageSignDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_type"] = o.DestinationType
	toSerialize["message_bip137"] = o.MessageBip137
	return toSerialize, nil
}

func (o *BTCBIP137MessageSignDestination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_type",
		"message_bip137",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBTCBIP137MessageSignDestination := _BTCBIP137MessageSignDestination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBTCBIP137MessageSignDestination)

	if err != nil {
		return err
	}

	*o = BTCBIP137MessageSignDestination(varBTCBIP137MessageSignDestination)

	return err
}

type NullableBTCBIP137MessageSignDestination struct {
	value *BTCBIP137MessageSignDestination
	isSet bool
}

func (v NullableBTCBIP137MessageSignDestination) Get() *BTCBIP137MessageSignDestination {
	return v.value
}

func (v *NullableBTCBIP137MessageSignDestination) Set(val *BTCBIP137MessageSignDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableBTCBIP137MessageSignDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableBTCBIP137MessageSignDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTCBIP137MessageSignDestination(val *BTCBIP137MessageSignDestination) *NullableBTCBIP137MessageSignDestination {
	return &NullableBTCBIP137MessageSignDestination{value: val, isSet: true}
}

func (v NullableBTCBIP137MessageSignDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTCBIP137MessageSignDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


