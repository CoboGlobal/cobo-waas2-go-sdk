/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeySignExtra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeySignExtra{}

// TSSKeySignExtra struct for TSSKeySignExtra
type TSSKeySignExtra struct {
	Org *OrgInfo `json:"org,omitempty"`
	Project *MPCProject `json:"project,omitempty"`
	Vault *MPCVault `json:"vault,omitempty"`
	Wallet *MPCWalletInfo `json:"wallet,omitempty"`
	SignerKeyShareHolderGroup *KeyShareHolderGroup `json:"signer_key_share_holder_group,omitempty"`
	SourceAddresses []AddressInfo `json:"source_addresses,omitempty"`
	Transaction *Transaction `json:"transaction,omitempty"`
}

// NewTSSKeySignExtra instantiates a new TSSKeySignExtra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeySignExtra() *TSSKeySignExtra {
	this := TSSKeySignExtra{}
	return &this
}

// NewTSSKeySignExtraWithDefaults instantiates a new TSSKeySignExtra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeySignExtraWithDefaults() *TSSKeySignExtra {
	this := TSSKeySignExtra{}
	return &this
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetOrg() OrgInfo {
	if o == nil || IsNil(o.Org) {
		var ret OrgInfo
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetOrgOk() (*OrgInfo, bool) {
	if o == nil || IsNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasOrg() bool {
	if o != nil && !IsNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given OrgInfo and assigns it to the Org field.
func (o *TSSKeySignExtra) SetOrg(v OrgInfo) {
	o.Org = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetProject() MPCProject {
	if o == nil || IsNil(o.Project) {
		var ret MPCProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetProjectOk() (*MPCProject, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given MPCProject and assigns it to the Project field.
func (o *TSSKeySignExtra) SetProject(v MPCProject) {
	o.Project = &v
}

// GetVault returns the Vault field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetVault() MPCVault {
	if o == nil || IsNil(o.Vault) {
		var ret MPCVault
		return ret
	}
	return *o.Vault
}

// GetVaultOk returns a tuple with the Vault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetVaultOk() (*MPCVault, bool) {
	if o == nil || IsNil(o.Vault) {
		return nil, false
	}
	return o.Vault, true
}

// HasVault returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasVault() bool {
	if o != nil && !IsNil(o.Vault) {
		return true
	}

	return false
}

// SetVault gets a reference to the given MPCVault and assigns it to the Vault field.
func (o *TSSKeySignExtra) SetVault(v MPCVault) {
	o.Vault = &v
}

// GetWallet returns the Wallet field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetWallet() MPCWalletInfo {
	if o == nil || IsNil(o.Wallet) {
		var ret MPCWalletInfo
		return ret
	}
	return *o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetWalletOk() (*MPCWalletInfo, bool) {
	if o == nil || IsNil(o.Wallet) {
		return nil, false
	}
	return o.Wallet, true
}

// HasWallet returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasWallet() bool {
	if o != nil && !IsNil(o.Wallet) {
		return true
	}

	return false
}

// SetWallet gets a reference to the given MPCWalletInfo and assigns it to the Wallet field.
func (o *TSSKeySignExtra) SetWallet(v MPCWalletInfo) {
	o.Wallet = &v
}

// GetSignerKeyShareHolderGroup returns the SignerKeyShareHolderGroup field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetSignerKeyShareHolderGroup() KeyShareHolderGroup {
	if o == nil || IsNil(o.SignerKeyShareHolderGroup) {
		var ret KeyShareHolderGroup
		return ret
	}
	return *o.SignerKeyShareHolderGroup
}

// GetSignerKeyShareHolderGroupOk returns a tuple with the SignerKeyShareHolderGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetSignerKeyShareHolderGroupOk() (*KeyShareHolderGroup, bool) {
	if o == nil || IsNil(o.SignerKeyShareHolderGroup) {
		return nil, false
	}
	return o.SignerKeyShareHolderGroup, true
}

// HasSignerKeyShareHolderGroup returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasSignerKeyShareHolderGroup() bool {
	if o != nil && !IsNil(o.SignerKeyShareHolderGroup) {
		return true
	}

	return false
}

// SetSignerKeyShareHolderGroup gets a reference to the given KeyShareHolderGroup and assigns it to the SignerKeyShareHolderGroup field.
func (o *TSSKeySignExtra) SetSignerKeyShareHolderGroup(v KeyShareHolderGroup) {
	o.SignerKeyShareHolderGroup = &v
}

// GetSourceAddresses returns the SourceAddresses field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetSourceAddresses() []AddressInfo {
	if o == nil || IsNil(o.SourceAddresses) {
		var ret []AddressInfo
		return ret
	}
	return o.SourceAddresses
}

// GetSourceAddressesOk returns a tuple with the SourceAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetSourceAddressesOk() ([]AddressInfo, bool) {
	if o == nil || IsNil(o.SourceAddresses) {
		return nil, false
	}
	return o.SourceAddresses, true
}

// HasSourceAddresses returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasSourceAddresses() bool {
	if o != nil && !IsNil(o.SourceAddresses) {
		return true
	}

	return false
}

// SetSourceAddresses gets a reference to the given []AddressInfo and assigns it to the SourceAddresses field.
func (o *TSSKeySignExtra) SetSourceAddresses(v []AddressInfo) {
	o.SourceAddresses = v
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *TSSKeySignExtra) GetTransaction() Transaction {
	if o == nil || IsNil(o.Transaction) {
		var ret Transaction
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignExtra) GetTransactionOk() (*Transaction, bool) {
	if o == nil || IsNil(o.Transaction) {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *TSSKeySignExtra) HasTransaction() bool {
	if o != nil && !IsNil(o.Transaction) {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given Transaction and assigns it to the Transaction field.
func (o *TSSKeySignExtra) SetTransaction(v Transaction) {
	o.Transaction = &v
}

func (o TSSKeySignExtra) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeySignExtra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Vault) {
		toSerialize["vault"] = o.Vault
	}
	if !IsNil(o.Wallet) {
		toSerialize["wallet"] = o.Wallet
	}
	if !IsNil(o.SignerKeyShareHolderGroup) {
		toSerialize["signer_key_share_holder_group"] = o.SignerKeyShareHolderGroup
	}
	if !IsNil(o.SourceAddresses) {
		toSerialize["source_addresses"] = o.SourceAddresses
	}
	if !IsNil(o.Transaction) {
		toSerialize["transaction"] = o.Transaction
	}
	return toSerialize, nil
}

type NullableTSSKeySignExtra struct {
	value *TSSKeySignExtra
	isSet bool
}

func (v NullableTSSKeySignExtra) Get() *TSSKeySignExtra {
	return v.value
}

func (v *NullableTSSKeySignExtra) Set(val *TSSKeySignExtra) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeySignExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeySignExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeySignExtra(val *TSSKeySignExtra) *NullableTSSKeySignExtra {
	return &NullableTSSKeySignExtra{value: val, isSet: true}
}

func (v NullableTSSKeySignExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeySignExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


