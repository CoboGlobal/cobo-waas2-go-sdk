/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationUpdateAllowlistAddressesEstimateFeeParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationUpdateAllowlistAddressesEstimateFeeParams{}

// TokenizationUpdateAllowlistAddressesEstimateFeeParams struct for TokenizationUpdateAllowlistAddressesEstimateFeeParams
type TokenizationUpdateAllowlistAddressesEstimateFeeParams struct {
	Action TokenizationUpdateAddressAction `json:"action"`
	Source TokenizationTokenOperationSource `json:"source"`
	// A list of addresses to manage. For 'add' operations, notes can be provided. For 'remove' operations, notes are ignored.
	Addresses []TokenizationUpdateAllowlistAddressesParamsAddressesInner `json:"addresses"`
	OperationType TokenizationOperationType `json:"operation_type"`
	// The ID of the token.
	TokenId string `json:"token_id"`
	// The request ID that is used to track a transaction request. The request ID is provided by you and must be unique within your organization.
	RequestId *string `json:"request_id,omitempty"`
}

type _TokenizationUpdateAllowlistAddressesEstimateFeeParams TokenizationUpdateAllowlistAddressesEstimateFeeParams

// NewTokenizationUpdateAllowlistAddressesEstimateFeeParams instantiates a new TokenizationUpdateAllowlistAddressesEstimateFeeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationUpdateAllowlistAddressesEstimateFeeParams(action TokenizationUpdateAddressAction, source TokenizationTokenOperationSource, addresses []TokenizationUpdateAllowlistAddressesParamsAddressesInner, operationType TokenizationOperationType, tokenId string) *TokenizationUpdateAllowlistAddressesEstimateFeeParams {
	this := TokenizationUpdateAllowlistAddressesEstimateFeeParams{}
	this.Action = action
	this.Source = source
	this.Addresses = addresses
	this.OperationType = operationType
	this.TokenId = tokenId
	return &this
}

// NewTokenizationUpdateAllowlistAddressesEstimateFeeParamsWithDefaults instantiates a new TokenizationUpdateAllowlistAddressesEstimateFeeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationUpdateAllowlistAddressesEstimateFeeParamsWithDefaults() *TokenizationUpdateAllowlistAddressesEstimateFeeParams {
	this := TokenizationUpdateAllowlistAddressesEstimateFeeParams{}
	return &this
}

// GetAction returns the Action field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetAction() TokenizationUpdateAddressAction {
	if o == nil {
		var ret TokenizationUpdateAddressAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetActionOk() (*TokenizationUpdateAddressAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetAction(v TokenizationUpdateAddressAction) {
	o.Action = v
}

// GetSource returns the Source field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetSource() TokenizationTokenOperationSource {
	if o == nil {
		var ret TokenizationTokenOperationSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetSourceOk() (*TokenizationTokenOperationSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetSource(v TokenizationTokenOperationSource) {
	o.Source = v
}

// GetAddresses returns the Addresses field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetAddresses() []TokenizationUpdateAllowlistAddressesParamsAddressesInner {
	if o == nil {
		var ret []TokenizationUpdateAllowlistAddressesParamsAddressesInner
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetAddressesOk() ([]TokenizationUpdateAllowlistAddressesParamsAddressesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetAddresses(v []TokenizationUpdateAllowlistAddressesParamsAddressesInner) {
	o.Addresses = v
}

// GetOperationType returns the OperationType field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetOperationType() TokenizationOperationType {
	if o == nil {
		var ret TokenizationOperationType
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetOperationTypeOk() (*TokenizationOperationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetOperationType(v TokenizationOperationType) {
	o.OperationType = v
}

// GetTokenId returns the TokenId field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetTokenId(v string) {
	o.TokenId = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) SetRequestId(v string) {
	o.RequestId = &v
}

func (o TokenizationUpdateAllowlistAddressesEstimateFeeParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationUpdateAllowlistAddressesEstimateFeeParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["source"] = o.Source
	toSerialize["addresses"] = o.Addresses
	toSerialize["operation_type"] = o.OperationType
	toSerialize["token_id"] = o.TokenId
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	return toSerialize, nil
}

func (o *TokenizationUpdateAllowlistAddressesEstimateFeeParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"source",
		"addresses",
		"operation_type",
		"token_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationUpdateAllowlistAddressesEstimateFeeParams := _TokenizationUpdateAllowlistAddressesEstimateFeeParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationUpdateAllowlistAddressesEstimateFeeParams)

	if err != nil {
		return err
	}

	*o = TokenizationUpdateAllowlistAddressesEstimateFeeParams(varTokenizationUpdateAllowlistAddressesEstimateFeeParams)

	return err
}

type NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams struct {
	value *TokenizationUpdateAllowlistAddressesEstimateFeeParams
	isSet bool
}

func (v NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) Get() *TokenizationUpdateAllowlistAddressesEstimateFeeParams {
	return v.value
}

func (v *NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) Set(val *TokenizationUpdateAllowlistAddressesEstimateFeeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationUpdateAllowlistAddressesEstimateFeeParams(val *TokenizationUpdateAllowlistAddressesEstimateFeeParams) *NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams {
	return &NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams{value: val, isSet: true}
}

func (v NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationUpdateAllowlistAddressesEstimateFeeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


