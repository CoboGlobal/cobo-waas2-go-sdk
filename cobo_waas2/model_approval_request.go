/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApprovalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalRequest{}

// ApprovalRequest The information of an approval request.
type ApprovalRequest struct {
	// The system-generated unique ID of the approval request.
	ApprovalId string `json:"approval_id"`
	// An identifier provided by you when requesting the approval.
	RequestId string `json:"request_id"`
	Fields []AppWorkflowField `json:"fields"`
	Status ApprovalStatus `json:"status"`
	// The time when the approval was initiated, in Unix timestamp format, measured in milliseconds.
	InitiatedTimestamp int64 `json:"initiated_timestamp"`
}

type _ApprovalRequest ApprovalRequest

// NewApprovalRequest instantiates a new ApprovalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalRequest(approvalId string, requestId string, fields []AppWorkflowField, status ApprovalStatus, initiatedTimestamp int64) *ApprovalRequest {
	this := ApprovalRequest{}
	this.ApprovalId = approvalId
	this.RequestId = requestId
	this.Fields = fields
	this.Status = status
	this.InitiatedTimestamp = initiatedTimestamp
	return &this
}

// NewApprovalRequestWithDefaults instantiates a new ApprovalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalRequestWithDefaults() *ApprovalRequest {
	this := ApprovalRequest{}
	return &this
}

// GetApprovalId returns the ApprovalId field value
func (o *ApprovalRequest) GetApprovalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApprovalId
}

// GetApprovalIdOk returns a tuple with the ApprovalId field value
// and a boolean to check if the value has been set.
func (o *ApprovalRequest) GetApprovalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovalId, true
}

// SetApprovalId sets field value
func (o *ApprovalRequest) SetApprovalId(v string) {
	o.ApprovalId = v
}

// GetRequestId returns the RequestId field value
func (o *ApprovalRequest) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ApprovalRequest) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ApprovalRequest) SetRequestId(v string) {
	o.RequestId = v
}

// GetFields returns the Fields field value
func (o *ApprovalRequest) GetFields() []AppWorkflowField {
	if o == nil {
		var ret []AppWorkflowField
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *ApprovalRequest) GetFieldsOk() ([]AppWorkflowField, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *ApprovalRequest) SetFields(v []AppWorkflowField) {
	o.Fields = v
}

// GetStatus returns the Status field value
func (o *ApprovalRequest) GetStatus() ApprovalStatus {
	if o == nil {
		var ret ApprovalStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ApprovalRequest) GetStatusOk() (*ApprovalStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ApprovalRequest) SetStatus(v ApprovalStatus) {
	o.Status = v
}

// GetInitiatedTimestamp returns the InitiatedTimestamp field value
func (o *ApprovalRequest) GetInitiatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InitiatedTimestamp
}

// GetInitiatedTimestampOk returns a tuple with the InitiatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ApprovalRequest) GetInitiatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiatedTimestamp, true
}

// SetInitiatedTimestamp sets field value
func (o *ApprovalRequest) SetInitiatedTimestamp(v int64) {
	o.InitiatedTimestamp = v
}

func (o ApprovalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approval_id"] = o.ApprovalId
	toSerialize["request_id"] = o.RequestId
	toSerialize["fields"] = o.Fields
	toSerialize["status"] = o.Status
	toSerialize["initiated_timestamp"] = o.InitiatedTimestamp
	return toSerialize, nil
}

func (o *ApprovalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"approval_id",
		"request_id",
		"fields",
		"status",
		"initiated_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApprovalRequest := _ApprovalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApprovalRequest)

	if err != nil {
		return err
	}

	*o = ApprovalRequest(varApprovalRequest)

	return err
}

type NullableApprovalRequest struct {
	value *ApprovalRequest
	isSet bool
}

func (v NullableApprovalRequest) Get() *ApprovalRequest {
	return v.value
}

func (v *NullableApprovalRequest) Set(val *ApprovalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalRequest(val *ApprovalRequest) *NullableApprovalRequest {
	return &NullableApprovalRequest{value: val, isSet: true}
}

func (v NullableApprovalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


