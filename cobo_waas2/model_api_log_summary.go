/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiLogSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiLogSummary{}

// ApiLogSummary The information about an API log.
type ApiLogSummary struct {
	// A unique identifier for the API log, used for tracking.
	LogId *string `json:"log_id,omitempty"`
	// The HTTP method used for the API request.
	ApiMethod string `json:"api_method"`
	// The endpoint of the API request.
	ApiEndpoint string `json:"api_endpoint"`
	// The time when the API request was created, in Unix timestamp format, measured in milliseconds.
	RequestTimestamp int64 `json:"request_timestamp"`
	// The HTTP status code returned by the API request.
	StatusCode int32 `json:"status_code"`
}

type _ApiLogSummary ApiLogSummary

// NewApiLogSummary instantiates a new ApiLogSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLogSummary(apiMethod string, apiEndpoint string, requestTimestamp int64, statusCode int32) *ApiLogSummary {
	this := ApiLogSummary{}
	this.ApiMethod = apiMethod
	this.ApiEndpoint = apiEndpoint
	this.RequestTimestamp = requestTimestamp
	this.StatusCode = statusCode
	return &this
}

// NewApiLogSummaryWithDefaults instantiates a new ApiLogSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLogSummaryWithDefaults() *ApiLogSummary {
	this := ApiLogSummary{}
	return &this
}

// GetLogId returns the LogId field value if set, zero value otherwise.
func (o *ApiLogSummary) GetLogId() string {
	if o == nil || IsNil(o.LogId) {
		var ret string
		return ret
	}
	return *o.LogId
}

// GetLogIdOk returns a tuple with the LogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLogSummary) GetLogIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogId) {
		return nil, false
	}
	return o.LogId, true
}

// HasLogId returns a boolean if a field has been set.
func (o *ApiLogSummary) HasLogId() bool {
	if o != nil && !IsNil(o.LogId) {
		return true
	}

	return false
}

// SetLogId gets a reference to the given string and assigns it to the LogId field.
func (o *ApiLogSummary) SetLogId(v string) {
	o.LogId = &v
}

// GetApiMethod returns the ApiMethod field value
func (o *ApiLogSummary) GetApiMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiMethod
}

// GetApiMethodOk returns a tuple with the ApiMethod field value
// and a boolean to check if the value has been set.
func (o *ApiLogSummary) GetApiMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiMethod, true
}

// SetApiMethod sets field value
func (o *ApiLogSummary) SetApiMethod(v string) {
	o.ApiMethod = v
}

// GetApiEndpoint returns the ApiEndpoint field value
func (o *ApiLogSummary) GetApiEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiEndpoint
}

// GetApiEndpointOk returns a tuple with the ApiEndpoint field value
// and a boolean to check if the value has been set.
func (o *ApiLogSummary) GetApiEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiEndpoint, true
}

// SetApiEndpoint sets field value
func (o *ApiLogSummary) SetApiEndpoint(v string) {
	o.ApiEndpoint = v
}

// GetRequestTimestamp returns the RequestTimestamp field value
func (o *ApiLogSummary) GetRequestTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RequestTimestamp
}

// GetRequestTimestampOk returns a tuple with the RequestTimestamp field value
// and a boolean to check if the value has been set.
func (o *ApiLogSummary) GetRequestTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestTimestamp, true
}

// SetRequestTimestamp sets field value
func (o *ApiLogSummary) SetRequestTimestamp(v int64) {
	o.RequestTimestamp = v
}

// GetStatusCode returns the StatusCode field value
func (o *ApiLogSummary) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *ApiLogSummary) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *ApiLogSummary) SetStatusCode(v int32) {
	o.StatusCode = v
}

func (o ApiLogSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiLogSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogId) {
		toSerialize["log_id"] = o.LogId
	}
	toSerialize["api_method"] = o.ApiMethod
	toSerialize["api_endpoint"] = o.ApiEndpoint
	toSerialize["request_timestamp"] = o.RequestTimestamp
	toSerialize["status_code"] = o.StatusCode
	return toSerialize, nil
}

func (o *ApiLogSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_method",
		"api_endpoint",
		"request_timestamp",
		"status_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiLogSummary := _ApiLogSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiLogSummary)

	if err != nil {
		return err
	}

	*o = ApiLogSummary(varApiLogSummary)

	return err
}

type NullableApiLogSummary struct {
	value *ApiLogSummary
	isSet bool
}

func (v NullableApiLogSummary) Get() *ApiLogSummary {
	return v.value
}

func (v *NullableApiLogSummary) Set(val *ApiLogSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLogSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLogSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLogSummary(val *ApiLogSummary) *NullableApiLogSummary {
	return &NullableApiLogSummary{value: val, isSet: true}
}

func (v NullableApiLogSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLogSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


