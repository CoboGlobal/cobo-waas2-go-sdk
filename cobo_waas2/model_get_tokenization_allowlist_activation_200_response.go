/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetTokenizationAllowlistActivation200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTokenizationAllowlistActivation200Response{}

// GetTokenizationAllowlistActivation200Response The response schema for retrieving the allowlist activation status.
type GetTokenizationAllowlistActivation200Response struct {
	// Indicates whether the allowlist feature is activated for the token.
	Activated bool `json:"activated"`
}

type _GetTokenizationAllowlistActivation200Response GetTokenizationAllowlistActivation200Response

// NewGetTokenizationAllowlistActivation200Response instantiates a new GetTokenizationAllowlistActivation200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTokenizationAllowlistActivation200Response(activated bool) *GetTokenizationAllowlistActivation200Response {
	this := GetTokenizationAllowlistActivation200Response{}
	this.Activated = activated
	return &this
}

// NewGetTokenizationAllowlistActivation200ResponseWithDefaults instantiates a new GetTokenizationAllowlistActivation200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTokenizationAllowlistActivation200ResponseWithDefaults() *GetTokenizationAllowlistActivation200Response {
	this := GetTokenizationAllowlistActivation200Response{}
	return &this
}

// GetActivated returns the Activated field value
func (o *GetTokenizationAllowlistActivation200Response) GetActivated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value
// and a boolean to check if the value has been set.
func (o *GetTokenizationAllowlistActivation200Response) GetActivatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Activated, true
}

// SetActivated sets field value
func (o *GetTokenizationAllowlistActivation200Response) SetActivated(v bool) {
	o.Activated = v
}

func (o GetTokenizationAllowlistActivation200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTokenizationAllowlistActivation200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["activated"] = o.Activated
	return toSerialize, nil
}

func (o *GetTokenizationAllowlistActivation200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"activated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTokenizationAllowlistActivation200Response := _GetTokenizationAllowlistActivation200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTokenizationAllowlistActivation200Response)

	if err != nil {
		return err
	}

	*o = GetTokenizationAllowlistActivation200Response(varGetTokenizationAllowlistActivation200Response)

	return err
}

type NullableGetTokenizationAllowlistActivation200Response struct {
	value *GetTokenizationAllowlistActivation200Response
	isSet bool
}

func (v NullableGetTokenizationAllowlistActivation200Response) Get() *GetTokenizationAllowlistActivation200Response {
	return v.value
}

func (v *NullableGetTokenizationAllowlistActivation200Response) Set(val *GetTokenizationAllowlistActivation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTokenizationAllowlistActivation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTokenizationAllowlistActivation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTokenizationAllowlistActivation200Response(val *GetTokenizationAllowlistActivation200Response) *NullableGetTokenizationAllowlistActivation200Response {
	return &NullableGetTokenizationAllowlistActivation200Response{value: val, isSet: true}
}

func (v NullableGetTokenizationAllowlistActivation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTokenizationAllowlistActivation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


