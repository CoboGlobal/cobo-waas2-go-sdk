/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateAddressBookParam type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAddressBookParam{}

// UpdateAddressBookParam The request body to update address book.
type UpdateAddressBookParam struct {
	// A list of chain IDs.
	ChainIds []string `json:"chain_ids"`
	// The memo.
	Memo *string `json:"memo,omitempty"`
	// The address label.
	Label *string `json:"label,omitempty"`
	// The email of the address owner.
	Email *string `json:"email,omitempty"`
}

type _UpdateAddressBookParam UpdateAddressBookParam

// NewUpdateAddressBookParam instantiates a new UpdateAddressBookParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAddressBookParam(chainIds []string) *UpdateAddressBookParam {
	this := UpdateAddressBookParam{}
	this.ChainIds = chainIds
	return &this
}

// NewUpdateAddressBookParamWithDefaults instantiates a new UpdateAddressBookParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAddressBookParamWithDefaults() *UpdateAddressBookParam {
	this := UpdateAddressBookParam{}
	return &this
}

// GetChainIds returns the ChainIds field value
func (o *UpdateAddressBookParam) GetChainIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ChainIds
}

// GetChainIdsOk returns a tuple with the ChainIds field value
// and a boolean to check if the value has been set.
func (o *UpdateAddressBookParam) GetChainIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChainIds, true
}

// SetChainIds sets field value
func (o *UpdateAddressBookParam) SetChainIds(v []string) {
	o.ChainIds = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *UpdateAddressBookParam) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAddressBookParam) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *UpdateAddressBookParam) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *UpdateAddressBookParam) SetMemo(v string) {
	o.Memo = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *UpdateAddressBookParam) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAddressBookParam) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *UpdateAddressBookParam) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *UpdateAddressBookParam) SetLabel(v string) {
	o.Label = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateAddressBookParam) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAddressBookParam) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateAddressBookParam) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateAddressBookParam) SetEmail(v string) {
	o.Email = &v
}

func (o UpdateAddressBookParam) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAddressBookParam) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chain_ids"] = o.ChainIds
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

func (o *UpdateAddressBookParam) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAddressBookParam := _UpdateAddressBookParam{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateAddressBookParam)

	if err != nil {
		return err
	}

	*o = UpdateAddressBookParam(varUpdateAddressBookParam)

	return err
}

type NullableUpdateAddressBookParam struct {
	value *UpdateAddressBookParam
	isSet bool
}

func (v NullableUpdateAddressBookParam) Get() *UpdateAddressBookParam {
	return v.value
}

func (v *NullableUpdateAddressBookParam) Set(val *UpdateAddressBookParam) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAddressBookParam) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAddressBookParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAddressBookParam(val *UpdateAddressBookParam) *NullableUpdateAddressBookParam {
	return &NullableUpdateAddressBookParam{value: val, isSet: true}
}

func (v NullableUpdateAddressBookParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAddressBookParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


