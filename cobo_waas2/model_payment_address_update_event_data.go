/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentAddressUpdateEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentAddressUpdateEventData{}

// PaymentAddressUpdateEventData struct for PaymentAddressUpdateEventData
type PaymentAddressUpdateEventData struct {
	//  The data type of the event. - `Transaction`: The transaction event data. - `TSSRequest`: The TSS request event data. - `Addresses`: The addresses event data. - `WalletInfo`: The wallet information event data. - `MPCVault`: The MPC vault event data. - `Chains`: The enabled chain event data. - `Tokens`: The enabled token event data. - `TokenListing`: The token listing event data.        - `PaymentOrder`: The payment order event data. - `PaymentRefund`: The payment refund event data. - `PaymentSettlement`: The payment settlement event data. - `PaymentTransaction`: The payment transaction event data. - `PaymentAddressUpdate`: The top-up address update event data. - `BalanceUpdateInfo`: The balance update event data. - `SuspendedToken`: The token suspension event data. - `ComplianceDisposition`: The compliance disposition event data. - `ComplianceKytScreenings`: The compliance KYT screenings event data.
	DataType string `json:"data_type"`
	// A unique identifier assigned by the developer to track and identify individual payers in their system.
	CustomPayerId string `json:"custom_payer_id"`
	// A unique identifier assigned by Cobo to track and identify individual payers.
	PayerId string `json:"payer_id"`
	// The chain ID.
	Chain string `json:"chain"`
	// The previous top-up address that was assigned to the payer.
	PreviousAddress string `json:"previous_address"`
	// The new top-up address that has been assigned to the payer.
	UpdatedAddress string `json:"updated_address"`
}

type _PaymentAddressUpdateEventData PaymentAddressUpdateEventData

// NewPaymentAddressUpdateEventData instantiates a new PaymentAddressUpdateEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAddressUpdateEventData(dataType string, customPayerId string, payerId string, chain string, previousAddress string, updatedAddress string) *PaymentAddressUpdateEventData {
	this := PaymentAddressUpdateEventData{}
	this.DataType = dataType
	this.CustomPayerId = customPayerId
	this.PayerId = payerId
	this.Chain = chain
	this.PreviousAddress = previousAddress
	this.UpdatedAddress = updatedAddress
	return &this
}

// NewPaymentAddressUpdateEventDataWithDefaults instantiates a new PaymentAddressUpdateEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAddressUpdateEventDataWithDefaults() *PaymentAddressUpdateEventData {
	this := PaymentAddressUpdateEventData{}
	return &this
}

// GetDataType returns the DataType field value
func (o *PaymentAddressUpdateEventData) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *PaymentAddressUpdateEventData) SetDataType(v string) {
	o.DataType = v
}

// GetCustomPayerId returns the CustomPayerId field value
func (o *PaymentAddressUpdateEventData) GetCustomPayerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomPayerId
}

// GetCustomPayerIdOk returns a tuple with the CustomPayerId field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetCustomPayerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomPayerId, true
}

// SetCustomPayerId sets field value
func (o *PaymentAddressUpdateEventData) SetCustomPayerId(v string) {
	o.CustomPayerId = v
}

// GetPayerId returns the PayerId field value
func (o *PaymentAddressUpdateEventData) GetPayerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayerId
}

// GetPayerIdOk returns a tuple with the PayerId field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetPayerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayerId, true
}

// SetPayerId sets field value
func (o *PaymentAddressUpdateEventData) SetPayerId(v string) {
	o.PayerId = v
}

// GetChain returns the Chain field value
func (o *PaymentAddressUpdateEventData) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *PaymentAddressUpdateEventData) SetChain(v string) {
	o.Chain = v
}

// GetPreviousAddress returns the PreviousAddress field value
func (o *PaymentAddressUpdateEventData) GetPreviousAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousAddress
}

// GetPreviousAddressOk returns a tuple with the PreviousAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetPreviousAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousAddress, true
}

// SetPreviousAddress sets field value
func (o *PaymentAddressUpdateEventData) SetPreviousAddress(v string) {
	o.PreviousAddress = v
}

// GetUpdatedAddress returns the UpdatedAddress field value
func (o *PaymentAddressUpdateEventData) GetUpdatedAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAddress
}

// GetUpdatedAddressOk returns a tuple with the UpdatedAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentAddressUpdateEventData) GetUpdatedAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAddress, true
}

// SetUpdatedAddress sets field value
func (o *PaymentAddressUpdateEventData) SetUpdatedAddress(v string) {
	o.UpdatedAddress = v
}

func (o PaymentAddressUpdateEventData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentAddressUpdateEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_type"] = o.DataType
	toSerialize["custom_payer_id"] = o.CustomPayerId
	toSerialize["payer_id"] = o.PayerId
	toSerialize["chain"] = o.Chain
	toSerialize["previous_address"] = o.PreviousAddress
	toSerialize["updated_address"] = o.UpdatedAddress
	return toSerialize, nil
}

func (o *PaymentAddressUpdateEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data_type",
		"custom_payer_id",
		"payer_id",
		"chain",
		"previous_address",
		"updated_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentAddressUpdateEventData := _PaymentAddressUpdateEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentAddressUpdateEventData)

	if err != nil {
		return err
	}

	*o = PaymentAddressUpdateEventData(varPaymentAddressUpdateEventData)

	return err
}

type NullablePaymentAddressUpdateEventData struct {
	value *PaymentAddressUpdateEventData
	isSet bool
}

func (v NullablePaymentAddressUpdateEventData) Get() *PaymentAddressUpdateEventData {
	return v.value
}

func (v *NullablePaymentAddressUpdateEventData) Set(val *PaymentAddressUpdateEventData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAddressUpdateEventData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAddressUpdateEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAddressUpdateEventData(val *PaymentAddressUpdateEventData) *NullablePaymentAddressUpdateEventData {
	return &NullablePaymentAddressUpdateEventData{value: val, isSet: true}
}

func (v NullablePaymentAddressUpdateEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAddressUpdateEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


