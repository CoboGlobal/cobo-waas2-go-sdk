/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeyReshareRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeyReshareRequest{}

// TSSKeyReshareRequest struct for TSSKeyReshareRequest
type TSSKeyReshareRequest struct {
	// The old TSS key share group ID.
	OldGroupId *string `json:"old_group_id,omitempty"`
	// The The old TSS key share group's root extended public key.
	RootPubKey *string `json:"root_pub_key,omitempty"`
	Curve *TSSCurve `json:"curve,omitempty"`
	UsedNodeIds []string `json:"used_node_ids,omitempty"`
	// The number of key share holders required to approve each operation in the old TSS key share group.
	OldThreshold *int32 `json:"old_threshold,omitempty"`
	// The number of key share holders required to approve each operation in the new TSS key share group.
	NewThreshold *int32 `json:"new_threshold,omitempty"`
	NewNodeIds []string `json:"new_node_ids,omitempty"`
	// The task ID.
	TaskId *string `json:"task_id,omitempty"`
	// The business task ID. This field contains the TSS request ID.
	BizTaskId *string `json:"biz_task_id,omitempty"`
}

// NewTSSKeyReshareRequest instantiates a new TSSKeyReshareRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeyReshareRequest() *TSSKeyReshareRequest {
	this := TSSKeyReshareRequest{}
	return &this
}

// NewTSSKeyReshareRequestWithDefaults instantiates a new TSSKeyReshareRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeyReshareRequestWithDefaults() *TSSKeyReshareRequest {
	this := TSSKeyReshareRequest{}
	return &this
}

// GetOldGroupId returns the OldGroupId field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetOldGroupId() string {
	if o == nil || IsNil(o.OldGroupId) {
		var ret string
		return ret
	}
	return *o.OldGroupId
}

// GetOldGroupIdOk returns a tuple with the OldGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetOldGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.OldGroupId) {
		return nil, false
	}
	return o.OldGroupId, true
}

// HasOldGroupId returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasOldGroupId() bool {
	if o != nil && !IsNil(o.OldGroupId) {
		return true
	}

	return false
}

// SetOldGroupId gets a reference to the given string and assigns it to the OldGroupId field.
func (o *TSSKeyReshareRequest) SetOldGroupId(v string) {
	o.OldGroupId = &v
}

// GetRootPubKey returns the RootPubKey field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetRootPubKey() string {
	if o == nil || IsNil(o.RootPubKey) {
		var ret string
		return ret
	}
	return *o.RootPubKey
}

// GetRootPubKeyOk returns a tuple with the RootPubKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetRootPubKeyOk() (*string, bool) {
	if o == nil || IsNil(o.RootPubKey) {
		return nil, false
	}
	return o.RootPubKey, true
}

// HasRootPubKey returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasRootPubKey() bool {
	if o != nil && !IsNil(o.RootPubKey) {
		return true
	}

	return false
}

// SetRootPubKey gets a reference to the given string and assigns it to the RootPubKey field.
func (o *TSSKeyReshareRequest) SetRootPubKey(v string) {
	o.RootPubKey = &v
}

// GetCurve returns the Curve field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetCurve() TSSCurve {
	if o == nil || IsNil(o.Curve) {
		var ret TSSCurve
		return ret
	}
	return *o.Curve
}

// GetCurveOk returns a tuple with the Curve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetCurveOk() (*TSSCurve, bool) {
	if o == nil || IsNil(o.Curve) {
		return nil, false
	}
	return o.Curve, true
}

// HasCurve returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasCurve() bool {
	if o != nil && !IsNil(o.Curve) {
		return true
	}

	return false
}

// SetCurve gets a reference to the given TSSCurve and assigns it to the Curve field.
func (o *TSSKeyReshareRequest) SetCurve(v TSSCurve) {
	o.Curve = &v
}

// GetUsedNodeIds returns the UsedNodeIds field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetUsedNodeIds() []string {
	if o == nil || IsNil(o.UsedNodeIds) {
		var ret []string
		return ret
	}
	return o.UsedNodeIds
}

// GetUsedNodeIdsOk returns a tuple with the UsedNodeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetUsedNodeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UsedNodeIds) {
		return nil, false
	}
	return o.UsedNodeIds, true
}

// HasUsedNodeIds returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasUsedNodeIds() bool {
	if o != nil && !IsNil(o.UsedNodeIds) {
		return true
	}

	return false
}

// SetUsedNodeIds gets a reference to the given []string and assigns it to the UsedNodeIds field.
func (o *TSSKeyReshareRequest) SetUsedNodeIds(v []string) {
	o.UsedNodeIds = v
}

// GetOldThreshold returns the OldThreshold field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetOldThreshold() int32 {
	if o == nil || IsNil(o.OldThreshold) {
		var ret int32
		return ret
	}
	return *o.OldThreshold
}

// GetOldThresholdOk returns a tuple with the OldThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetOldThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.OldThreshold) {
		return nil, false
	}
	return o.OldThreshold, true
}

// HasOldThreshold returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasOldThreshold() bool {
	if o != nil && !IsNil(o.OldThreshold) {
		return true
	}

	return false
}

// SetOldThreshold gets a reference to the given int32 and assigns it to the OldThreshold field.
func (o *TSSKeyReshareRequest) SetOldThreshold(v int32) {
	o.OldThreshold = &v
}

// GetNewThreshold returns the NewThreshold field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetNewThreshold() int32 {
	if o == nil || IsNil(o.NewThreshold) {
		var ret int32
		return ret
	}
	return *o.NewThreshold
}

// GetNewThresholdOk returns a tuple with the NewThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetNewThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.NewThreshold) {
		return nil, false
	}
	return o.NewThreshold, true
}

// HasNewThreshold returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasNewThreshold() bool {
	if o != nil && !IsNil(o.NewThreshold) {
		return true
	}

	return false
}

// SetNewThreshold gets a reference to the given int32 and assigns it to the NewThreshold field.
func (o *TSSKeyReshareRequest) SetNewThreshold(v int32) {
	o.NewThreshold = &v
}

// GetNewNodeIds returns the NewNodeIds field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetNewNodeIds() []string {
	if o == nil || IsNil(o.NewNodeIds) {
		var ret []string
		return ret
	}
	return o.NewNodeIds
}

// GetNewNodeIdsOk returns a tuple with the NewNodeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetNewNodeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NewNodeIds) {
		return nil, false
	}
	return o.NewNodeIds, true
}

// HasNewNodeIds returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasNewNodeIds() bool {
	if o != nil && !IsNil(o.NewNodeIds) {
		return true
	}

	return false
}

// SetNewNodeIds gets a reference to the given []string and assigns it to the NewNodeIds field.
func (o *TSSKeyReshareRequest) SetNewNodeIds(v []string) {
	o.NewNodeIds = v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *TSSKeyReshareRequest) SetTaskId(v string) {
	o.TaskId = &v
}

// GetBizTaskId returns the BizTaskId field value if set, zero value otherwise.
func (o *TSSKeyReshareRequest) GetBizTaskId() string {
	if o == nil || IsNil(o.BizTaskId) {
		var ret string
		return ret
	}
	return *o.BizTaskId
}

// GetBizTaskIdOk returns a tuple with the BizTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyReshareRequest) GetBizTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.BizTaskId) {
		return nil, false
	}
	return o.BizTaskId, true
}

// HasBizTaskId returns a boolean if a field has been set.
func (o *TSSKeyReshareRequest) HasBizTaskId() bool {
	if o != nil && !IsNil(o.BizTaskId) {
		return true
	}

	return false
}

// SetBizTaskId gets a reference to the given string and assigns it to the BizTaskId field.
func (o *TSSKeyReshareRequest) SetBizTaskId(v string) {
	o.BizTaskId = &v
}

func (o TSSKeyReshareRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeyReshareRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OldGroupId) {
		toSerialize["old_group_id"] = o.OldGroupId
	}
	if !IsNil(o.RootPubKey) {
		toSerialize["root_pub_key"] = o.RootPubKey
	}
	if !IsNil(o.Curve) {
		toSerialize["curve"] = o.Curve
	}
	if !IsNil(o.UsedNodeIds) {
		toSerialize["used_node_ids"] = o.UsedNodeIds
	}
	if !IsNil(o.OldThreshold) {
		toSerialize["old_threshold"] = o.OldThreshold
	}
	if !IsNil(o.NewThreshold) {
		toSerialize["new_threshold"] = o.NewThreshold
	}
	if !IsNil(o.NewNodeIds) {
		toSerialize["new_node_ids"] = o.NewNodeIds
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.BizTaskId) {
		toSerialize["biz_task_id"] = o.BizTaskId
	}
	return toSerialize, nil
}

type NullableTSSKeyReshareRequest struct {
	value *TSSKeyReshareRequest
	isSet bool
}

func (v NullableTSSKeyReshareRequest) Get() *TSSKeyReshareRequest {
	return v.value
}

func (v *NullableTSSKeyReshareRequest) Set(val *TSSKeyReshareRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeyReshareRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeyReshareRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeyReshareRequest(val *TSSKeyReshareRequest) *NullableTSSKeyReshareRequest {
	return &NullableTSSKeyReshareRequest{value: val, isSet: true}
}

func (v NullableTSSKeyReshareRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeyReshareRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


