/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeySignRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeySignRequest{}

// TSSKeySignRequest struct for TSSKeySignRequest
type TSSKeySignRequest struct {
	// The TSS key share group ID.
	GroupId *string `json:"group_id,omitempty"`
	// The The old TSS key share group's root extended public key.
	RootPubKey *string `json:"root_pub_key,omitempty"`
	UsedNodeIds []string `json:"used_node_ids,omitempty"`
	Bip32PathList []string `json:"bip32_path_list,omitempty"`
	MsgHashList []string `json:"msg_hash_list,omitempty"`
	TweakList []string `json:"tweak_list,omitempty"`
	SignatureType *TSSSignatureType `json:"signature_type,omitempty"`
	TssProtocol *TSSProtocol `json:"tss_protocol,omitempty"`
	// The task ID.
	TaskId *string `json:"task_id,omitempty"`
	// The business task ID. This field contains the transaction ID.
	BizTaskId *string `json:"biz_task_id,omitempty"`
}

// NewTSSKeySignRequest instantiates a new TSSKeySignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeySignRequest() *TSSKeySignRequest {
	this := TSSKeySignRequest{}
	return &this
}

// NewTSSKeySignRequestWithDefaults instantiates a new TSSKeySignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeySignRequestWithDefaults() *TSSKeySignRequest {
	this := TSSKeySignRequest{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *TSSKeySignRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetRootPubKey returns the RootPubKey field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetRootPubKey() string {
	if o == nil || IsNil(o.RootPubKey) {
		var ret string
		return ret
	}
	return *o.RootPubKey
}

// GetRootPubKeyOk returns a tuple with the RootPubKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetRootPubKeyOk() (*string, bool) {
	if o == nil || IsNil(o.RootPubKey) {
		return nil, false
	}
	return o.RootPubKey, true
}

// HasRootPubKey returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasRootPubKey() bool {
	if o != nil && !IsNil(o.RootPubKey) {
		return true
	}

	return false
}

// SetRootPubKey gets a reference to the given string and assigns it to the RootPubKey field.
func (o *TSSKeySignRequest) SetRootPubKey(v string) {
	o.RootPubKey = &v
}

// GetUsedNodeIds returns the UsedNodeIds field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetUsedNodeIds() []string {
	if o == nil || IsNil(o.UsedNodeIds) {
		var ret []string
		return ret
	}
	return o.UsedNodeIds
}

// GetUsedNodeIdsOk returns a tuple with the UsedNodeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetUsedNodeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UsedNodeIds) {
		return nil, false
	}
	return o.UsedNodeIds, true
}

// HasUsedNodeIds returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasUsedNodeIds() bool {
	if o != nil && !IsNil(o.UsedNodeIds) {
		return true
	}

	return false
}

// SetUsedNodeIds gets a reference to the given []string and assigns it to the UsedNodeIds field.
func (o *TSSKeySignRequest) SetUsedNodeIds(v []string) {
	o.UsedNodeIds = v
}

// GetBip32PathList returns the Bip32PathList field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetBip32PathList() []string {
	if o == nil || IsNil(o.Bip32PathList) {
		var ret []string
		return ret
	}
	return o.Bip32PathList
}

// GetBip32PathListOk returns a tuple with the Bip32PathList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetBip32PathListOk() ([]string, bool) {
	if o == nil || IsNil(o.Bip32PathList) {
		return nil, false
	}
	return o.Bip32PathList, true
}

// HasBip32PathList returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasBip32PathList() bool {
	if o != nil && !IsNil(o.Bip32PathList) {
		return true
	}

	return false
}

// SetBip32PathList gets a reference to the given []string and assigns it to the Bip32PathList field.
func (o *TSSKeySignRequest) SetBip32PathList(v []string) {
	o.Bip32PathList = v
}

// GetMsgHashList returns the MsgHashList field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetMsgHashList() []string {
	if o == nil || IsNil(o.MsgHashList) {
		var ret []string
		return ret
	}
	return o.MsgHashList
}

// GetMsgHashListOk returns a tuple with the MsgHashList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetMsgHashListOk() ([]string, bool) {
	if o == nil || IsNil(o.MsgHashList) {
		return nil, false
	}
	return o.MsgHashList, true
}

// HasMsgHashList returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasMsgHashList() bool {
	if o != nil && !IsNil(o.MsgHashList) {
		return true
	}

	return false
}

// SetMsgHashList gets a reference to the given []string and assigns it to the MsgHashList field.
func (o *TSSKeySignRequest) SetMsgHashList(v []string) {
	o.MsgHashList = v
}

// GetTweakList returns the TweakList field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetTweakList() []string {
	if o == nil || IsNil(o.TweakList) {
		var ret []string
		return ret
	}
	return o.TweakList
}

// GetTweakListOk returns a tuple with the TweakList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetTweakListOk() ([]string, bool) {
	if o == nil || IsNil(o.TweakList) {
		return nil, false
	}
	return o.TweakList, true
}

// HasTweakList returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasTweakList() bool {
	if o != nil && !IsNil(o.TweakList) {
		return true
	}

	return false
}

// SetTweakList gets a reference to the given []string and assigns it to the TweakList field.
func (o *TSSKeySignRequest) SetTweakList(v []string) {
	o.TweakList = v
}

// GetSignatureType returns the SignatureType field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetSignatureType() TSSSignatureType {
	if o == nil || IsNil(o.SignatureType) {
		var ret TSSSignatureType
		return ret
	}
	return *o.SignatureType
}

// GetSignatureTypeOk returns a tuple with the SignatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetSignatureTypeOk() (*TSSSignatureType, bool) {
	if o == nil || IsNil(o.SignatureType) {
		return nil, false
	}
	return o.SignatureType, true
}

// HasSignatureType returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasSignatureType() bool {
	if o != nil && !IsNil(o.SignatureType) {
		return true
	}

	return false
}

// SetSignatureType gets a reference to the given TSSSignatureType and assigns it to the SignatureType field.
func (o *TSSKeySignRequest) SetSignatureType(v TSSSignatureType) {
	o.SignatureType = &v
}

// GetTssProtocol returns the TssProtocol field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetTssProtocol() TSSProtocol {
	if o == nil || IsNil(o.TssProtocol) {
		var ret TSSProtocol
		return ret
	}
	return *o.TssProtocol
}

// GetTssProtocolOk returns a tuple with the TssProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetTssProtocolOk() (*TSSProtocol, bool) {
	if o == nil || IsNil(o.TssProtocol) {
		return nil, false
	}
	return o.TssProtocol, true
}

// HasTssProtocol returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasTssProtocol() bool {
	if o != nil && !IsNil(o.TssProtocol) {
		return true
	}

	return false
}

// SetTssProtocol gets a reference to the given TSSProtocol and assigns it to the TssProtocol field.
func (o *TSSKeySignRequest) SetTssProtocol(v TSSProtocol) {
	o.TssProtocol = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *TSSKeySignRequest) SetTaskId(v string) {
	o.TaskId = &v
}

// GetBizTaskId returns the BizTaskId field value if set, zero value otherwise.
func (o *TSSKeySignRequest) GetBizTaskId() string {
	if o == nil || IsNil(o.BizTaskId) {
		var ret string
		return ret
	}
	return *o.BizTaskId
}

// GetBizTaskIdOk returns a tuple with the BizTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeySignRequest) GetBizTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.BizTaskId) {
		return nil, false
	}
	return o.BizTaskId, true
}

// HasBizTaskId returns a boolean if a field has been set.
func (o *TSSKeySignRequest) HasBizTaskId() bool {
	if o != nil && !IsNil(o.BizTaskId) {
		return true
	}

	return false
}

// SetBizTaskId gets a reference to the given string and assigns it to the BizTaskId field.
func (o *TSSKeySignRequest) SetBizTaskId(v string) {
	o.BizTaskId = &v
}

func (o TSSKeySignRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeySignRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.RootPubKey) {
		toSerialize["root_pub_key"] = o.RootPubKey
	}
	if !IsNil(o.UsedNodeIds) {
		toSerialize["used_node_ids"] = o.UsedNodeIds
	}
	if !IsNil(o.Bip32PathList) {
		toSerialize["bip32_path_list"] = o.Bip32PathList
	}
	if !IsNil(o.MsgHashList) {
		toSerialize["msg_hash_list"] = o.MsgHashList
	}
	if !IsNil(o.TweakList) {
		toSerialize["tweak_list"] = o.TweakList
	}
	if !IsNil(o.SignatureType) {
		toSerialize["signature_type"] = o.SignatureType
	}
	if !IsNil(o.TssProtocol) {
		toSerialize["tss_protocol"] = o.TssProtocol
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.BizTaskId) {
		toSerialize["biz_task_id"] = o.BizTaskId
	}
	return toSerialize, nil
}

type NullableTSSKeySignRequest struct {
	value *TSSKeySignRequest
	isSet bool
}

func (v NullableTSSKeySignRequest) Get() *TSSKeySignRequest {
	return v.value
}

func (v *NullableTSSKeySignRequest) Set(val *TSSKeySignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeySignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeySignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeySignRequest(val *TSSKeySignRequest) *NullableTSSKeySignRequest {
	return &NullableTSSKeySignRequest{value: val, isSet: true}
}

func (v NullableTSSKeySignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeySignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


