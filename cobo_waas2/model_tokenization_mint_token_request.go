/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationMintTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationMintTokenRequest{}

// TokenizationMintTokenRequest struct for TokenizationMintTokenRequest
type TokenizationMintTokenRequest struct {
	Source TokenizationTokenOperationSource `json:"source"`
	// Details for each token mint, including amount and address to mint to.
	Mints []TokenizationMintTokenParamsMintsInner `json:"mints"`
	// The initiator of the tokenization activity. If you do not specify this property, the WaaS service will automatically designate the API key as the initiator.
	AppInitiator *string `json:"app_initiator,omitempty"`
	Fee TransactionRequestFee `json:"fee"`
}

type _TokenizationMintTokenRequest TokenizationMintTokenRequest

// NewTokenizationMintTokenRequest instantiates a new TokenizationMintTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationMintTokenRequest(source TokenizationTokenOperationSource, mints []TokenizationMintTokenParamsMintsInner, fee TransactionRequestFee) *TokenizationMintTokenRequest {
	this := TokenizationMintTokenRequest{}
	this.Source = source
	this.Mints = mints
	this.Fee = fee
	return &this
}

// NewTokenizationMintTokenRequestWithDefaults instantiates a new TokenizationMintTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationMintTokenRequestWithDefaults() *TokenizationMintTokenRequest {
	this := TokenizationMintTokenRequest{}
	return &this
}

// GetSource returns the Source field value
func (o *TokenizationMintTokenRequest) GetSource() TokenizationTokenOperationSource {
	if o == nil {
		var ret TokenizationTokenOperationSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TokenizationMintTokenRequest) GetSourceOk() (*TokenizationTokenOperationSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TokenizationMintTokenRequest) SetSource(v TokenizationTokenOperationSource) {
	o.Source = v
}

// GetMints returns the Mints field value
func (o *TokenizationMintTokenRequest) GetMints() []TokenizationMintTokenParamsMintsInner {
	if o == nil {
		var ret []TokenizationMintTokenParamsMintsInner
		return ret
	}

	return o.Mints
}

// GetMintsOk returns a tuple with the Mints field value
// and a boolean to check if the value has been set.
func (o *TokenizationMintTokenRequest) GetMintsOk() ([]TokenizationMintTokenParamsMintsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mints, true
}

// SetMints sets field value
func (o *TokenizationMintTokenRequest) SetMints(v []TokenizationMintTokenParamsMintsInner) {
	o.Mints = v
}

// GetAppInitiator returns the AppInitiator field value if set, zero value otherwise.
func (o *TokenizationMintTokenRequest) GetAppInitiator() string {
	if o == nil || IsNil(o.AppInitiator) {
		var ret string
		return ret
	}
	return *o.AppInitiator
}

// GetAppInitiatorOk returns a tuple with the AppInitiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizationMintTokenRequest) GetAppInitiatorOk() (*string, bool) {
	if o == nil || IsNil(o.AppInitiator) {
		return nil, false
	}
	return o.AppInitiator, true
}

// HasAppInitiator returns a boolean if a field has been set.
func (o *TokenizationMintTokenRequest) HasAppInitiator() bool {
	if o != nil && !IsNil(o.AppInitiator) {
		return true
	}

	return false
}

// SetAppInitiator gets a reference to the given string and assigns it to the AppInitiator field.
func (o *TokenizationMintTokenRequest) SetAppInitiator(v string) {
	o.AppInitiator = &v
}

// GetFee returns the Fee field value
func (o *TokenizationMintTokenRequest) GetFee() TransactionRequestFee {
	if o == nil {
		var ret TransactionRequestFee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *TokenizationMintTokenRequest) GetFeeOk() (*TransactionRequestFee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *TokenizationMintTokenRequest) SetFee(v TransactionRequestFee) {
	o.Fee = v
}

func (o TokenizationMintTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationMintTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["mints"] = o.Mints
	if !IsNil(o.AppInitiator) {
		toSerialize["app_initiator"] = o.AppInitiator
	}
	toSerialize["fee"] = o.Fee
	return toSerialize, nil
}

func (o *TokenizationMintTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source",
		"mints",
		"fee",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationMintTokenRequest := _TokenizationMintTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationMintTokenRequest)

	if err != nil {
		return err
	}

	*o = TokenizationMintTokenRequest(varTokenizationMintTokenRequest)

	return err
}

type NullableTokenizationMintTokenRequest struct {
	value *TokenizationMintTokenRequest
	isSet bool
}

func (v NullableTokenizationMintTokenRequest) Get() *TokenizationMintTokenRequest {
	return v.value
}

func (v *NullableTokenizationMintTokenRequest) Set(val *TokenizationMintTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationMintTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationMintTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationMintTokenRequest(val *TokenizationMintTokenRequest) *NullableTokenizationMintTokenRequest {
	return &NullableTokenizationMintTokenRequest{value: val, isSet: true}
}

func (v NullableTokenizationMintTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationMintTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


