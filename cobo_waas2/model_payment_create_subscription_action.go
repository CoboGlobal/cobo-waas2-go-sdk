/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentCreateSubscriptionAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentCreateSubscriptionAction{}

// PaymentCreateSubscriptionAction struct for PaymentCreateSubscriptionAction
type PaymentCreateSubscriptionAction struct {
	// The subscription action request id.
	RequestId string `json:"request_id"`
	// The subscription plan id in cobo.
	PlanId string `json:"plan_id"`
	// The merchant id in cobo.
	MerchantId string `json:"merchant_id"`
	Data *PaymentSubscriptionActionData `json:"data,omitempty"`
}

type _PaymentCreateSubscriptionAction PaymentCreateSubscriptionAction

// NewPaymentCreateSubscriptionAction instantiates a new PaymentCreateSubscriptionAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentCreateSubscriptionAction(requestId string, planId string, merchantId string) *PaymentCreateSubscriptionAction {
	this := PaymentCreateSubscriptionAction{}
	this.RequestId = requestId
	this.PlanId = planId
	this.MerchantId = merchantId
	return &this
}

// NewPaymentCreateSubscriptionActionWithDefaults instantiates a new PaymentCreateSubscriptionAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentCreateSubscriptionActionWithDefaults() *PaymentCreateSubscriptionAction {
	this := PaymentCreateSubscriptionAction{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *PaymentCreateSubscriptionAction) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionAction) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *PaymentCreateSubscriptionAction) SetRequestId(v string) {
	o.RequestId = v
}

// GetPlanId returns the PlanId field value
func (o *PaymentCreateSubscriptionAction) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionAction) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *PaymentCreateSubscriptionAction) SetPlanId(v string) {
	o.PlanId = v
}

// GetMerchantId returns the MerchantId field value
func (o *PaymentCreateSubscriptionAction) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionAction) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *PaymentCreateSubscriptionAction) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PaymentCreateSubscriptionAction) GetData() PaymentSubscriptionActionData {
	if o == nil || IsNil(o.Data) {
		var ret PaymentSubscriptionActionData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentCreateSubscriptionAction) GetDataOk() (*PaymentSubscriptionActionData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PaymentCreateSubscriptionAction) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given PaymentSubscriptionActionData and assigns it to the Data field.
func (o *PaymentCreateSubscriptionAction) SetData(v PaymentSubscriptionActionData) {
	o.Data = &v
}

func (o PaymentCreateSubscriptionAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentCreateSubscriptionAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["plan_id"] = o.PlanId
	toSerialize["merchant_id"] = o.MerchantId
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

func (o *PaymentCreateSubscriptionAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"plan_id",
		"merchant_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentCreateSubscriptionAction := _PaymentCreateSubscriptionAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentCreateSubscriptionAction)

	if err != nil {
		return err
	}

	*o = PaymentCreateSubscriptionAction(varPaymentCreateSubscriptionAction)

	return err
}

type NullablePaymentCreateSubscriptionAction struct {
	value *PaymentCreateSubscriptionAction
	isSet bool
}

func (v NullablePaymentCreateSubscriptionAction) Get() *PaymentCreateSubscriptionAction {
	return v.value
}

func (v *NullablePaymentCreateSubscriptionAction) Set(val *PaymentCreateSubscriptionAction) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentCreateSubscriptionAction) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentCreateSubscriptionAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentCreateSubscriptionAction(val *PaymentCreateSubscriptionAction) *NullablePaymentCreateSubscriptionAction {
	return &NullablePaymentCreateSubscriptionAction{value: val, isSet: true}
}

func (v NullablePaymentCreateSubscriptionAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentCreateSubscriptionAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


