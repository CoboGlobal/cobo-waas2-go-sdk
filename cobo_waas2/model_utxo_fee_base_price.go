/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the UtxoFeeBasePrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UtxoFeeBasePrice{}

// UtxoFeeBasePrice The transaction fee rate for UTXO-based chains (such as Bitcoin).
type UtxoFeeBasePrice struct {
	// The fee rate in sat/vByte. The fee rate represents the satoshis you are willing to pay for each byte of data that your transaction will consume on the blockchain.
	FeeRate *string `json:"fee_rate,omitempty"`
}

// NewUtxoFeeBasePrice instantiates a new UtxoFeeBasePrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtxoFeeBasePrice() *UtxoFeeBasePrice {
	this := UtxoFeeBasePrice{}
	return &this
}

// NewUtxoFeeBasePriceWithDefaults instantiates a new UtxoFeeBasePrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtxoFeeBasePriceWithDefaults() *UtxoFeeBasePrice {
	this := UtxoFeeBasePrice{}
	return &this
}

// GetFeeRate returns the FeeRate field value if set, zero value otherwise.
func (o *UtxoFeeBasePrice) GetFeeRate() string {
	if o == nil || IsNil(o.FeeRate) {
		var ret string
		return ret
	}
	return *o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtxoFeeBasePrice) GetFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.FeeRate) {
		return nil, false
	}
	return o.FeeRate, true
}

// HasFeeRate returns a boolean if a field has been set.
func (o *UtxoFeeBasePrice) HasFeeRate() bool {
	if o != nil && !IsNil(o.FeeRate) {
		return true
	}

	return false
}

// SetFeeRate gets a reference to the given string and assigns it to the FeeRate field.
func (o *UtxoFeeBasePrice) SetFeeRate(v string) {
	o.FeeRate = &v
}

func (o UtxoFeeBasePrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UtxoFeeBasePrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FeeRate) {
		toSerialize["fee_rate"] = o.FeeRate
	}
	return toSerialize, nil
}

type NullableUtxoFeeBasePrice struct {
	value *UtxoFeeBasePrice
	isSet bool
}

func (v NullableUtxoFeeBasePrice) Get() *UtxoFeeBasePrice {
	return v.value
}

func (v *NullableUtxoFeeBasePrice) Set(val *UtxoFeeBasePrice) {
	v.value = val
	v.isSet = true
}

func (v NullableUtxoFeeBasePrice) IsSet() bool {
	return v.isSet
}

func (v *NullableUtxoFeeBasePrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtxoFeeBasePrice(val *UtxoFeeBasePrice) *NullableUtxoFeeBasePrice {
	return &NullableUtxoFeeBasePrice{value: val, isSet: true}
}

func (v NullableUtxoFeeBasePrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtxoFeeBasePrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


