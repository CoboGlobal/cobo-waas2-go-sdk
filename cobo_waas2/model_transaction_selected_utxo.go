/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TransactionSelectedUtxo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionSelectedUtxo{}

// TransactionSelectedUtxo The selected UTXO information.
type TransactionSelectedUtxo struct {
	// The transaction hash of the UTXO.
	TxHash *string `json:"tx_hash,omitempty"`
	// The output index of the UTXO.
	VoutN *int32 `json:"vout_n,omitempty"`
	// The address of the UTXO.
	Address *string `json:"address,omitempty"`
	// The value of the UTXO.
	Value *string `json:"value,omitempty"`
	// Redeem script is used in P2SH and P2WSH transactions.
	RedeemScript *string `json:"redeem_script,omitempty"`
	// Revealed script is used for script path spending in Taproot transactions.
	RevealedScript *string `json:"revealed_script,omitempty"`
}

// NewTransactionSelectedUtxo instantiates a new TransactionSelectedUtxo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionSelectedUtxo() *TransactionSelectedUtxo {
	this := TransactionSelectedUtxo{}
	return &this
}

// NewTransactionSelectedUtxoWithDefaults instantiates a new TransactionSelectedUtxo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionSelectedUtxoWithDefaults() *TransactionSelectedUtxo {
	this := TransactionSelectedUtxo{}
	return &this
}

// GetTxHash returns the TxHash field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetTxHash() string {
	if o == nil || IsNil(o.TxHash) {
		var ret string
		return ret
	}
	return *o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetTxHashOk() (*string, bool) {
	if o == nil || IsNil(o.TxHash) {
		return nil, false
	}
	return o.TxHash, true
}

// HasTxHash returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasTxHash() bool {
	if o != nil && !IsNil(o.TxHash) {
		return true
	}

	return false
}

// SetTxHash gets a reference to the given string and assigns it to the TxHash field.
func (o *TransactionSelectedUtxo) SetTxHash(v string) {
	o.TxHash = &v
}

// GetVoutN returns the VoutN field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetVoutN() int32 {
	if o == nil || IsNil(o.VoutN) {
		var ret int32
		return ret
	}
	return *o.VoutN
}

// GetVoutNOk returns a tuple with the VoutN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetVoutNOk() (*int32, bool) {
	if o == nil || IsNil(o.VoutN) {
		return nil, false
	}
	return o.VoutN, true
}

// HasVoutN returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasVoutN() bool {
	if o != nil && !IsNil(o.VoutN) {
		return true
	}

	return false
}

// SetVoutN gets a reference to the given int32 and assigns it to the VoutN field.
func (o *TransactionSelectedUtxo) SetVoutN(v int32) {
	o.VoutN = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TransactionSelectedUtxo) SetAddress(v string) {
	o.Address = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TransactionSelectedUtxo) SetValue(v string) {
	o.Value = &v
}

// GetRedeemScript returns the RedeemScript field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetRedeemScript() string {
	if o == nil || IsNil(o.RedeemScript) {
		var ret string
		return ret
	}
	return *o.RedeemScript
}

// GetRedeemScriptOk returns a tuple with the RedeemScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetRedeemScriptOk() (*string, bool) {
	if o == nil || IsNil(o.RedeemScript) {
		return nil, false
	}
	return o.RedeemScript, true
}

// HasRedeemScript returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasRedeemScript() bool {
	if o != nil && !IsNil(o.RedeemScript) {
		return true
	}

	return false
}

// SetRedeemScript gets a reference to the given string and assigns it to the RedeemScript field.
func (o *TransactionSelectedUtxo) SetRedeemScript(v string) {
	o.RedeemScript = &v
}

// GetRevealedScript returns the RevealedScript field value if set, zero value otherwise.
func (o *TransactionSelectedUtxo) GetRevealedScript() string {
	if o == nil || IsNil(o.RevealedScript) {
		var ret string
		return ret
	}
	return *o.RevealedScript
}

// GetRevealedScriptOk returns a tuple with the RevealedScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionSelectedUtxo) GetRevealedScriptOk() (*string, bool) {
	if o == nil || IsNil(o.RevealedScript) {
		return nil, false
	}
	return o.RevealedScript, true
}

// HasRevealedScript returns a boolean if a field has been set.
func (o *TransactionSelectedUtxo) HasRevealedScript() bool {
	if o != nil && !IsNil(o.RevealedScript) {
		return true
	}

	return false
}

// SetRevealedScript gets a reference to the given string and assigns it to the RevealedScript field.
func (o *TransactionSelectedUtxo) SetRevealedScript(v string) {
	o.RevealedScript = &v
}

func (o TransactionSelectedUtxo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionSelectedUtxo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TxHash) {
		toSerialize["tx_hash"] = o.TxHash
	}
	if !IsNil(o.VoutN) {
		toSerialize["vout_n"] = o.VoutN
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.RedeemScript) {
		toSerialize["redeem_script"] = o.RedeemScript
	}
	if !IsNil(o.RevealedScript) {
		toSerialize["revealed_script"] = o.RevealedScript
	}
	return toSerialize, nil
}

type NullableTransactionSelectedUtxo struct {
	value *TransactionSelectedUtxo
	isSet bool
}

func (v NullableTransactionSelectedUtxo) Get() *TransactionSelectedUtxo {
	return v.value
}

func (v *NullableTransactionSelectedUtxo) Set(val *TransactionSelectedUtxo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionSelectedUtxo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionSelectedUtxo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionSelectedUtxo(val *TransactionSelectedUtxo) *NullableTransactionSelectedUtxo {
	return &NullableTransactionSelectedUtxo{value: val, isSet: true}
}

func (v NullableTransactionSelectedUtxo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionSelectedUtxo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


