/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the ApprovalDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalDetail{}

// ApprovalDetail The approval detail data for transaction.
type ApprovalDetail struct {
	// The transaction ID.
	TransactionId *string `json:"transaction_id,omitempty"`
	// The Cobo ID, which can be used to track a transaction.
	CoboId *string `json:"cobo_id,omitempty"`
	// The request ID that is used to track a transaction request. The request ID is provided by you and must be unique within your organization.
	RequestId *string `json:"request_id,omitempty"`
	Result *ApprovalTransactionResult `json:"result,omitempty"`
	// The threshold for the transaction approval.
	Threshold *int32 `json:"threshold,omitempty"`
	UserDetails []ApprovalUserDetail `json:"user_details,omitempty"`
}

// NewApprovalDetail instantiates a new ApprovalDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalDetail() *ApprovalDetail {
	this := ApprovalDetail{}
	return &this
}

// NewApprovalDetailWithDefaults instantiates a new ApprovalDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalDetailWithDefaults() *ApprovalDetail {
	this := ApprovalDetail{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ApprovalDetail) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ApprovalDetail) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ApprovalDetail) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetCoboId returns the CoboId field value if set, zero value otherwise.
func (o *ApprovalDetail) GetCoboId() string {
	if o == nil || IsNil(o.CoboId) {
		var ret string
		return ret
	}
	return *o.CoboId
}

// GetCoboIdOk returns a tuple with the CoboId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetCoboIdOk() (*string, bool) {
	if o == nil || IsNil(o.CoboId) {
		return nil, false
	}
	return o.CoboId, true
}

// HasCoboId returns a boolean if a field has been set.
func (o *ApprovalDetail) HasCoboId() bool {
	if o != nil && !IsNil(o.CoboId) {
		return true
	}

	return false
}

// SetCoboId gets a reference to the given string and assigns it to the CoboId field.
func (o *ApprovalDetail) SetCoboId(v string) {
	o.CoboId = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ApprovalDetail) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ApprovalDetail) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ApprovalDetail) SetRequestId(v string) {
	o.RequestId = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ApprovalDetail) GetResult() ApprovalTransactionResult {
	if o == nil || IsNil(o.Result) {
		var ret ApprovalTransactionResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetResultOk() (*ApprovalTransactionResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ApprovalDetail) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ApprovalTransactionResult and assigns it to the Result field.
func (o *ApprovalDetail) SetResult(v ApprovalTransactionResult) {
	o.Result = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *ApprovalDetail) GetThreshold() int32 {
	if o == nil || IsNil(o.Threshold) {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *ApprovalDetail) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *ApprovalDetail) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetUserDetails returns the UserDetails field value if set, zero value otherwise.
func (o *ApprovalDetail) GetUserDetails() []ApprovalUserDetail {
	if o == nil || IsNil(o.UserDetails) {
		var ret []ApprovalUserDetail
		return ret
	}
	return o.UserDetails
}

// GetUserDetailsOk returns a tuple with the UserDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalDetail) GetUserDetailsOk() ([]ApprovalUserDetail, bool) {
	if o == nil || IsNil(o.UserDetails) {
		return nil, false
	}
	return o.UserDetails, true
}

// HasUserDetails returns a boolean if a field has been set.
func (o *ApprovalDetail) HasUserDetails() bool {
	if o != nil && !IsNil(o.UserDetails) {
		return true
	}

	return false
}

// SetUserDetails gets a reference to the given []ApprovalUserDetail and assigns it to the UserDetails field.
func (o *ApprovalDetail) SetUserDetails(v []ApprovalUserDetail) {
	o.UserDetails = v
}

func (o ApprovalDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.CoboId) {
		toSerialize["cobo_id"] = o.CoboId
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !IsNil(o.UserDetails) {
		toSerialize["user_details"] = o.UserDetails
	}
	return toSerialize, nil
}

type NullableApprovalDetail struct {
	value *ApprovalDetail
	isSet bool
}

func (v NullableApprovalDetail) Get() *ApprovalDetail {
	return v.value
}

func (v *NullableApprovalDetail) Set(val *ApprovalDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalDetail(val *ApprovalDetail) *NullableApprovalDetail {
	return &NullableApprovalDetail{value: val, isSet: true}
}

func (v NullableApprovalDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


