/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TransactionUserApprovalDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionUserApprovalDetail{}

// TransactionUserApprovalDetail The user approval data for transaction.
type TransactionUserApprovalDetail struct {
	// The name the user who audited this message.
	Name *string `json:"name,omitempty"`
	// The email the user who audited this message.
	Email *string `json:"email,omitempty"`
	// The Cobo Guard public key of the user who audited this message.
	Pubkey *string `json:"pubkey,omitempty"`
	Result *TransactionApprovalResult `json:"result,omitempty"`
	// The signature of the audited message.
	Signature *string `json:"signature,omitempty"`
	// The language of the audited message.
	Language *string `json:"language,omitempty"`
	// The version of the audited message.
	MessageVersion *string `json:"message_version,omitempty"`
	// The audited message.
	Message *string `json:"message,omitempty"`
	// The extra audited message.
	ExtraMessage *string `json:"extra_message,omitempty"`
}

// NewTransactionUserApprovalDetail instantiates a new TransactionUserApprovalDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionUserApprovalDetail() *TransactionUserApprovalDetail {
	this := TransactionUserApprovalDetail{}
	return &this
}

// NewTransactionUserApprovalDetailWithDefaults instantiates a new TransactionUserApprovalDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionUserApprovalDetailWithDefaults() *TransactionUserApprovalDetail {
	this := TransactionUserApprovalDetail{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TransactionUserApprovalDetail) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TransactionUserApprovalDetail) SetEmail(v string) {
	o.Email = &v
}

// GetPubkey returns the Pubkey field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetPubkey() string {
	if o == nil || IsNil(o.Pubkey) {
		var ret string
		return ret
	}
	return *o.Pubkey
}

// GetPubkeyOk returns a tuple with the Pubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Pubkey) {
		return nil, false
	}
	return o.Pubkey, true
}

// HasPubkey returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasPubkey() bool {
	if o != nil && !IsNil(o.Pubkey) {
		return true
	}

	return false
}

// SetPubkey gets a reference to the given string and assigns it to the Pubkey field.
func (o *TransactionUserApprovalDetail) SetPubkey(v string) {
	o.Pubkey = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetResult() TransactionApprovalResult {
	if o == nil || IsNil(o.Result) {
		var ret TransactionApprovalResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetResultOk() (*TransactionApprovalResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given TransactionApprovalResult and assigns it to the Result field.
func (o *TransactionUserApprovalDetail) SetResult(v TransactionApprovalResult) {
	o.Result = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *TransactionUserApprovalDetail) SetSignature(v string) {
	o.Signature = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *TransactionUserApprovalDetail) SetLanguage(v string) {
	o.Language = &v
}

// GetMessageVersion returns the MessageVersion field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetMessageVersion() string {
	if o == nil || IsNil(o.MessageVersion) {
		var ret string
		return ret
	}
	return *o.MessageVersion
}

// GetMessageVersionOk returns a tuple with the MessageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetMessageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MessageVersion) {
		return nil, false
	}
	return o.MessageVersion, true
}

// HasMessageVersion returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasMessageVersion() bool {
	if o != nil && !IsNil(o.MessageVersion) {
		return true
	}

	return false
}

// SetMessageVersion gets a reference to the given string and assigns it to the MessageVersion field.
func (o *TransactionUserApprovalDetail) SetMessageVersion(v string) {
	o.MessageVersion = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TransactionUserApprovalDetail) SetMessage(v string) {
	o.Message = &v
}

// GetExtraMessage returns the ExtraMessage field value if set, zero value otherwise.
func (o *TransactionUserApprovalDetail) GetExtraMessage() string {
	if o == nil || IsNil(o.ExtraMessage) {
		var ret string
		return ret
	}
	return *o.ExtraMessage
}

// GetExtraMessageOk returns a tuple with the ExtraMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionUserApprovalDetail) GetExtraMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraMessage) {
		return nil, false
	}
	return o.ExtraMessage, true
}

// HasExtraMessage returns a boolean if a field has been set.
func (o *TransactionUserApprovalDetail) HasExtraMessage() bool {
	if o != nil && !IsNil(o.ExtraMessage) {
		return true
	}

	return false
}

// SetExtraMessage gets a reference to the given string and assigns it to the ExtraMessage field.
func (o *TransactionUserApprovalDetail) SetExtraMessage(v string) {
	o.ExtraMessage = &v
}

func (o TransactionUserApprovalDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionUserApprovalDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Pubkey) {
		toSerialize["pubkey"] = o.Pubkey
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.MessageVersion) {
		toSerialize["message_version"] = o.MessageVersion
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ExtraMessage) {
		toSerialize["extra_message"] = o.ExtraMessage
	}
	return toSerialize, nil
}

type NullableTransactionUserApprovalDetail struct {
	value *TransactionUserApprovalDetail
	isSet bool
}

func (v NullableTransactionUserApprovalDetail) Get() *TransactionUserApprovalDetail {
	return v.value
}

func (v *NullableTransactionUserApprovalDetail) Set(val *TransactionUserApprovalDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionUserApprovalDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionUserApprovalDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionUserApprovalDetail(val *TransactionUserApprovalDetail) *NullableTransactionUserApprovalDetail {
	return &NullableTransactionUserApprovalDetail{value: val, isSet: true}
}

func (v NullableTransactionUserApprovalDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionUserApprovalDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


