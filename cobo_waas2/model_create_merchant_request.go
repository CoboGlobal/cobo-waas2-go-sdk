/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateMerchantRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMerchantRequest{}

// CreateMerchantRequest struct for CreateMerchantRequest
type CreateMerchantRequest struct {
	// The merchant name.
	Name string `json:"name"`
	// The fee rate applied when topping up the merchant account. Represented as a string percentage (e.g., \"0.1\" means 10%).
	DeveloperFeeRate *string `json:"developer_fee_rate,omitempty"`
	WalletSetup *WalletSetup `json:"wallet_setup,omitempty"`
}

type _CreateMerchantRequest CreateMerchantRequest

// NewCreateMerchantRequest instantiates a new CreateMerchantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMerchantRequest(name string) *CreateMerchantRequest {
	this := CreateMerchantRequest{}
	this.Name = name
	return &this
}

// NewCreateMerchantRequestWithDefaults instantiates a new CreateMerchantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMerchantRequestWithDefaults() *CreateMerchantRequest {
	this := CreateMerchantRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateMerchantRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateMerchantRequest) SetName(v string) {
	o.Name = v
}

// GetDeveloperFeeRate returns the DeveloperFeeRate field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetDeveloperFeeRate() string {
	if o == nil || IsNil(o.DeveloperFeeRate) {
		var ret string
		return ret
	}
	return *o.DeveloperFeeRate
}

// GetDeveloperFeeRateOk returns a tuple with the DeveloperFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetDeveloperFeeRateOk() (*string, bool) {
	if o == nil || IsNil(o.DeveloperFeeRate) {
		return nil, false
	}
	return o.DeveloperFeeRate, true
}

// HasDeveloperFeeRate returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasDeveloperFeeRate() bool {
	if o != nil && !IsNil(o.DeveloperFeeRate) {
		return true
	}

	return false
}

// SetDeveloperFeeRate gets a reference to the given string and assigns it to the DeveloperFeeRate field.
func (o *CreateMerchantRequest) SetDeveloperFeeRate(v string) {
	o.DeveloperFeeRate = &v
}

// GetWalletSetup returns the WalletSetup field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetWalletSetup() WalletSetup {
	if o == nil || IsNil(o.WalletSetup) {
		var ret WalletSetup
		return ret
	}
	return *o.WalletSetup
}

// GetWalletSetupOk returns a tuple with the WalletSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetWalletSetupOk() (*WalletSetup, bool) {
	if o == nil || IsNil(o.WalletSetup) {
		return nil, false
	}
	return o.WalletSetup, true
}

// HasWalletSetup returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasWalletSetup() bool {
	if o != nil && !IsNil(o.WalletSetup) {
		return true
	}

	return false
}

// SetWalletSetup gets a reference to the given WalletSetup and assigns it to the WalletSetup field.
func (o *CreateMerchantRequest) SetWalletSetup(v WalletSetup) {
	o.WalletSetup = &v
}

func (o CreateMerchantRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMerchantRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.DeveloperFeeRate) {
		toSerialize["developer_fee_rate"] = o.DeveloperFeeRate
	}
	if !IsNil(o.WalletSetup) {
		toSerialize["wallet_setup"] = o.WalletSetup
	}
	return toSerialize, nil
}

func (o *CreateMerchantRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMerchantRequest := _CreateMerchantRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateMerchantRequest)

	if err != nil {
		return err
	}

	*o = CreateMerchantRequest(varCreateMerchantRequest)

	return err
}

type NullableCreateMerchantRequest struct {
	value *CreateMerchantRequest
	isSet bool
}

func (v NullableCreateMerchantRequest) Get() *CreateMerchantRequest {
	return v.value
}

func (v *NullableCreateMerchantRequest) Set(val *CreateMerchantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMerchantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMerchantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMerchantRequest(val *CreateMerchantRequest) *NullableCreateMerchantRequest {
	return &NullableCreateMerchantRequest{value: val, isSet: true}
}

func (v NullableCreateMerchantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMerchantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


