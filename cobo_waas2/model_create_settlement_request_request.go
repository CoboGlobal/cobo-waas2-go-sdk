/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSettlementRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSettlementRequestRequest{}

// CreateSettlementRequestRequest struct for CreateSettlementRequestRequest
type CreateSettlementRequestRequest struct {
	// The request ID that is used to track a settlement request. The request ID is provided by you and must be unique.
	RequestId string `json:"request_id"`
	Settlements []CreateSettlement `json:"settlements"`
}

type _CreateSettlementRequestRequest CreateSettlementRequestRequest

// NewCreateSettlementRequestRequest instantiates a new CreateSettlementRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSettlementRequestRequest(requestId string, settlements []CreateSettlement) *CreateSettlementRequestRequest {
	this := CreateSettlementRequestRequest{}
	this.RequestId = requestId
	this.Settlements = settlements
	return &this
}

// NewCreateSettlementRequestRequestWithDefaults instantiates a new CreateSettlementRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSettlementRequestRequestWithDefaults() *CreateSettlementRequestRequest {
	this := CreateSettlementRequestRequest{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *CreateSettlementRequestRequest) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CreateSettlementRequestRequest) SetRequestId(v string) {
	o.RequestId = v
}

// GetSettlements returns the Settlements field value
func (o *CreateSettlementRequestRequest) GetSettlements() []CreateSettlement {
	if o == nil {
		var ret []CreateSettlement
		return ret
	}

	return o.Settlements
}

// GetSettlementsOk returns a tuple with the Settlements field value
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetSettlementsOk() ([]CreateSettlement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Settlements, true
}

// SetSettlements sets field value
func (o *CreateSettlementRequestRequest) SetSettlements(v []CreateSettlement) {
	o.Settlements = v
}

func (o CreateSettlementRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSettlementRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["settlements"] = o.Settlements
	return toSerialize, nil
}

func (o *CreateSettlementRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"settlements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSettlementRequestRequest := _CreateSettlementRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSettlementRequestRequest)

	if err != nil {
		return err
	}

	*o = CreateSettlementRequestRequest(varCreateSettlementRequestRequest)

	return err
}

type NullableCreateSettlementRequestRequest struct {
	value *CreateSettlementRequestRequest
	isSet bool
}

func (v NullableCreateSettlementRequestRequest) Get() *CreateSettlementRequestRequest {
	return v.value
}

func (v *NullableCreateSettlementRequestRequest) Set(val *CreateSettlementRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSettlementRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSettlementRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSettlementRequestRequest(val *CreateSettlementRequestRequest) *NullableCreateSettlementRequestRequest {
	return &NullableCreateSettlementRequestRequest{value: val, isSet: true}
}

func (v NullableCreateSettlementRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSettlementRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


