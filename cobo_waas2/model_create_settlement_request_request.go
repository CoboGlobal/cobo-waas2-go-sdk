/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSettlementRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSettlementRequestRequest{}

// CreateSettlementRequestRequest struct for CreateSettlementRequestRequest
type CreateSettlementRequestRequest struct {
	// The request ID that is used to track a settlement request. The request ID is provided by you and must be unique.
	RequestId string `json:"request_id"`
	AcquiringType *AcquiringType `json:"acquiring_type,omitempty"`
	PayoutChannel *PayoutChannel `json:"payout_channel,omitempty"`
	SettlementType *SettlementType `json:"settlement_type,omitempty"`
	Settlements []CreateSettlement `json:"settlements"`
	// ï½œ Only used in OffRamp payout channel. The ID of the bank account where the settled funds will be deposited.
	BankAccountId *string `json:"bank_account_id,omitempty"`
	// The fiat currency for the settlement request.
	Currency *string `json:"currency,omitempty"`
}

type _CreateSettlementRequestRequest CreateSettlementRequestRequest

// NewCreateSettlementRequestRequest instantiates a new CreateSettlementRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSettlementRequestRequest(requestId string, settlements []CreateSettlement) *CreateSettlementRequestRequest {
	this := CreateSettlementRequestRequest{}
	this.RequestId = requestId
	this.Settlements = settlements
	return &this
}

// NewCreateSettlementRequestRequestWithDefaults instantiates a new CreateSettlementRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSettlementRequestRequestWithDefaults() *CreateSettlementRequestRequest {
	this := CreateSettlementRequestRequest{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *CreateSettlementRequestRequest) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CreateSettlementRequestRequest) SetRequestId(v string) {
	o.RequestId = v
}

// GetAcquiringType returns the AcquiringType field value if set, zero value otherwise.
func (o *CreateSettlementRequestRequest) GetAcquiringType() AcquiringType {
	if o == nil || IsNil(o.AcquiringType) {
		var ret AcquiringType
		return ret
	}
	return *o.AcquiringType
}

// GetAcquiringTypeOk returns a tuple with the AcquiringType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetAcquiringTypeOk() (*AcquiringType, bool) {
	if o == nil || IsNil(o.AcquiringType) {
		return nil, false
	}
	return o.AcquiringType, true
}

// HasAcquiringType returns a boolean if a field has been set.
func (o *CreateSettlementRequestRequest) HasAcquiringType() bool {
	if o != nil && !IsNil(o.AcquiringType) {
		return true
	}

	return false
}

// SetAcquiringType gets a reference to the given AcquiringType and assigns it to the AcquiringType field.
func (o *CreateSettlementRequestRequest) SetAcquiringType(v AcquiringType) {
	o.AcquiringType = &v
}

// GetPayoutChannel returns the PayoutChannel field value if set, zero value otherwise.
func (o *CreateSettlementRequestRequest) GetPayoutChannel() PayoutChannel {
	if o == nil || IsNil(o.PayoutChannel) {
		var ret PayoutChannel
		return ret
	}
	return *o.PayoutChannel
}

// GetPayoutChannelOk returns a tuple with the PayoutChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetPayoutChannelOk() (*PayoutChannel, bool) {
	if o == nil || IsNil(o.PayoutChannel) {
		return nil, false
	}
	return o.PayoutChannel, true
}

// HasPayoutChannel returns a boolean if a field has been set.
func (o *CreateSettlementRequestRequest) HasPayoutChannel() bool {
	if o != nil && !IsNil(o.PayoutChannel) {
		return true
	}

	return false
}

// SetPayoutChannel gets a reference to the given PayoutChannel and assigns it to the PayoutChannel field.
func (o *CreateSettlementRequestRequest) SetPayoutChannel(v PayoutChannel) {
	o.PayoutChannel = &v
}

// GetSettlementType returns the SettlementType field value if set, zero value otherwise.
func (o *CreateSettlementRequestRequest) GetSettlementType() SettlementType {
	if o == nil || IsNil(o.SettlementType) {
		var ret SettlementType
		return ret
	}
	return *o.SettlementType
}

// GetSettlementTypeOk returns a tuple with the SettlementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetSettlementTypeOk() (*SettlementType, bool) {
	if o == nil || IsNil(o.SettlementType) {
		return nil, false
	}
	return o.SettlementType, true
}

// HasSettlementType returns a boolean if a field has been set.
func (o *CreateSettlementRequestRequest) HasSettlementType() bool {
	if o != nil && !IsNil(o.SettlementType) {
		return true
	}

	return false
}

// SetSettlementType gets a reference to the given SettlementType and assigns it to the SettlementType field.
func (o *CreateSettlementRequestRequest) SetSettlementType(v SettlementType) {
	o.SettlementType = &v
}

// GetSettlements returns the Settlements field value
func (o *CreateSettlementRequestRequest) GetSettlements() []CreateSettlement {
	if o == nil {
		var ret []CreateSettlement
		return ret
	}

	return o.Settlements
}

// GetSettlementsOk returns a tuple with the Settlements field value
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetSettlementsOk() ([]CreateSettlement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Settlements, true
}

// SetSettlements sets field value
func (o *CreateSettlementRequestRequest) SetSettlements(v []CreateSettlement) {
	o.Settlements = v
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *CreateSettlementRequestRequest) GetBankAccountId() string {
	if o == nil || IsNil(o.BankAccountId) {
		var ret string
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetBankAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *CreateSettlementRequestRequest) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given string and assigns it to the BankAccountId field.
func (o *CreateSettlementRequestRequest) SetBankAccountId(v string) {
	o.BankAccountId = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CreateSettlementRequestRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSettlementRequestRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CreateSettlementRequestRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CreateSettlementRequestRequest) SetCurrency(v string) {
	o.Currency = &v
}

func (o CreateSettlementRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSettlementRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	if !IsNil(o.AcquiringType) {
		toSerialize["acquiring_type"] = o.AcquiringType
	}
	if !IsNil(o.PayoutChannel) {
		toSerialize["payout_channel"] = o.PayoutChannel
	}
	if !IsNil(o.SettlementType) {
		toSerialize["settlement_type"] = o.SettlementType
	}
	toSerialize["settlements"] = o.Settlements
	if !IsNil(o.BankAccountId) {
		toSerialize["bank_account_id"] = o.BankAccountId
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

func (o *CreateSettlementRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"settlements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSettlementRequestRequest := _CreateSettlementRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSettlementRequestRequest)

	if err != nil {
		return err
	}

	*o = CreateSettlementRequestRequest(varCreateSettlementRequestRequest)

	return err
}

type NullableCreateSettlementRequestRequest struct {
	value *CreateSettlementRequestRequest
	isSet bool
}

func (v NullableCreateSettlementRequestRequest) Get() *CreateSettlementRequestRequest {
	return v.value
}

func (v *NullableCreateSettlementRequestRequest) Set(val *CreateSettlementRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSettlementRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSettlementRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSettlementRequestRequest(val *CreateSettlementRequestRequest) *NullableCreateSettlementRequestRequest {
	return &NullableCreateSettlementRequestRequest{value: val, isSet: true}
}

func (v NullableCreateSettlementRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSettlementRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


