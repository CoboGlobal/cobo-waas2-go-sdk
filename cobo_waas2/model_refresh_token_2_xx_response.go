/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the RefreshToken2XXResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshToken2XXResponse{}

// RefreshToken2XXResponse struct for RefreshToken2XXResponse
type RefreshToken2XXResponse struct {
	// The new Org Access Token.
	AccessToken *string `json:"access_token,omitempty"`
	// The type of the tokens, which is Bearer.
	TokenType *string `json:"token_type,omitempty"`
	// The scope of the Org Access Token to limit the app's access to the organization's resources. **Note**: Currently this property value is empty. The scope of the Org Access Token is based on the permissions granted when the app user installs the app. 
	Scope *string `json:"scope,omitempty"`
	// The time in seconds in which the new Org Access Token expires.
	ExpiresIn *int32 `json:"expires_in,omitempty"`
	// The Refresh Token, used to obtain another Org Access Token when the new Org Access Token expires. The expiration time for Refresh Tokens is currently set to 30 days and is subject to change.
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// NewRefreshToken2XXResponse instantiates a new RefreshToken2XXResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshToken2XXResponse() *RefreshToken2XXResponse {
	this := RefreshToken2XXResponse{}
	return &this
}

// NewRefreshToken2XXResponseWithDefaults instantiates a new RefreshToken2XXResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshToken2XXResponseWithDefaults() *RefreshToken2XXResponse {
	this := RefreshToken2XXResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *RefreshToken2XXResponse) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshToken2XXResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *RefreshToken2XXResponse) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *RefreshToken2XXResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *RefreshToken2XXResponse) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshToken2XXResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *RefreshToken2XXResponse) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *RefreshToken2XXResponse) SetTokenType(v string) {
	o.TokenType = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RefreshToken2XXResponse) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshToken2XXResponse) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RefreshToken2XXResponse) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *RefreshToken2XXResponse) SetScope(v string) {
	o.Scope = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *RefreshToken2XXResponse) GetExpiresIn() int32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshToken2XXResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *RefreshToken2XXResponse) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *RefreshToken2XXResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *RefreshToken2XXResponse) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshToken2XXResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *RefreshToken2XXResponse) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *RefreshToken2XXResponse) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

func (o RefreshToken2XXResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshToken2XXResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["token_type"] = o.TokenType
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	return toSerialize, nil
}

type NullableRefreshToken2XXResponse struct {
	value *RefreshToken2XXResponse
	isSet bool
}

func (v NullableRefreshToken2XXResponse) Get() *RefreshToken2XXResponse {
	return v.value
}

func (v *NullableRefreshToken2XXResponse) Set(val *RefreshToken2XXResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshToken2XXResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshToken2XXResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshToken2XXResponse(val *RefreshToken2XXResponse) *NullableRefreshToken2XXResponse {
	return &NullableRefreshToken2XXResponse{value: val, isSet: true}
}

func (v NullableRefreshToken2XXResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshToken2XXResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


