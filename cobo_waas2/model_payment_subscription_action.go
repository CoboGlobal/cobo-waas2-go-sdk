/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentSubscriptionAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentSubscriptionAction{}

// PaymentSubscriptionAction struct for PaymentSubscriptionAction
type PaymentSubscriptionAction struct {
	// The action request id.
	RequestId string `json:"request_id"`
	// The action id.
	SubscriptionActionId string `json:"subscription_action_id"`
	// The plan id in cobo.
	PlanId string `json:"plan_id"`
	// The subscription id in cobo.
	SubscriptionId string `json:"subscription_id"`
	// The merchant id in cobo.
	MerchantId string `json:"merchant_id"`
	// The merchant address in cobo.
	MerchantAddress string `json:"merchant_address"`
	Data PaymentSubscriptionActionData `json:"data"`
	Status PaymentSubscriptionActionStatus `json:"status"`
	// The created time of the subscription action, represented as a UNIX timestamp in seconds.
	CreatedTimestamp *int32 `json:"created_timestamp,omitempty"`
	// The updated time of the subscription action, represented as a UNIX timestamp in seconds.
	UpdatedTimestamp *int32 `json:"updated_timestamp,omitempty"`
}

type _PaymentSubscriptionAction PaymentSubscriptionAction

// NewPaymentSubscriptionAction instantiates a new PaymentSubscriptionAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSubscriptionAction(requestId string, subscriptionActionId string, planId string, subscriptionId string, merchantId string, merchantAddress string, data PaymentSubscriptionActionData, status PaymentSubscriptionActionStatus) *PaymentSubscriptionAction {
	this := PaymentSubscriptionAction{}
	this.RequestId = requestId
	this.SubscriptionActionId = subscriptionActionId
	this.PlanId = planId
	this.SubscriptionId = subscriptionId
	this.MerchantId = merchantId
	this.MerchantAddress = merchantAddress
	this.Data = data
	this.Status = status
	return &this
}

// NewPaymentSubscriptionActionWithDefaults instantiates a new PaymentSubscriptionAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentSubscriptionActionWithDefaults() *PaymentSubscriptionAction {
	this := PaymentSubscriptionAction{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *PaymentSubscriptionAction) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *PaymentSubscriptionAction) SetRequestId(v string) {
	o.RequestId = v
}

// GetSubscriptionActionId returns the SubscriptionActionId field value
func (o *PaymentSubscriptionAction) GetSubscriptionActionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionActionId
}

// GetSubscriptionActionIdOk returns a tuple with the SubscriptionActionId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetSubscriptionActionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionActionId, true
}

// SetSubscriptionActionId sets field value
func (o *PaymentSubscriptionAction) SetSubscriptionActionId(v string) {
	o.SubscriptionActionId = v
}

// GetPlanId returns the PlanId field value
func (o *PaymentSubscriptionAction) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *PaymentSubscriptionAction) SetPlanId(v string) {
	o.PlanId = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PaymentSubscriptionAction) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PaymentSubscriptionAction) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetMerchantId returns the MerchantId field value
func (o *PaymentSubscriptionAction) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *PaymentSubscriptionAction) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetMerchantAddress returns the MerchantAddress field value
func (o *PaymentSubscriptionAction) GetMerchantAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantAddress
}

// GetMerchantAddressOk returns a tuple with the MerchantAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetMerchantAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantAddress, true
}

// SetMerchantAddress sets field value
func (o *PaymentSubscriptionAction) SetMerchantAddress(v string) {
	o.MerchantAddress = v
}

// GetData returns the Data field value
func (o *PaymentSubscriptionAction) GetData() PaymentSubscriptionActionData {
	if o == nil {
		var ret PaymentSubscriptionActionData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetDataOk() (*PaymentSubscriptionActionData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *PaymentSubscriptionAction) SetData(v PaymentSubscriptionActionData) {
	o.Data = v
}

// GetStatus returns the Status field value
func (o *PaymentSubscriptionAction) GetStatus() PaymentSubscriptionActionStatus {
	if o == nil {
		var ret PaymentSubscriptionActionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetStatusOk() (*PaymentSubscriptionActionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PaymentSubscriptionAction) SetStatus(v PaymentSubscriptionActionStatus) {
	o.Status = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *PaymentSubscriptionAction) GetCreatedTimestamp() int32 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *PaymentSubscriptionAction) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int32 and assigns it to the CreatedTimestamp field.
func (o *PaymentSubscriptionAction) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value if set, zero value otherwise.
func (o *PaymentSubscriptionAction) GetUpdatedTimestamp() int32 {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		var ret int32
		return ret
	}
	return *o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSubscriptionAction) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedTimestamp) {
		return nil, false
	}
	return o.UpdatedTimestamp, true
}

// HasUpdatedTimestamp returns a boolean if a field has been set.
func (o *PaymentSubscriptionAction) HasUpdatedTimestamp() bool {
	if o != nil && !IsNil(o.UpdatedTimestamp) {
		return true
	}

	return false
}

// SetUpdatedTimestamp gets a reference to the given int32 and assigns it to the UpdatedTimestamp field.
func (o *PaymentSubscriptionAction) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp = &v
}

func (o PaymentSubscriptionAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentSubscriptionAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["subscription_action_id"] = o.SubscriptionActionId
	toSerialize["plan_id"] = o.PlanId
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["merchant_id"] = o.MerchantId
	toSerialize["merchant_address"] = o.MerchantAddress
	toSerialize["data"] = o.Data
	toSerialize["status"] = o.Status
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.UpdatedTimestamp) {
		toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	}
	return toSerialize, nil
}

func (o *PaymentSubscriptionAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_id",
		"subscription_action_id",
		"plan_id",
		"subscription_id",
		"merchant_id",
		"merchant_address",
		"data",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentSubscriptionAction := _PaymentSubscriptionAction{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentSubscriptionAction)

	if err != nil {
		return err
	}

	*o = PaymentSubscriptionAction(varPaymentSubscriptionAction)

	return err
}

type NullablePaymentSubscriptionAction struct {
	value *PaymentSubscriptionAction
	isSet bool
}

func (v NullablePaymentSubscriptionAction) Get() *PaymentSubscriptionAction {
	return v.value
}

func (v *NullablePaymentSubscriptionAction) Set(val *PaymentSubscriptionAction) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSubscriptionAction) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSubscriptionAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSubscriptionAction(val *PaymentSubscriptionAction) *NullablePaymentSubscriptionAction {
	return &NullablePaymentSubscriptionAction{value: val, isSet: true}
}

func (v NullablePaymentSubscriptionAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSubscriptionAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


