/*
Cobo Wallet as a Service 2.0

API version: 1.1.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the MPCVault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MPCVault{}

// MPCVault The data for vault information.
type MPCVault struct {
	// The vault ID.
	VaultId *string `json:"vault_id,omitempty"`
	// The project ID.
	ProjectId *string `json:"project_id,omitempty"`
	// The vault name.
	Name *string `json:"name,omitempty"`
	Type *MPCVaultType `json:"type,omitempty"`
	RootPubkeys []RootPubkey `json:"root_pubkeys,omitempty"`
	// The vault's creation time in Unix timestamp format, measured in milliseconds.
	CreatedTimestamp *int64 `json:"created_timestamp,omitempty"`
}

// NewMPCVault instantiates a new MPCVault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMPCVault() *MPCVault {
	this := MPCVault{}
	return &this
}

// NewMPCVaultWithDefaults instantiates a new MPCVault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMPCVaultWithDefaults() *MPCVault {
	this := MPCVault{}
	return &this
}

// GetVaultId returns the VaultId field value if set, zero value otherwise.
func (o *MPCVault) GetVaultId() string {
	if o == nil || IsNil(o.VaultId) {
		var ret string
		return ret
	}
	return *o.VaultId
}

// GetVaultIdOk returns a tuple with the VaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetVaultIdOk() (*string, bool) {
	if o == nil || IsNil(o.VaultId) {
		return nil, false
	}
	return o.VaultId, true
}

// HasVaultId returns a boolean if a field has been set.
func (o *MPCVault) HasVaultId() bool {
	if o != nil && !IsNil(o.VaultId) {
		return true
	}

	return false
}

// SetVaultId gets a reference to the given string and assigns it to the VaultId field.
func (o *MPCVault) SetVaultId(v string) {
	o.VaultId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MPCVault) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MPCVault) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MPCVault) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MPCVault) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MPCVault) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MPCVault) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MPCVault) GetType() MPCVaultType {
	if o == nil || IsNil(o.Type) {
		var ret MPCVaultType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetTypeOk() (*MPCVaultType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MPCVault) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MPCVaultType and assigns it to the Type field.
func (o *MPCVault) SetType(v MPCVaultType) {
	o.Type = &v
}

// GetRootPubkeys returns the RootPubkeys field value if set, zero value otherwise.
func (o *MPCVault) GetRootPubkeys() []RootPubkey {
	if o == nil || IsNil(o.RootPubkeys) {
		var ret []RootPubkey
		return ret
	}
	return o.RootPubkeys
}

// GetRootPubkeysOk returns a tuple with the RootPubkeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetRootPubkeysOk() ([]RootPubkey, bool) {
	if o == nil || IsNil(o.RootPubkeys) {
		return nil, false
	}
	return o.RootPubkeys, true
}

// HasRootPubkeys returns a boolean if a field has been set.
func (o *MPCVault) HasRootPubkeys() bool {
	if o != nil && !IsNil(o.RootPubkeys) {
		return true
	}

	return false
}

// SetRootPubkeys gets a reference to the given []RootPubkey and assigns it to the RootPubkeys field.
func (o *MPCVault) SetRootPubkeys(v []RootPubkey) {
	o.RootPubkeys = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *MPCVault) GetCreatedTimestamp() int64 {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MPCVault) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *MPCVault) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given int64 and assigns it to the CreatedTimestamp field.
func (o *MPCVault) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = &v
}

func (o MPCVault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MPCVault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VaultId) {
		toSerialize["vault_id"] = o.VaultId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.RootPubkeys) {
		toSerialize["root_pubkeys"] = o.RootPubkeys
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	return toSerialize, nil
}

type NullableMPCVault struct {
	value *MPCVault
	isSet bool
}

func (v NullableMPCVault) Get() *MPCVault {
	return v.value
}

func (v *NullableMPCVault) Set(val *MPCVault) {
	v.value = val
	v.isSet = true
}

func (v NullableMPCVault) IsSet() bool {
	return v.isSet
}

func (v *NullableMPCVault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMPCVault(val *MPCVault) *NullableMPCVault {
	return &NullableMPCVault{value: val, isSet: true}
}

func (v NullableMPCVault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMPCVault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


