/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the CreateBabylonStakingRegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBabylonStakingRegistrationRequest{}

// CreateBabylonStakingRegistrationRequest struct for CreateBabylonStakingRegistrationRequest
type CreateBabylonStakingRegistrationRequest struct {
	// The ID of the Phase-1 BTC staking position.
	StakingId *string `json:"staking_id,omitempty"`
	BabylonAddress *StakingSource `json:"babylon_address,omitempty"`
}

// NewCreateBabylonStakingRegistrationRequest instantiates a new CreateBabylonStakingRegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBabylonStakingRegistrationRequest() *CreateBabylonStakingRegistrationRequest {
	this := CreateBabylonStakingRegistrationRequest{}
	return &this
}

// NewCreateBabylonStakingRegistrationRequestWithDefaults instantiates a new CreateBabylonStakingRegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBabylonStakingRegistrationRequestWithDefaults() *CreateBabylonStakingRegistrationRequest {
	this := CreateBabylonStakingRegistrationRequest{}
	return &this
}

// GetStakingId returns the StakingId field value if set, zero value otherwise.
func (o *CreateBabylonStakingRegistrationRequest) GetStakingId() string {
	if o == nil || IsNil(o.StakingId) {
		var ret string
		return ret
	}
	return *o.StakingId
}

// GetStakingIdOk returns a tuple with the StakingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBabylonStakingRegistrationRequest) GetStakingIdOk() (*string, bool) {
	if o == nil || IsNil(o.StakingId) {
		return nil, false
	}
	return o.StakingId, true
}

// HasStakingId returns a boolean if a field has been set.
func (o *CreateBabylonStakingRegistrationRequest) HasStakingId() bool {
	if o != nil && !IsNil(o.StakingId) {
		return true
	}

	return false
}

// SetStakingId gets a reference to the given string and assigns it to the StakingId field.
func (o *CreateBabylonStakingRegistrationRequest) SetStakingId(v string) {
	o.StakingId = &v
}

// GetBabylonAddress returns the BabylonAddress field value if set, zero value otherwise.
func (o *CreateBabylonStakingRegistrationRequest) GetBabylonAddress() StakingSource {
	if o == nil || IsNil(o.BabylonAddress) {
		var ret StakingSource
		return ret
	}
	return *o.BabylonAddress
}

// GetBabylonAddressOk returns a tuple with the BabylonAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBabylonStakingRegistrationRequest) GetBabylonAddressOk() (*StakingSource, bool) {
	if o == nil || IsNil(o.BabylonAddress) {
		return nil, false
	}
	return o.BabylonAddress, true
}

// HasBabylonAddress returns a boolean if a field has been set.
func (o *CreateBabylonStakingRegistrationRequest) HasBabylonAddress() bool {
	if o != nil && !IsNil(o.BabylonAddress) {
		return true
	}

	return false
}

// SetBabylonAddress gets a reference to the given StakingSource and assigns it to the BabylonAddress field.
func (o *CreateBabylonStakingRegistrationRequest) SetBabylonAddress(v StakingSource) {
	o.BabylonAddress = &v
}

func (o CreateBabylonStakingRegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBabylonStakingRegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StakingId) {
		toSerialize["staking_id"] = o.StakingId
	}
	if !IsNil(o.BabylonAddress) {
		toSerialize["babylon_address"] = o.BabylonAddress
	}
	return toSerialize, nil
}

type NullableCreateBabylonStakingRegistrationRequest struct {
	value *CreateBabylonStakingRegistrationRequest
	isSet bool
}

func (v NullableCreateBabylonStakingRegistrationRequest) Get() *CreateBabylonStakingRegistrationRequest {
	return v.value
}

func (v *NullableCreateBabylonStakingRegistrationRequest) Set(val *CreateBabylonStakingRegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBabylonStakingRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBabylonStakingRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBabylonStakingRegistrationRequest(val *CreateBabylonStakingRegistrationRequest) *NullableCreateBabylonStakingRegistrationRequest {
	return &NullableCreateBabylonStakingRegistrationRequest{value: val, isSet: true}
}

func (v NullableCreateBabylonStakingRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBabylonStakingRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


