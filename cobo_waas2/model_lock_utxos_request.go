/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LockUtxosRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockUtxosRequest{}

// LockUtxosRequest struct for LockUtxosRequest
type LockUtxosRequest struct {
	Utxos []LockUtxosRequestUtxosInner `json:"utxos"`
}

type _LockUtxosRequest LockUtxosRequest

// NewLockUtxosRequest instantiates a new LockUtxosRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockUtxosRequest(utxos []LockUtxosRequestUtxosInner) *LockUtxosRequest {
	this := LockUtxosRequest{}
	this.Utxos = utxos
	return &this
}

// NewLockUtxosRequestWithDefaults instantiates a new LockUtxosRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockUtxosRequestWithDefaults() *LockUtxosRequest {
	this := LockUtxosRequest{}
	return &this
}

// GetUtxos returns the Utxos field value
func (o *LockUtxosRequest) GetUtxos() []LockUtxosRequestUtxosInner {
	if o == nil {
		var ret []LockUtxosRequestUtxosInner
		return ret
	}

	return o.Utxos
}

// GetUtxosOk returns a tuple with the Utxos field value
// and a boolean to check if the value has been set.
func (o *LockUtxosRequest) GetUtxosOk() ([]LockUtxosRequestUtxosInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Utxos, true
}

// SetUtxos sets field value
func (o *LockUtxosRequest) SetUtxos(v []LockUtxosRequestUtxosInner) {
	o.Utxos = v
}

func (o LockUtxosRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockUtxosRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["utxos"] = o.Utxos
	return toSerialize, nil
}

func (o *LockUtxosRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"utxos",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLockUtxosRequest := _LockUtxosRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLockUtxosRequest)

	if err != nil {
		return err
	}

	*o = LockUtxosRequest(varLockUtxosRequest)

	return err
}

type NullableLockUtxosRequest struct {
	value *LockUtxosRequest
	isSet bool
}

func (v NullableLockUtxosRequest) Get() *LockUtxosRequest {
	return v.value
}

func (v *NullableLockUtxosRequest) Set(val *LockUtxosRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLockUtxosRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLockUtxosRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockUtxosRequest(val *LockUtxosRequest) *NullableLockUtxosRequest {
	return &NullableLockUtxosRequest{value: val, isSet: true}
}

func (v NullableLockUtxosRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockUtxosRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


