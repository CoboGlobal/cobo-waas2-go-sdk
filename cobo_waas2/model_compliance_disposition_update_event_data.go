/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ComplianceDispositionUpdateEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceDispositionUpdateEventData{}

// ComplianceDispositionUpdateEventData struct for ComplianceDispositionUpdateEventData
type ComplianceDispositionUpdateEventData struct {
	//  The data type of the event. - `Transaction`: The transaction event data. - `TSSRequest`: The TSS request event data. - `Addresses`: The addresses event data. - `WalletInfo`: The wallet information event data. - `MPCVault`: The MPC vault event data. - `Chains`: The enabled chain event data. - `Tokens`: The enabled token event data. - `TokenListing`: The token listing event data.        - `PaymentOrder`: The payment order event data. - `PaymentRefund`: The payment refund event data. - `PaymentSettlement`: The payment settlement event data. - `PaymentTransaction`: The payment transaction event data. - `PaymentAddressUpdate`: The top-up address update event data. - `BalanceUpdateInfo`: The balance update event data. - `SuspendedToken`: The token suspension event data. - `ComplianceDisposition`: The compliance disposition event data.
	DataType string `json:"data_type"`
	// The transaction ID.
	TransactionId string `json:"transaction_id"`
	DispositionType DispositionType `json:"disposition_type"`
	DispositionStatus DispositionStatus `json:"disposition_status"`
	// The blockchain address to receive the refunded/isolated funds.
	DestinationAddress *string `json:"destination_address,omitempty"`
	// The amount to be refunded/isolated from the original transaction, specified as a numeric string. This value cannot exceed the total amount of the original transaction. 
	DispositionAmount *string `json:"disposition_amount,omitempty"`
	// The time when the disposition was updated, in Unix timestamp format, measured in milliseconds.
	UpdatedTimestamp int64 `json:"updated_timestamp"`
}

type _ComplianceDispositionUpdateEventData ComplianceDispositionUpdateEventData

// NewComplianceDispositionUpdateEventData instantiates a new ComplianceDispositionUpdateEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceDispositionUpdateEventData(dataType string, transactionId string, dispositionType DispositionType, dispositionStatus DispositionStatus, updatedTimestamp int64) *ComplianceDispositionUpdateEventData {
	this := ComplianceDispositionUpdateEventData{}
	this.DataType = dataType
	this.TransactionId = transactionId
	this.DispositionType = dispositionType
	this.DispositionStatus = dispositionStatus
	this.UpdatedTimestamp = updatedTimestamp
	return &this
}

// NewComplianceDispositionUpdateEventDataWithDefaults instantiates a new ComplianceDispositionUpdateEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceDispositionUpdateEventDataWithDefaults() *ComplianceDispositionUpdateEventData {
	this := ComplianceDispositionUpdateEventData{}
	return &this
}

// GetDataType returns the DataType field value
func (o *ComplianceDispositionUpdateEventData) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *ComplianceDispositionUpdateEventData) SetDataType(v string) {
	o.DataType = v
}

// GetTransactionId returns the TransactionId field value
func (o *ComplianceDispositionUpdateEventData) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *ComplianceDispositionUpdateEventData) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetDispositionType returns the DispositionType field value
func (o *ComplianceDispositionUpdateEventData) GetDispositionType() DispositionType {
	if o == nil {
		var ret DispositionType
		return ret
	}

	return o.DispositionType
}

// GetDispositionTypeOk returns a tuple with the DispositionType field value
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetDispositionTypeOk() (*DispositionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DispositionType, true
}

// SetDispositionType sets field value
func (o *ComplianceDispositionUpdateEventData) SetDispositionType(v DispositionType) {
	o.DispositionType = v
}

// GetDispositionStatus returns the DispositionStatus field value
func (o *ComplianceDispositionUpdateEventData) GetDispositionStatus() DispositionStatus {
	if o == nil {
		var ret DispositionStatus
		return ret
	}

	return o.DispositionStatus
}

// GetDispositionStatusOk returns a tuple with the DispositionStatus field value
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetDispositionStatusOk() (*DispositionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DispositionStatus, true
}

// SetDispositionStatus sets field value
func (o *ComplianceDispositionUpdateEventData) SetDispositionStatus(v DispositionStatus) {
	o.DispositionStatus = v
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *ComplianceDispositionUpdateEventData) GetDestinationAddress() string {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret string
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetDestinationAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *ComplianceDispositionUpdateEventData) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given string and assigns it to the DestinationAddress field.
func (o *ComplianceDispositionUpdateEventData) SetDestinationAddress(v string) {
	o.DestinationAddress = &v
}

// GetDispositionAmount returns the DispositionAmount field value if set, zero value otherwise.
func (o *ComplianceDispositionUpdateEventData) GetDispositionAmount() string {
	if o == nil || IsNil(o.DispositionAmount) {
		var ret string
		return ret
	}
	return *o.DispositionAmount
}

// GetDispositionAmountOk returns a tuple with the DispositionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetDispositionAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DispositionAmount) {
		return nil, false
	}
	return o.DispositionAmount, true
}

// HasDispositionAmount returns a boolean if a field has been set.
func (o *ComplianceDispositionUpdateEventData) HasDispositionAmount() bool {
	if o != nil && !IsNil(o.DispositionAmount) {
		return true
	}

	return false
}

// SetDispositionAmount gets a reference to the given string and assigns it to the DispositionAmount field.
func (o *ComplianceDispositionUpdateEventData) SetDispositionAmount(v string) {
	o.DispositionAmount = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *ComplianceDispositionUpdateEventData) GetUpdatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ComplianceDispositionUpdateEventData) GetUpdatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *ComplianceDispositionUpdateEventData) SetUpdatedTimestamp(v int64) {
	o.UpdatedTimestamp = v
}

func (o ComplianceDispositionUpdateEventData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceDispositionUpdateEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_type"] = o.DataType
	toSerialize["transaction_id"] = o.TransactionId
	toSerialize["disposition_type"] = o.DispositionType
	toSerialize["disposition_status"] = o.DispositionStatus
	if !IsNil(o.DestinationAddress) {
		toSerialize["destination_address"] = o.DestinationAddress
	}
	if !IsNil(o.DispositionAmount) {
		toSerialize["disposition_amount"] = o.DispositionAmount
	}
	toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	return toSerialize, nil
}

func (o *ComplianceDispositionUpdateEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data_type",
		"transaction_id",
		"disposition_type",
		"disposition_status",
		"updated_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varComplianceDispositionUpdateEventData := _ComplianceDispositionUpdateEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varComplianceDispositionUpdateEventData)

	if err != nil {
		return err
	}

	*o = ComplianceDispositionUpdateEventData(varComplianceDispositionUpdateEventData)

	return err
}

type NullableComplianceDispositionUpdateEventData struct {
	value *ComplianceDispositionUpdateEventData
	isSet bool
}

func (v NullableComplianceDispositionUpdateEventData) Get() *ComplianceDispositionUpdateEventData {
	return v.value
}

func (v *NullableComplianceDispositionUpdateEventData) Set(val *ComplianceDispositionUpdateEventData) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceDispositionUpdateEventData) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceDispositionUpdateEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceDispositionUpdateEventData(val *ComplianceDispositionUpdateEventData) *NullableComplianceDispositionUpdateEventData {
	return &NullableComplianceDispositionUpdateEventData{value: val, isSet: true}
}

func (v NullableComplianceDispositionUpdateEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceDispositionUpdateEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


