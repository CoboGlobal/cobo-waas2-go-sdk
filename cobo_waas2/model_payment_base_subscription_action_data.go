/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentBaseSubscriptionActionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentBaseSubscriptionActionData{}

// PaymentBaseSubscriptionActionData struct for PaymentBaseSubscriptionActionData
type PaymentBaseSubscriptionActionData struct {
	ActionType PaymentSubscriptionAction `json:"action_type"`
	// The subscription id in cobo.
	SubscriptionId string `json:"subscription_id"`
	// The signature for transaction.
	Signature string `json:"signature"`
}

type _PaymentBaseSubscriptionActionData PaymentBaseSubscriptionActionData

// NewPaymentBaseSubscriptionActionData instantiates a new PaymentBaseSubscriptionActionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentBaseSubscriptionActionData(actionType PaymentSubscriptionAction, subscriptionId string, signature string) *PaymentBaseSubscriptionActionData {
	this := PaymentBaseSubscriptionActionData{}
	this.ActionType = actionType
	this.SubscriptionId = subscriptionId
	this.Signature = signature
	return &this
}

// NewPaymentBaseSubscriptionActionDataWithDefaults instantiates a new PaymentBaseSubscriptionActionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentBaseSubscriptionActionDataWithDefaults() *PaymentBaseSubscriptionActionData {
	this := PaymentBaseSubscriptionActionData{}
	return &this
}

// GetActionType returns the ActionType field value
func (o *PaymentBaseSubscriptionActionData) GetActionType() PaymentSubscriptionAction {
	if o == nil {
		var ret PaymentSubscriptionAction
		return ret
	}

	return o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
func (o *PaymentBaseSubscriptionActionData) GetActionTypeOk() (*PaymentSubscriptionAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionType, true
}

// SetActionType sets field value
func (o *PaymentBaseSubscriptionActionData) SetActionType(v PaymentSubscriptionAction) {
	o.ActionType = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PaymentBaseSubscriptionActionData) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PaymentBaseSubscriptionActionData) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PaymentBaseSubscriptionActionData) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetSignature returns the Signature field value
func (o *PaymentBaseSubscriptionActionData) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *PaymentBaseSubscriptionActionData) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *PaymentBaseSubscriptionActionData) SetSignature(v string) {
	o.Signature = v
}

func (o PaymentBaseSubscriptionActionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentBaseSubscriptionActionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action_type"] = o.ActionType
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

func (o *PaymentBaseSubscriptionActionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action_type",
		"subscription_id",
		"signature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentBaseSubscriptionActionData := _PaymentBaseSubscriptionActionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentBaseSubscriptionActionData)

	if err != nil {
		return err
	}

	*o = PaymentBaseSubscriptionActionData(varPaymentBaseSubscriptionActionData)

	return err
}

type NullablePaymentBaseSubscriptionActionData struct {
	value *PaymentBaseSubscriptionActionData
	isSet bool
}

func (v NullablePaymentBaseSubscriptionActionData) Get() *PaymentBaseSubscriptionActionData {
	return v.value
}

func (v *NullablePaymentBaseSubscriptionActionData) Set(val *PaymentBaseSubscriptionActionData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentBaseSubscriptionActionData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentBaseSubscriptionActionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentBaseSubscriptionActionData(val *PaymentBaseSubscriptionActionData) *NullablePaymentBaseSubscriptionActionData {
	return &NullablePaymentBaseSubscriptionActionData{value: val, isSet: true}
}

func (v NullablePaymentBaseSubscriptionActionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentBaseSubscriptionActionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


