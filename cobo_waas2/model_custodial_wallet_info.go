/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustodialWalletInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustodialWalletInfo{}

// CustodialWalletInfo The basic information of a wallet.
type CustodialWalletInfo struct {
	// The wallet ID.
	WalletId string `json:"wallet_id"`
	WalletType WalletType `json:"wallet_type"`
	WalletSubtype WalletSubtype `json:"wallet_subtype"`
	// The wallet name.
	Name string `json:"name"`
	// The ID of the owning organization.
	OrgId string `json:"org_id"`
	// Enable the auto sweep feature for the wallet
	EnableAutoSweep *bool `json:"enable_auto_sweep,omitempty"`
}

type _CustodialWalletInfo CustodialWalletInfo

// NewCustodialWalletInfo instantiates a new CustodialWalletInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustodialWalletInfo(walletId string, walletType WalletType, walletSubtype WalletSubtype, name string, orgId string) *CustodialWalletInfo {
	this := CustodialWalletInfo{}
	this.WalletId = walletId
	this.WalletType = walletType
	this.WalletSubtype = walletSubtype
	this.Name = name
	this.OrgId = orgId
	return &this
}

// NewCustodialWalletInfoWithDefaults instantiates a new CustodialWalletInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustodialWalletInfoWithDefaults() *CustodialWalletInfo {
	this := CustodialWalletInfo{}
	return &this
}

// GetWalletId returns the WalletId field value
func (o *CustodialWalletInfo) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *CustodialWalletInfo) SetWalletId(v string) {
	o.WalletId = v
}

// GetWalletType returns the WalletType field value
func (o *CustodialWalletInfo) GetWalletType() WalletType {
	if o == nil {
		var ret WalletType
		return ret
	}

	return o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetWalletTypeOk() (*WalletType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletType, true
}

// SetWalletType sets field value
func (o *CustodialWalletInfo) SetWalletType(v WalletType) {
	o.WalletType = v
}

// GetWalletSubtype returns the WalletSubtype field value
func (o *CustodialWalletInfo) GetWalletSubtype() WalletSubtype {
	if o == nil {
		var ret WalletSubtype
		return ret
	}

	return o.WalletSubtype
}

// GetWalletSubtypeOk returns a tuple with the WalletSubtype field value
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetWalletSubtypeOk() (*WalletSubtype, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletSubtype, true
}

// SetWalletSubtype sets field value
func (o *CustodialWalletInfo) SetWalletSubtype(v WalletSubtype) {
	o.WalletSubtype = v
}

// GetName returns the Name field value
func (o *CustodialWalletInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustodialWalletInfo) SetName(v string) {
	o.Name = v
}

// GetOrgId returns the OrgId field value
func (o *CustodialWalletInfo) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *CustodialWalletInfo) SetOrgId(v string) {
	o.OrgId = v
}

// GetEnableAutoSweep returns the EnableAutoSweep field value if set, zero value otherwise.
func (o *CustodialWalletInfo) GetEnableAutoSweep() bool {
	if o == nil || IsNil(o.EnableAutoSweep) {
		var ret bool
		return ret
	}
	return *o.EnableAutoSweep
}

// GetEnableAutoSweepOk returns a tuple with the EnableAutoSweep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustodialWalletInfo) GetEnableAutoSweepOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAutoSweep) {
		return nil, false
	}
	return o.EnableAutoSweep, true
}

// HasEnableAutoSweep returns a boolean if a field has been set.
func (o *CustodialWalletInfo) HasEnableAutoSweep() bool {
	if o != nil && !IsNil(o.EnableAutoSweep) {
		return true
	}

	return false
}

// SetEnableAutoSweep gets a reference to the given bool and assigns it to the EnableAutoSweep field.
func (o *CustodialWalletInfo) SetEnableAutoSweep(v bool) {
	o.EnableAutoSweep = &v
}

func (o CustodialWalletInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustodialWalletInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["wallet_type"] = o.WalletType
	toSerialize["wallet_subtype"] = o.WalletSubtype
	toSerialize["name"] = o.Name
	toSerialize["org_id"] = o.OrgId
	if !IsNil(o.EnableAutoSweep) {
		toSerialize["enable_auto_sweep"] = o.EnableAutoSweep
	}
	return toSerialize, nil
}

func (o *CustodialWalletInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"wallet_id",
		"wallet_type",
		"wallet_subtype",
		"name",
		"org_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustodialWalletInfo := _CustodialWalletInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustodialWalletInfo)

	if err != nil {
		return err
	}

	*o = CustodialWalletInfo(varCustodialWalletInfo)

	return err
}

type NullableCustodialWalletInfo struct {
	value *CustodialWalletInfo
	isSet bool
}

func (v NullableCustodialWalletInfo) Get() *CustodialWalletInfo {
	return v.value
}

func (v *NullableCustodialWalletInfo) Set(val *CustodialWalletInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustodialWalletInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustodialWalletInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustodialWalletInfo(val *CustodialWalletInfo) *NullableCustodialWalletInfo {
	return &NullableCustodialWalletInfo{value: val, isSet: true}
}

func (v NullableCustodialWalletInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustodialWalletInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


