/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ComplianceKytScreeningsUpdateEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceKytScreeningsUpdateEventData{}

// ComplianceKytScreeningsUpdateEventData struct for ComplianceKytScreeningsUpdateEventData
type ComplianceKytScreeningsUpdateEventData struct {
	//  The data type of the event. - `Transaction`: The transaction event data. - `TSSRequest`: The TSS request event data. - `Addresses`: The addresses event data. - `WalletInfo`: The wallet information event data. - `MPCVault`: The MPC vault event data. - `Chains`: The enabled chain event data. - `Tokens`: The enabled token event data. - `TokenListing`: The token listing event data.        - `PaymentOrder`: The payment order event data. - `PaymentRefund`: The payment refund event data. - `PaymentSettlement`: The payment settlement event data. - `PaymentTransaction`: The payment transaction event data. - `PaymentAddressUpdate`: The top-up address update event data. - `BalanceUpdateInfo`: The balance update event data. - `SuspendedToken`: The token suspension event data. - `ComplianceDisposition`: The compliance disposition event data. - `ComplianceKytScreenings`: The compliance KYT screenings event data.
	DataType string `json:"data_type"`
	// The transaction ID.
	TransactionId string `json:"transaction_id"`
	TransactionType KytScreeningsTransactionType `json:"transaction_type"`
	ReviewStatus ReviewStatusType `json:"review_status"`
	FundsStatus FundsStatusType `json:"funds_status"`
	// The time when the KYT screening information was updated, in Unix timestamp format, measured in milliseconds.
	UpdatedTimestamp int64 `json:"updated_timestamp"`
}

type _ComplianceKytScreeningsUpdateEventData ComplianceKytScreeningsUpdateEventData

// NewComplianceKytScreeningsUpdateEventData instantiates a new ComplianceKytScreeningsUpdateEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceKytScreeningsUpdateEventData(dataType string, transactionId string, transactionType KytScreeningsTransactionType, reviewStatus ReviewStatusType, fundsStatus FundsStatusType, updatedTimestamp int64) *ComplianceKytScreeningsUpdateEventData {
	this := ComplianceKytScreeningsUpdateEventData{}
	this.DataType = dataType
	this.TransactionId = transactionId
	this.TransactionType = transactionType
	this.ReviewStatus = reviewStatus
	this.FundsStatus = fundsStatus
	this.UpdatedTimestamp = updatedTimestamp
	return &this
}

// NewComplianceKytScreeningsUpdateEventDataWithDefaults instantiates a new ComplianceKytScreeningsUpdateEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceKytScreeningsUpdateEventDataWithDefaults() *ComplianceKytScreeningsUpdateEventData {
	this := ComplianceKytScreeningsUpdateEventData{}
	return &this
}

// GetDataType returns the DataType field value
func (o *ComplianceKytScreeningsUpdateEventData) GetDataType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetDataType(v string) {
	o.DataType = v
}

// GetTransactionId returns the TransactionId field value
func (o *ComplianceKytScreeningsUpdateEventData) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetTransactionType returns the TransactionType field value
func (o *ComplianceKytScreeningsUpdateEventData) GetTransactionType() KytScreeningsTransactionType {
	if o == nil {
		var ret KytScreeningsTransactionType
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetTransactionTypeOk() (*KytScreeningsTransactionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetTransactionType(v KytScreeningsTransactionType) {
	o.TransactionType = v
}

// GetReviewStatus returns the ReviewStatus field value
func (o *ComplianceKytScreeningsUpdateEventData) GetReviewStatus() ReviewStatusType {
	if o == nil {
		var ret ReviewStatusType
		return ret
	}

	return o.ReviewStatus
}

// GetReviewStatusOk returns a tuple with the ReviewStatus field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetReviewStatusOk() (*ReviewStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReviewStatus, true
}

// SetReviewStatus sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetReviewStatus(v ReviewStatusType) {
	o.ReviewStatus = v
}

// GetFundsStatus returns the FundsStatus field value
func (o *ComplianceKytScreeningsUpdateEventData) GetFundsStatus() FundsStatusType {
	if o == nil {
		var ret FundsStatusType
		return ret
	}

	return o.FundsStatus
}

// GetFundsStatusOk returns a tuple with the FundsStatus field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetFundsStatusOk() (*FundsStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundsStatus, true
}

// SetFundsStatus sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetFundsStatus(v FundsStatusType) {
	o.FundsStatus = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *ComplianceKytScreeningsUpdateEventData) GetUpdatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ComplianceKytScreeningsUpdateEventData) GetUpdatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *ComplianceKytScreeningsUpdateEventData) SetUpdatedTimestamp(v int64) {
	o.UpdatedTimestamp = v
}

func (o ComplianceKytScreeningsUpdateEventData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceKytScreeningsUpdateEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_type"] = o.DataType
	toSerialize["transaction_id"] = o.TransactionId
	toSerialize["transaction_type"] = o.TransactionType
	toSerialize["review_status"] = o.ReviewStatus
	toSerialize["funds_status"] = o.FundsStatus
	toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	return toSerialize, nil
}

func (o *ComplianceKytScreeningsUpdateEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data_type",
		"transaction_id",
		"transaction_type",
		"review_status",
		"funds_status",
		"updated_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varComplianceKytScreeningsUpdateEventData := _ComplianceKytScreeningsUpdateEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varComplianceKytScreeningsUpdateEventData)

	if err != nil {
		return err
	}

	*o = ComplianceKytScreeningsUpdateEventData(varComplianceKytScreeningsUpdateEventData)

	return err
}

type NullableComplianceKytScreeningsUpdateEventData struct {
	value *ComplianceKytScreeningsUpdateEventData
	isSet bool
}

func (v NullableComplianceKytScreeningsUpdateEventData) Get() *ComplianceKytScreeningsUpdateEventData {
	return v.value
}

func (v *NullableComplianceKytScreeningsUpdateEventData) Set(val *ComplianceKytScreeningsUpdateEventData) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceKytScreeningsUpdateEventData) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceKytScreeningsUpdateEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceKytScreeningsUpdateEventData(val *ComplianceKytScreeningsUpdateEventData) *NullableComplianceKytScreeningsUpdateEventData {
	return &NullableComplianceKytScreeningsUpdateEventData{value: val, isSet: true}
}

func (v NullableComplianceKytScreeningsUpdateEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceKytScreeningsUpdateEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


