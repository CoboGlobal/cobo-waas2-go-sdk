/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the ApprovalTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalTemplate{}

// ApprovalTemplate The template for transaction approval details.
type ApprovalTemplate struct {
	// The business key that is used to identify the transaction.
	BusinessKey *string `json:"business_key,omitempty"`
	// The template text that is used for the transaction approval.
	TemplateText *string `json:"template_text,omitempty"`
	// The version of the template used for the transaction approval.
	TemplateVersion *string `json:"template_version,omitempty"`
}

// NewApprovalTemplate instantiates a new ApprovalTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalTemplate() *ApprovalTemplate {
	this := ApprovalTemplate{}
	return &this
}

// NewApprovalTemplateWithDefaults instantiates a new ApprovalTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalTemplateWithDefaults() *ApprovalTemplate {
	this := ApprovalTemplate{}
	return &this
}

// GetBusinessKey returns the BusinessKey field value if set, zero value otherwise.
func (o *ApprovalTemplate) GetBusinessKey() string {
	if o == nil || IsNil(o.BusinessKey) {
		var ret string
		return ret
	}
	return *o.BusinessKey
}

// GetBusinessKeyOk returns a tuple with the BusinessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalTemplate) GetBusinessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessKey) {
		return nil, false
	}
	return o.BusinessKey, true
}

// HasBusinessKey returns a boolean if a field has been set.
func (o *ApprovalTemplate) HasBusinessKey() bool {
	if o != nil && !IsNil(o.BusinessKey) {
		return true
	}

	return false
}

// SetBusinessKey gets a reference to the given string and assigns it to the BusinessKey field.
func (o *ApprovalTemplate) SetBusinessKey(v string) {
	o.BusinessKey = &v
}

// GetTemplateText returns the TemplateText field value if set, zero value otherwise.
func (o *ApprovalTemplate) GetTemplateText() string {
	if o == nil || IsNil(o.TemplateText) {
		var ret string
		return ret
	}
	return *o.TemplateText
}

// GetTemplateTextOk returns a tuple with the TemplateText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalTemplate) GetTemplateTextOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateText) {
		return nil, false
	}
	return o.TemplateText, true
}

// HasTemplateText returns a boolean if a field has been set.
func (o *ApprovalTemplate) HasTemplateText() bool {
	if o != nil && !IsNil(o.TemplateText) {
		return true
	}

	return false
}

// SetTemplateText gets a reference to the given string and assigns it to the TemplateText field.
func (o *ApprovalTemplate) SetTemplateText(v string) {
	o.TemplateText = &v
}

// GetTemplateVersion returns the TemplateVersion field value if set, zero value otherwise.
func (o *ApprovalTemplate) GetTemplateVersion() string {
	if o == nil || IsNil(o.TemplateVersion) {
		var ret string
		return ret
	}
	return *o.TemplateVersion
}

// GetTemplateVersionOk returns a tuple with the TemplateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalTemplate) GetTemplateVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateVersion) {
		return nil, false
	}
	return o.TemplateVersion, true
}

// HasTemplateVersion returns a boolean if a field has been set.
func (o *ApprovalTemplate) HasTemplateVersion() bool {
	if o != nil && !IsNil(o.TemplateVersion) {
		return true
	}

	return false
}

// SetTemplateVersion gets a reference to the given string and assigns it to the TemplateVersion field.
func (o *ApprovalTemplate) SetTemplateVersion(v string) {
	o.TemplateVersion = &v
}

func (o ApprovalTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessKey) {
		toSerialize["business_key"] = o.BusinessKey
	}
	if !IsNil(o.TemplateText) {
		toSerialize["template_text"] = o.TemplateText
	}
	if !IsNil(o.TemplateVersion) {
		toSerialize["template_version"] = o.TemplateVersion
	}
	return toSerialize, nil
}

type NullableApprovalTemplate struct {
	value *ApprovalTemplate
	isSet bool
}

func (v NullableApprovalTemplate) Get() *ApprovalTemplate {
	return v.value
}

func (v *NullableApprovalTemplate) Set(val *ApprovalTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalTemplate(val *ApprovalTemplate) *NullableApprovalTemplate {
	return &NullableApprovalTemplate{value: val, isSet: true}
}

func (v NullableApprovalTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


