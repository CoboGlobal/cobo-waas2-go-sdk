/*
Cobo Wallet as a Service 2.0

Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSRequest{}

// TSSRequest The data for the TSS request information.
type TSSRequest struct {
	// The TSS request ID.
	TssRequestId *string `json:"tss_request_id,omitempty"`
	SourceKeyShareHolderGroup *SourceGroup `json:"source_key_share_holder_group,omitempty"`
	// The target key share holder group ID.
	TargetKeyShareHolderGroupId *string `json:"target_key_share_holder_group_id,omitempty"`
	Type *TSSRequestType `json:"type,omitempty"`
	Status *TSSRequestStatus `json:"status,omitempty"`
}

// NewTSSRequest instantiates a new TSSRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSRequest() *TSSRequest {
	this := TSSRequest{}
	return &this
}

// NewTSSRequestWithDefaults instantiates a new TSSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSRequestWithDefaults() *TSSRequest {
	this := TSSRequest{}
	return &this
}

// GetTssRequestId returns the TssRequestId field value if set, zero value otherwise.
func (o *TSSRequest) GetTssRequestId() string {
	if o == nil || IsNil(o.TssRequestId) {
		var ret string
		return ret
	}
	return *o.TssRequestId
}

// GetTssRequestIdOk returns a tuple with the TssRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSRequest) GetTssRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.TssRequestId) {
		return nil, false
	}
	return o.TssRequestId, true
}

// HasTssRequestId returns a boolean if a field has been set.
func (o *TSSRequest) HasTssRequestId() bool {
	if o != nil && !IsNil(o.TssRequestId) {
		return true
	}

	return false
}

// SetTssRequestId gets a reference to the given string and assigns it to the TssRequestId field.
func (o *TSSRequest) SetTssRequestId(v string) {
	o.TssRequestId = &v
}

// GetSourceKeyShareHolderGroup returns the SourceKeyShareHolderGroup field value if set, zero value otherwise.
func (o *TSSRequest) GetSourceKeyShareHolderGroup() SourceGroup {
	if o == nil || IsNil(o.SourceKeyShareHolderGroup) {
		var ret SourceGroup
		return ret
	}
	return *o.SourceKeyShareHolderGroup
}

// GetSourceKeyShareHolderGroupOk returns a tuple with the SourceKeyShareHolderGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSRequest) GetSourceKeyShareHolderGroupOk() (*SourceGroup, bool) {
	if o == nil || IsNil(o.SourceKeyShareHolderGroup) {
		return nil, false
	}
	return o.SourceKeyShareHolderGroup, true
}

// HasSourceKeyShareHolderGroup returns a boolean if a field has been set.
func (o *TSSRequest) HasSourceKeyShareHolderGroup() bool {
	if o != nil && !IsNil(o.SourceKeyShareHolderGroup) {
		return true
	}

	return false
}

// SetSourceKeyShareHolderGroup gets a reference to the given SourceGroup and assigns it to the SourceKeyShareHolderGroup field.
func (o *TSSRequest) SetSourceKeyShareHolderGroup(v SourceGroup) {
	o.SourceKeyShareHolderGroup = &v
}

// GetTargetKeyShareHolderGroupId returns the TargetKeyShareHolderGroupId field value if set, zero value otherwise.
func (o *TSSRequest) GetTargetKeyShareHolderGroupId() string {
	if o == nil || IsNil(o.TargetKeyShareHolderGroupId) {
		var ret string
		return ret
	}
	return *o.TargetKeyShareHolderGroupId
}

// GetTargetKeyShareHolderGroupIdOk returns a tuple with the TargetKeyShareHolderGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSRequest) GetTargetKeyShareHolderGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetKeyShareHolderGroupId) {
		return nil, false
	}
	return o.TargetKeyShareHolderGroupId, true
}

// HasTargetKeyShareHolderGroupId returns a boolean if a field has been set.
func (o *TSSRequest) HasTargetKeyShareHolderGroupId() bool {
	if o != nil && !IsNil(o.TargetKeyShareHolderGroupId) {
		return true
	}

	return false
}

// SetTargetKeyShareHolderGroupId gets a reference to the given string and assigns it to the TargetKeyShareHolderGroupId field.
func (o *TSSRequest) SetTargetKeyShareHolderGroupId(v string) {
	o.TargetKeyShareHolderGroupId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TSSRequest) GetType() TSSRequestType {
	if o == nil || IsNil(o.Type) {
		var ret TSSRequestType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSRequest) GetTypeOk() (*TSSRequestType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TSSRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given TSSRequestType and assigns it to the Type field.
func (o *TSSRequest) SetType(v TSSRequestType) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TSSRequest) GetStatus() TSSRequestStatus {
	if o == nil || IsNil(o.Status) {
		var ret TSSRequestStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSRequest) GetStatusOk() (*TSSRequestStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TSSRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given TSSRequestStatus and assigns it to the Status field.
func (o *TSSRequest) SetStatus(v TSSRequestStatus) {
	o.Status = &v
}

func (o TSSRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TssRequestId) {
		toSerialize["tss_request_id"] = o.TssRequestId
	}
	if !IsNil(o.SourceKeyShareHolderGroup) {
		toSerialize["source_key_share_holder_group"] = o.SourceKeyShareHolderGroup
	}
	if !IsNil(o.TargetKeyShareHolderGroupId) {
		toSerialize["target_key_share_holder_group_id"] = o.TargetKeyShareHolderGroupId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableTSSRequest struct {
	value *TSSRequest
	isSet bool
}

func (v NullableTSSRequest) Get() *TSSRequest {
	return v.value
}

func (v *NullableTSSRequest) Set(val *TSSRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSRequest(val *TSSRequest) *NullableTSSRequest {
	return &NullableTSSRequest{value: val, isSet: true}
}

func (v NullableTSSRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


