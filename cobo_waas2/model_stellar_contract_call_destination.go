/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StellarContractCallDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StellarContractCallDestination{}

// StellarContractCallDestination The information about the transaction destination. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.
type StellarContractCallDestination struct {
	DestinationType ContractCallDestinationType `json:"destination_type"`
	ContractParam StellarContractCallContractParam `json:"contract_param"`
}

type _StellarContractCallDestination StellarContractCallDestination

// NewStellarContractCallDestination instantiates a new StellarContractCallDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStellarContractCallDestination(destinationType ContractCallDestinationType, contractParam StellarContractCallContractParam) *StellarContractCallDestination {
	this := StellarContractCallDestination{}
	this.DestinationType = destinationType
	this.ContractParam = contractParam
	return &this
}

// NewStellarContractCallDestinationWithDefaults instantiates a new StellarContractCallDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStellarContractCallDestinationWithDefaults() *StellarContractCallDestination {
	this := StellarContractCallDestination{}
	return &this
}

// GetDestinationType returns the DestinationType field value
func (o *StellarContractCallDestination) GetDestinationType() ContractCallDestinationType {
	if o == nil {
		var ret ContractCallDestinationType
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *StellarContractCallDestination) GetDestinationTypeOk() (*ContractCallDestinationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *StellarContractCallDestination) SetDestinationType(v ContractCallDestinationType) {
	o.DestinationType = v
}

// GetContractParam returns the ContractParam field value
func (o *StellarContractCallDestination) GetContractParam() StellarContractCallContractParam {
	if o == nil {
		var ret StellarContractCallContractParam
		return ret
	}

	return o.ContractParam
}

// GetContractParamOk returns a tuple with the ContractParam field value
// and a boolean to check if the value has been set.
func (o *StellarContractCallDestination) GetContractParamOk() (*StellarContractCallContractParam, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractParam, true
}

// SetContractParam sets field value
func (o *StellarContractCallDestination) SetContractParam(v StellarContractCallContractParam) {
	o.ContractParam = v
}

func (o StellarContractCallDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StellarContractCallDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_type"] = o.DestinationType
	toSerialize["contract_param"] = o.ContractParam
	return toSerialize, nil
}

func (o *StellarContractCallDestination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_type",
		"contract_param",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStellarContractCallDestination := _StellarContractCallDestination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStellarContractCallDestination)

	if err != nil {
		return err
	}

	*o = StellarContractCallDestination(varStellarContractCallDestination)

	return err
}

type NullableStellarContractCallDestination struct {
	value *StellarContractCallDestination
	isSet bool
}

func (v NullableStellarContractCallDestination) Get() *StellarContractCallDestination {
	return v.value
}

func (v *NullableStellarContractCallDestination) Set(val *StellarContractCallDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableStellarContractCallDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableStellarContractCallDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStellarContractCallDestination(val *StellarContractCallDestination) *NullableStellarContractCallDestination {
	return &NullableStellarContractCallDestination{value: val, isSet: true}
}

func (v NullableStellarContractCallDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStellarContractCallDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


