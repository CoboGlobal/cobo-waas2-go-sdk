/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTokenListingRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTokenListingRequestRequest{}

// CreateTokenListingRequestRequest struct for CreateTokenListingRequestRequest
type CreateTokenListingRequestRequest struct {
	WalletType WalletType `json:"wallet_type"`
	WalletSubtype WalletSubtype `json:"wallet_subtype"`
	// ID of the blockchain where the token exists
	ChainId string `json:"chain_id"`
	// Contract address of the token
	ContractAddress string `json:"contract_address"`
}

type _CreateTokenListingRequestRequest CreateTokenListingRequestRequest

// NewCreateTokenListingRequestRequest instantiates a new CreateTokenListingRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTokenListingRequestRequest(walletType WalletType, walletSubtype WalletSubtype, chainId string, contractAddress string) *CreateTokenListingRequestRequest {
	this := CreateTokenListingRequestRequest{}
	this.WalletType = walletType
	this.WalletSubtype = walletSubtype
	this.ChainId = chainId
	this.ContractAddress = contractAddress
	return &this
}

// NewCreateTokenListingRequestRequestWithDefaults instantiates a new CreateTokenListingRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTokenListingRequestRequestWithDefaults() *CreateTokenListingRequestRequest {
	this := CreateTokenListingRequestRequest{}
	return &this
}

// GetWalletType returns the WalletType field value
func (o *CreateTokenListingRequestRequest) GetWalletType() WalletType {
	if o == nil {
		var ret WalletType
		return ret
	}

	return o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value
// and a boolean to check if the value has been set.
func (o *CreateTokenListingRequestRequest) GetWalletTypeOk() (*WalletType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletType, true
}

// SetWalletType sets field value
func (o *CreateTokenListingRequestRequest) SetWalletType(v WalletType) {
	o.WalletType = v
}

// GetWalletSubtype returns the WalletSubtype field value
func (o *CreateTokenListingRequestRequest) GetWalletSubtype() WalletSubtype {
	if o == nil {
		var ret WalletSubtype
		return ret
	}

	return o.WalletSubtype
}

// GetWalletSubtypeOk returns a tuple with the WalletSubtype field value
// and a boolean to check if the value has been set.
func (o *CreateTokenListingRequestRequest) GetWalletSubtypeOk() (*WalletSubtype, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletSubtype, true
}

// SetWalletSubtype sets field value
func (o *CreateTokenListingRequestRequest) SetWalletSubtype(v WalletSubtype) {
	o.WalletSubtype = v
}

// GetChainId returns the ChainId field value
func (o *CreateTokenListingRequestRequest) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *CreateTokenListingRequestRequest) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *CreateTokenListingRequestRequest) SetChainId(v string) {
	o.ChainId = v
}

// GetContractAddress returns the ContractAddress field value
func (o *CreateTokenListingRequestRequest) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *CreateTokenListingRequestRequest) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *CreateTokenListingRequestRequest) SetContractAddress(v string) {
	o.ContractAddress = v
}

func (o CreateTokenListingRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTokenListingRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["wallet_type"] = o.WalletType
	toSerialize["wallet_subtype"] = o.WalletSubtype
	toSerialize["chain_id"] = o.ChainId
	toSerialize["contract_address"] = o.ContractAddress
	return toSerialize, nil
}

func (o *CreateTokenListingRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"wallet_type",
		"wallet_subtype",
		"chain_id",
		"contract_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTokenListingRequestRequest := _CreateTokenListingRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTokenListingRequestRequest)

	if err != nil {
		return err
	}

	*o = CreateTokenListingRequestRequest(varCreateTokenListingRequestRequest)

	return err
}

type NullableCreateTokenListingRequestRequest struct {
	value *CreateTokenListingRequestRequest
	isSet bool
}

func (v NullableCreateTokenListingRequestRequest) Get() *CreateTokenListingRequestRequest {
	return v.value
}

func (v *NullableCreateTokenListingRequestRequest) Set(val *CreateTokenListingRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTokenListingRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTokenListingRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTokenListingRequestRequest(val *CreateTokenListingRequestRequest) *NullableCreateTokenListingRequestRequest {
	return &NullableCreateTokenListingRequestRequest{value: val, isSet: true}
}

func (v NullableCreateTokenListingRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTokenListingRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


