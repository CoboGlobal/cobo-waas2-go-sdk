/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the TSSKeyGenExtra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TSSKeyGenExtra{}

// TSSKeyGenExtra struct for TSSKeyGenExtra
type TSSKeyGenExtra struct {
	Org *OrgInfo `json:"org,omitempty"`
	Project *MPCProject `json:"project,omitempty"`
	Vault *MPCVault `json:"vault,omitempty"`
	TargetKeyShareHolderGroup *KeyShareHolderGroup `json:"target_key_share_holder_group,omitempty"`
	TssRequest *TSSRequest `json:"tss_request,omitempty"`
}

// NewTSSKeyGenExtra instantiates a new TSSKeyGenExtra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTSSKeyGenExtra() *TSSKeyGenExtra {
	this := TSSKeyGenExtra{}
	return &this
}

// NewTSSKeyGenExtraWithDefaults instantiates a new TSSKeyGenExtra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTSSKeyGenExtraWithDefaults() *TSSKeyGenExtra {
	this := TSSKeyGenExtra{}
	return &this
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *TSSKeyGenExtra) GetOrg() OrgInfo {
	if o == nil || IsNil(o.Org) {
		var ret OrgInfo
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyGenExtra) GetOrgOk() (*OrgInfo, bool) {
	if o == nil || IsNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *TSSKeyGenExtra) HasOrg() bool {
	if o != nil && !IsNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given OrgInfo and assigns it to the Org field.
func (o *TSSKeyGenExtra) SetOrg(v OrgInfo) {
	o.Org = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *TSSKeyGenExtra) GetProject() MPCProject {
	if o == nil || IsNil(o.Project) {
		var ret MPCProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyGenExtra) GetProjectOk() (*MPCProject, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *TSSKeyGenExtra) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given MPCProject and assigns it to the Project field.
func (o *TSSKeyGenExtra) SetProject(v MPCProject) {
	o.Project = &v
}

// GetVault returns the Vault field value if set, zero value otherwise.
func (o *TSSKeyGenExtra) GetVault() MPCVault {
	if o == nil || IsNil(o.Vault) {
		var ret MPCVault
		return ret
	}
	return *o.Vault
}

// GetVaultOk returns a tuple with the Vault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyGenExtra) GetVaultOk() (*MPCVault, bool) {
	if o == nil || IsNil(o.Vault) {
		return nil, false
	}
	return o.Vault, true
}

// HasVault returns a boolean if a field has been set.
func (o *TSSKeyGenExtra) HasVault() bool {
	if o != nil && !IsNil(o.Vault) {
		return true
	}

	return false
}

// SetVault gets a reference to the given MPCVault and assigns it to the Vault field.
func (o *TSSKeyGenExtra) SetVault(v MPCVault) {
	o.Vault = &v
}

// GetTargetKeyShareHolderGroup returns the TargetKeyShareHolderGroup field value if set, zero value otherwise.
func (o *TSSKeyGenExtra) GetTargetKeyShareHolderGroup() KeyShareHolderGroup {
	if o == nil || IsNil(o.TargetKeyShareHolderGroup) {
		var ret KeyShareHolderGroup
		return ret
	}
	return *o.TargetKeyShareHolderGroup
}

// GetTargetKeyShareHolderGroupOk returns a tuple with the TargetKeyShareHolderGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyGenExtra) GetTargetKeyShareHolderGroupOk() (*KeyShareHolderGroup, bool) {
	if o == nil || IsNil(o.TargetKeyShareHolderGroup) {
		return nil, false
	}
	return o.TargetKeyShareHolderGroup, true
}

// HasTargetKeyShareHolderGroup returns a boolean if a field has been set.
func (o *TSSKeyGenExtra) HasTargetKeyShareHolderGroup() bool {
	if o != nil && !IsNil(o.TargetKeyShareHolderGroup) {
		return true
	}

	return false
}

// SetTargetKeyShareHolderGroup gets a reference to the given KeyShareHolderGroup and assigns it to the TargetKeyShareHolderGroup field.
func (o *TSSKeyGenExtra) SetTargetKeyShareHolderGroup(v KeyShareHolderGroup) {
	o.TargetKeyShareHolderGroup = &v
}

// GetTssRequest returns the TssRequest field value if set, zero value otherwise.
func (o *TSSKeyGenExtra) GetTssRequest() TSSRequest {
	if o == nil || IsNil(o.TssRequest) {
		var ret TSSRequest
		return ret
	}
	return *o.TssRequest
}

// GetTssRequestOk returns a tuple with the TssRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TSSKeyGenExtra) GetTssRequestOk() (*TSSRequest, bool) {
	if o == nil || IsNil(o.TssRequest) {
		return nil, false
	}
	return o.TssRequest, true
}

// HasTssRequest returns a boolean if a field has been set.
func (o *TSSKeyGenExtra) HasTssRequest() bool {
	if o != nil && !IsNil(o.TssRequest) {
		return true
	}

	return false
}

// SetTssRequest gets a reference to the given TSSRequest and assigns it to the TssRequest field.
func (o *TSSKeyGenExtra) SetTssRequest(v TSSRequest) {
	o.TssRequest = &v
}

func (o TSSKeyGenExtra) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TSSKeyGenExtra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Vault) {
		toSerialize["vault"] = o.Vault
	}
	if !IsNil(o.TargetKeyShareHolderGroup) {
		toSerialize["target_key_share_holder_group"] = o.TargetKeyShareHolderGroup
	}
	if !IsNil(o.TssRequest) {
		toSerialize["tss_request"] = o.TssRequest
	}
	return toSerialize, nil
}

type NullableTSSKeyGenExtra struct {
	value *TSSKeyGenExtra
	isSet bool
}

func (v NullableTSSKeyGenExtra) Get() *TSSKeyGenExtra {
	return v.value
}

func (v *NullableTSSKeyGenExtra) Set(val *TSSKeyGenExtra) {
	v.value = val
	v.isSet = true
}

func (v NullableTSSKeyGenExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableTSSKeyGenExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTSSKeyGenExtra(val *TSSKeyGenExtra) *NullableTSSKeyGenExtra {
	return &NullableTSSKeyGenExtra{value: val, isSet: true}
}

func (v NullableTSSKeyGenExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTSSKeyGenExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


