/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the ExchangePermissionToken201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangePermissionToken201Response{}

// ExchangePermissionToken201Response struct for ExchangePermissionToken201Response
type ExchangePermissionToken201Response struct {
	// The new Permission Access Token.
	AccessToken *string `json:"access_token,omitempty"`
	// The type of the tokens, which is Bearer.
	TokenType *string `json:"token_type,omitempty"`
	// The time in seconds in which the new Permission Access Token expires.
	ExpiresIn *int32 `json:"expires_in,omitempty"`
	// The Refresh Token, used to obtain another Org Access Token when the new Permission Access Token expires. The expiration time for Refresh Tokens is currently set to 7 days and is subject to change.
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// NewExchangePermissionToken201Response instantiates a new ExchangePermissionToken201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangePermissionToken201Response() *ExchangePermissionToken201Response {
	this := ExchangePermissionToken201Response{}
	return &this
}

// NewExchangePermissionToken201ResponseWithDefaults instantiates a new ExchangePermissionToken201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangePermissionToken201ResponseWithDefaults() *ExchangePermissionToken201Response {
	this := ExchangePermissionToken201Response{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *ExchangePermissionToken201Response) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePermissionToken201Response) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *ExchangePermissionToken201Response) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *ExchangePermissionToken201Response) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *ExchangePermissionToken201Response) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePermissionToken201Response) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *ExchangePermissionToken201Response) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *ExchangePermissionToken201Response) SetTokenType(v string) {
	o.TokenType = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *ExchangePermissionToken201Response) GetExpiresIn() int32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePermissionToken201Response) GetExpiresInOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *ExchangePermissionToken201Response) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *ExchangePermissionToken201Response) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *ExchangePermissionToken201Response) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePermissionToken201Response) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *ExchangePermissionToken201Response) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *ExchangePermissionToken201Response) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

func (o ExchangePermissionToken201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangePermissionToken201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["token_type"] = o.TokenType
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	return toSerialize, nil
}

type NullableExchangePermissionToken201Response struct {
	value *ExchangePermissionToken201Response
	isSet bool
}

func (v NullableExchangePermissionToken201Response) Get() *ExchangePermissionToken201Response {
	return v.value
}

func (v *NullableExchangePermissionToken201Response) Set(val *ExchangePermissionToken201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangePermissionToken201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangePermissionToken201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangePermissionToken201Response(val *ExchangePermissionToken201Response) *NullableExchangePermissionToken201Response {
	return &NullableExchangePermissionToken201Response{value: val, isSet: true}
}

func (v NullableExchangePermissionToken201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangePermissionToken201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


