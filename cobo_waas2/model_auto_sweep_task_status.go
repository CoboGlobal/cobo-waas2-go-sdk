/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"fmt"
)

// AutoSweepTaskStatus Auto-sweep task status: - `Submitted`: The auto-sweep task has been submitted. - `TransactionCreated`: The auto-sweep task triggered one or more token sweeping transactions. 
type AutoSweepTaskStatus string

// List of AutoSweepTaskStatus
const (
	AUTOSWEEPTASKSTATUS_SUBMITTED AutoSweepTaskStatus = "Submitted"
	AUTOSWEEPTASKSTATUS_TRANSACTION_CREATED AutoSweepTaskStatus = "TransactionCreated"
)

// All allowed values of AutoSweepTaskStatus enum
var AllowedAutoSweepTaskStatusEnumValues = []AutoSweepTaskStatus{
	"Submitted",
	"TransactionCreated",
}

func (v *AutoSweepTaskStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AutoSweepTaskStatus(value)
	for _, existing := range AllowedAutoSweepTaskStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}
	*v = AutoSweepTaskStatus("unknown")
	return nil
}

// NewAutoSweepTaskStatusFromValue returns a pointer to a valid AutoSweepTaskStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAutoSweepTaskStatusFromValue(v string) (*AutoSweepTaskStatus, error) {
	ev := AutoSweepTaskStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AutoSweepTaskStatus: valid values are %v", v, AllowedAutoSweepTaskStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AutoSweepTaskStatus) IsValid() bool {
	for _, existing := range AllowedAutoSweepTaskStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AutoSweepTaskStatus value
func (v AutoSweepTaskStatus) Ptr() *AutoSweepTaskStatus {
	return &v
}

type NullableAutoSweepTaskStatus struct {
	value *AutoSweepTaskStatus
	isSet bool
}

func (v NullableAutoSweepTaskStatus) Get() *AutoSweepTaskStatus {
	return v.value
}

func (v *NullableAutoSweepTaskStatus) Set(val *AutoSweepTaskStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoSweepTaskStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoSweepTaskStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoSweepTaskStatus(val *AutoSweepTaskStatus) *NullableAutoSweepTaskStatus {
	return &NullableAutoSweepTaskStatus{value: val, isSet: true}
}

func (v NullableAutoSweepTaskStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoSweepTaskStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

