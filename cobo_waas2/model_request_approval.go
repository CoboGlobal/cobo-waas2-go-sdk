/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestApproval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestApproval{}

// RequestApproval The information about a approval request.
type RequestApproval struct {
	// The unique ID of the approval workflow.
	OperationId string `json:"operation_id"`
	// An identifier provided by you to track this request.
	RequestId string `json:"request_id"`
	// The email of the user who requested the approval.
	InitiatorEmail string `json:"initiator_email"`
	Fields []AppWorkflowField `json:"fields"`
	// The template of a Cobo Guard message. Please connect [help@cobo.com](mailto:help@cobo.com) to get the template content.
	GuardTemplate string `json:"guard_template"`
}

type _RequestApproval RequestApproval

// NewRequestApproval instantiates a new RequestApproval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestApproval(operationId string, requestId string, initiatorEmail string, fields []AppWorkflowField, guardTemplate string) *RequestApproval {
	this := RequestApproval{}
	this.OperationId = operationId
	this.RequestId = requestId
	this.InitiatorEmail = initiatorEmail
	this.Fields = fields
	this.GuardTemplate = guardTemplate
	return &this
}

// NewRequestApprovalWithDefaults instantiates a new RequestApproval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestApprovalWithDefaults() *RequestApproval {
	this := RequestApproval{}
	return &this
}

// GetOperationId returns the OperationId field value
func (o *RequestApproval) GetOperationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value
// and a boolean to check if the value has been set.
func (o *RequestApproval) GetOperationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationId, true
}

// SetOperationId sets field value
func (o *RequestApproval) SetOperationId(v string) {
	o.OperationId = v
}

// GetRequestId returns the RequestId field value
func (o *RequestApproval) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *RequestApproval) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *RequestApproval) SetRequestId(v string) {
	o.RequestId = v
}

// GetInitiatorEmail returns the InitiatorEmail field value
func (o *RequestApproval) GetInitiatorEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitiatorEmail
}

// GetInitiatorEmailOk returns a tuple with the InitiatorEmail field value
// and a boolean to check if the value has been set.
func (o *RequestApproval) GetInitiatorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiatorEmail, true
}

// SetInitiatorEmail sets field value
func (o *RequestApproval) SetInitiatorEmail(v string) {
	o.InitiatorEmail = v
}

// GetFields returns the Fields field value
func (o *RequestApproval) GetFields() []AppWorkflowField {
	if o == nil {
		var ret []AppWorkflowField
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *RequestApproval) GetFieldsOk() ([]AppWorkflowField, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fields, true
}

// SetFields sets field value
func (o *RequestApproval) SetFields(v []AppWorkflowField) {
	o.Fields = v
}

// GetGuardTemplate returns the GuardTemplate field value
func (o *RequestApproval) GetGuardTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GuardTemplate
}

// GetGuardTemplateOk returns a tuple with the GuardTemplate field value
// and a boolean to check if the value has been set.
func (o *RequestApproval) GetGuardTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GuardTemplate, true
}

// SetGuardTemplate sets field value
func (o *RequestApproval) SetGuardTemplate(v string) {
	o.GuardTemplate = v
}

func (o RequestApproval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestApproval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation_id"] = o.OperationId
	toSerialize["request_id"] = o.RequestId
	toSerialize["initiator_email"] = o.InitiatorEmail
	toSerialize["fields"] = o.Fields
	toSerialize["guard_template"] = o.GuardTemplate
	return toSerialize, nil
}

func (o *RequestApproval) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation_id",
		"request_id",
		"initiator_email",
		"fields",
		"guard_template",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestApproval := _RequestApproval{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestApproval)

	if err != nil {
		return err
	}

	*o = RequestApproval(varRequestApproval)

	return err
}

type NullableRequestApproval struct {
	value *RequestApproval
	isSet bool
}

func (v NullableRequestApproval) Get() *RequestApproval {
	return v.value
}

func (v *NullableRequestApproval) Set(val *RequestApproval) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestApproval(val *RequestApproval) *NullableRequestApproval {
	return &NullableRequestApproval{value: val, isSet: true}
}

func (v NullableRequestApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


