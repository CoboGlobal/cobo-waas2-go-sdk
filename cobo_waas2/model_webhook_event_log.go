/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookEventLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEventLog{}

// WebhookEventLog The webhook event log.
type WebhookEventLog struct {
	// The event log ID.
	Id string `json:"id"`
	// The time when the event type was triggered, in Unix timestamp format (milliseconds). - The value remains unchanged across retries. - The default webhook timeout is 2 seconds. 
	CreatedTimestamp int64 `json:"created_timestamp"`
	// The request headers of the webhook event.
	RequestHeaders map[string]interface{} `json:"request_headers"`
	RequestBody WebhookEvent `json:"request_body"`
	// The response body of the webhook event.
	ResponseBody *string `json:"response_body,omitempty"`
	// The response status code of the webhook event.
	ResponseStatusCode *int32 `json:"response_status_code,omitempty"`
	// The response time of the webhook event, in milliseconds.
	ResponseTime *int32 `json:"response_time,omitempty"`
	// Whether the webhook event has been successfully delivered.
	Success bool `json:"success"`
	// The reason why the webhook event fails to be delivered.
	FailureReason *string `json:"failure_reason,omitempty"`
}

type _WebhookEventLog WebhookEventLog

// NewWebhookEventLog instantiates a new WebhookEventLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEventLog(id string, createdTimestamp int64, requestHeaders map[string]interface{}, requestBody WebhookEvent, success bool) *WebhookEventLog {
	this := WebhookEventLog{}
	this.Id = id
	this.CreatedTimestamp = createdTimestamp
	this.RequestHeaders = requestHeaders
	this.RequestBody = requestBody
	this.Success = success
	return &this
}

// NewWebhookEventLogWithDefaults instantiates a new WebhookEventLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEventLogWithDefaults() *WebhookEventLog {
	this := WebhookEventLog{}
	return &this
}

// GetId returns the Id field value
func (o *WebhookEventLog) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookEventLog) SetId(v string) {
	o.Id = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *WebhookEventLog) GetCreatedTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetCreatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *WebhookEventLog) SetCreatedTimestamp(v int64) {
	o.CreatedTimestamp = v
}

// GetRequestHeaders returns the RequestHeaders field value
func (o *WebhookEventLog) GetRequestHeaders() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetRequestHeadersOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.RequestHeaders, true
}

// SetRequestHeaders sets field value
func (o *WebhookEventLog) SetRequestHeaders(v map[string]interface{}) {
	o.RequestHeaders = v
}

// GetRequestBody returns the RequestBody field value
func (o *WebhookEventLog) GetRequestBody() WebhookEvent {
	if o == nil {
		var ret WebhookEvent
		return ret
	}

	return o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetRequestBodyOk() (*WebhookEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestBody, true
}

// SetRequestBody sets field value
func (o *WebhookEventLog) SetRequestBody(v WebhookEvent) {
	o.RequestBody = v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *WebhookEventLog) GetResponseBody() string {
	if o == nil || IsNil(o.ResponseBody) {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetResponseBodyOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseBody) {
		return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *WebhookEventLog) HasResponseBody() bool {
	if o != nil && !IsNil(o.ResponseBody) {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *WebhookEventLog) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *WebhookEventLog) GetResponseStatusCode() int32 {
	if o == nil || IsNil(o.ResponseStatusCode) {
		var ret int32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseStatusCode) {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *WebhookEventLog) HasResponseStatusCode() bool {
	if o != nil && !IsNil(o.ResponseStatusCode) {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given int32 and assigns it to the ResponseStatusCode field.
func (o *WebhookEventLog) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *WebhookEventLog) GetResponseTime() int32 {
	if o == nil || IsNil(o.ResponseTime) {
		var ret int32
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetResponseTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *WebhookEventLog) HasResponseTime() bool {
	if o != nil && !IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given int32 and assigns it to the ResponseTime field.
func (o *WebhookEventLog) SetResponseTime(v int32) {
	o.ResponseTime = &v
}

// GetSuccess returns the Success field value
func (o *WebhookEventLog) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *WebhookEventLog) SetSuccess(v bool) {
	o.Success = v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *WebhookEventLog) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventLog) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *WebhookEventLog) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *WebhookEventLog) SetFailureReason(v string) {
	o.FailureReason = &v
}

func (o WebhookEventLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEventLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_timestamp"] = o.CreatedTimestamp
	toSerialize["request_headers"] = o.RequestHeaders
	toSerialize["request_body"] = o.RequestBody
	if !IsNil(o.ResponseBody) {
		toSerialize["response_body"] = o.ResponseBody
	}
	if !IsNil(o.ResponseStatusCode) {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	if !IsNil(o.ResponseTime) {
		toSerialize["response_time"] = o.ResponseTime
	}
	toSerialize["success"] = o.Success
	if !IsNil(o.FailureReason) {
		toSerialize["failure_reason"] = o.FailureReason
	}
	return toSerialize, nil
}

func (o *WebhookEventLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_timestamp",
		"request_headers",
		"request_body",
		"success",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEventLog := _WebhookEventLog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEventLog)

	if err != nil {
		return err
	}

	*o = WebhookEventLog(varWebhookEventLog)

	return err
}

type NullableWebhookEventLog struct {
	value *WebhookEventLog
	isSet bool
}

func (v NullableWebhookEventLog) Get() *WebhookEventLog {
	return v.value
}

func (v *NullableWebhookEventLog) Set(val *WebhookEventLog) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEventLog) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEventLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEventLog(val *WebhookEventLog) *NullableWebhookEventLog {
	return &NullableWebhookEventLog{value: val, isSet: true}
}

func (v NullableWebhookEventLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEventLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


