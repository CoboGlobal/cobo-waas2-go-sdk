/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteCryptoAddress201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCryptoAddress201Response{}

// DeleteCryptoAddress201Response struct for DeleteCryptoAddress201Response
type DeleteCryptoAddress201Response struct {
	// The crypto address ID.
	CryptoAddressId string `json:"crypto_address_id"`
}

type _DeleteCryptoAddress201Response DeleteCryptoAddress201Response

// NewDeleteCryptoAddress201Response instantiates a new DeleteCryptoAddress201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCryptoAddress201Response(cryptoAddressId string) *DeleteCryptoAddress201Response {
	this := DeleteCryptoAddress201Response{}
	this.CryptoAddressId = cryptoAddressId
	return &this
}

// NewDeleteCryptoAddress201ResponseWithDefaults instantiates a new DeleteCryptoAddress201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCryptoAddress201ResponseWithDefaults() *DeleteCryptoAddress201Response {
	this := DeleteCryptoAddress201Response{}
	return &this
}

// GetCryptoAddressId returns the CryptoAddressId field value
func (o *DeleteCryptoAddress201Response) GetCryptoAddressId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CryptoAddressId
}

// GetCryptoAddressIdOk returns a tuple with the CryptoAddressId field value
// and a boolean to check if the value has been set.
func (o *DeleteCryptoAddress201Response) GetCryptoAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CryptoAddressId, true
}

// SetCryptoAddressId sets field value
func (o *DeleteCryptoAddress201Response) SetCryptoAddressId(v string) {
	o.CryptoAddressId = v
}

func (o DeleteCryptoAddress201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCryptoAddress201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["crypto_address_id"] = o.CryptoAddressId
	return toSerialize, nil
}

func (o *DeleteCryptoAddress201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"crypto_address_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteCryptoAddress201Response := _DeleteCryptoAddress201Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteCryptoAddress201Response)

	if err != nil {
		return err
	}

	*o = DeleteCryptoAddress201Response(varDeleteCryptoAddress201Response)

	return err
}

type NullableDeleteCryptoAddress201Response struct {
	value *DeleteCryptoAddress201Response
	isSet bool
}

func (v NullableDeleteCryptoAddress201Response) Get() *DeleteCryptoAddress201Response {
	return v.value
}

func (v *NullableDeleteCryptoAddress201Response) Set(val *DeleteCryptoAddress201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCryptoAddress201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCryptoAddress201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCryptoAddress201Response(val *DeleteCryptoAddress201Response) *NullableDeleteCryptoAddress201Response {
	return &NullableDeleteCryptoAddress201Response{value: val, isSet: true}
}

func (v NullableDeleteCryptoAddress201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCryptoAddress201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


