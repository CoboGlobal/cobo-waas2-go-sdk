/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenizationTokenPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizationTokenPermissionsResponse{}

// TokenizationTokenPermissionsResponse struct for TokenizationTokenPermissionsResponse
type TokenizationTokenPermissionsResponse struct {
	// List of available token permissions.
	Permissions []TokenizationTokenPermission `json:"permissions"`
	// Total number of permissions.
	TotalCount int32 `json:"total_count"`
}

type _TokenizationTokenPermissionsResponse TokenizationTokenPermissionsResponse

// NewTokenizationTokenPermissionsResponse instantiates a new TokenizationTokenPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationTokenPermissionsResponse(permissions []TokenizationTokenPermission, totalCount int32) *TokenizationTokenPermissionsResponse {
	this := TokenizationTokenPermissionsResponse{}
	this.Permissions = permissions
	this.TotalCount = totalCount
	return &this
}

// NewTokenizationTokenPermissionsResponseWithDefaults instantiates a new TokenizationTokenPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationTokenPermissionsResponseWithDefaults() *TokenizationTokenPermissionsResponse {
	this := TokenizationTokenPermissionsResponse{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *TokenizationTokenPermissionsResponse) GetPermissions() []TokenizationTokenPermission {
	if o == nil {
		var ret []TokenizationTokenPermission
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *TokenizationTokenPermissionsResponse) GetPermissionsOk() ([]TokenizationTokenPermission, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *TokenizationTokenPermissionsResponse) SetPermissions(v []TokenizationTokenPermission) {
	o.Permissions = v
}

// GetTotalCount returns the TotalCount field value
func (o *TokenizationTokenPermissionsResponse) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *TokenizationTokenPermissionsResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *TokenizationTokenPermissionsResponse) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o TokenizationTokenPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationTokenPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["permissions"] = o.Permissions
	toSerialize["total_count"] = o.TotalCount
	return toSerialize, nil
}

func (o *TokenizationTokenPermissionsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"permissions",
		"total_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizationTokenPermissionsResponse := _TokenizationTokenPermissionsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenizationTokenPermissionsResponse)

	if err != nil {
		return err
	}

	*o = TokenizationTokenPermissionsResponse(varTokenizationTokenPermissionsResponse)

	return err
}

type NullableTokenizationTokenPermissionsResponse struct {
	value *TokenizationTokenPermissionsResponse
	isSet bool
}

func (v NullableTokenizationTokenPermissionsResponse) Get() *TokenizationTokenPermissionsResponse {
	return v.value
}

func (v *NullableTokenizationTokenPermissionsResponse) Set(val *TokenizationTokenPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationTokenPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationTokenPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationTokenPermissionsResponse(val *TokenizationTokenPermissionsResponse) *NullableTokenizationTokenPermissionsResponse {
	return &NullableTokenizationTokenPermissionsResponse{value: val, isSet: true}
}

func (v NullableTokenizationTokenPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationTokenPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


