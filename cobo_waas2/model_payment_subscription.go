/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentSubscription{}

// PaymentSubscription struct for PaymentSubscription
type PaymentSubscription struct {
	// The plan id in cobo.
	PlanId string `json:"plan_id"`
	// The subscription id in cobo.
	SubscriptionId string `json:"subscription_id"`
	// The merchant id in cobo.
	MerchantId string `json:"merchant_id"`
	// The merchant address in cobo.
	MerchantAddress string `json:"merchant_address"`
	// The user address in subscription.
	UserAddress string `json:"user_address"`
	// The token_id in subscription.
	TokenId string `json:"token_id"`
	// The amount in subscription.
	Amount string `json:"amount"`
	// The subscription start timestamp.
	StartTime int32 `json:"start_time"`
	// The subscription expired timestamp.
	ExpirationTime int32 `json:"expiration_time"`
	// The subscription charge times.
	ChargesMade int32 `json:"charges_made"`
	PeriodType PaymentSubscriptionPeriodType `json:"period_type"`
	Periods int32 `json:"periods"`
	// The subscription charge interval.
	Interval int32 `json:"interval"`
	Status PaymentSubscriptionStatus `json:"status"`
	// The created time of the subscription, represented as a UNIX timestamp in seconds.
	CreatedTimestamp int32 `json:"created_timestamp"`
	// The updated time of the subscription, represented as a UNIX timestamp in seconds.
	UpdatedTimestamp int32 `json:"updated_timestamp"`
}

type _PaymentSubscription PaymentSubscription

// NewPaymentSubscription instantiates a new PaymentSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSubscription(planId string, subscriptionId string, merchantId string, merchantAddress string, userAddress string, tokenId string, amount string, startTime int32, expirationTime int32, chargesMade int32, periodType PaymentSubscriptionPeriodType, periods int32, interval int32, status PaymentSubscriptionStatus, createdTimestamp int32, updatedTimestamp int32) *PaymentSubscription {
	this := PaymentSubscription{}
	this.PlanId = planId
	this.SubscriptionId = subscriptionId
	this.MerchantId = merchantId
	this.MerchantAddress = merchantAddress
	this.UserAddress = userAddress
	this.TokenId = tokenId
	this.Amount = amount
	this.StartTime = startTime
	this.ExpirationTime = expirationTime
	this.ChargesMade = chargesMade
	this.PeriodType = periodType
	this.Periods = periods
	this.Interval = interval
	this.Status = status
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	return &this
}

// NewPaymentSubscriptionWithDefaults instantiates a new PaymentSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentSubscriptionWithDefaults() *PaymentSubscription {
	this := PaymentSubscription{}
	return &this
}

// GetPlanId returns the PlanId field value
func (o *PaymentSubscription) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *PaymentSubscription) SetPlanId(v string) {
	o.PlanId = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *PaymentSubscription) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *PaymentSubscription) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetMerchantId returns the MerchantId field value
func (o *PaymentSubscription) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *PaymentSubscription) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetMerchantAddress returns the MerchantAddress field value
func (o *PaymentSubscription) GetMerchantAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantAddress
}

// GetMerchantAddressOk returns a tuple with the MerchantAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetMerchantAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantAddress, true
}

// SetMerchantAddress sets field value
func (o *PaymentSubscription) SetMerchantAddress(v string) {
	o.MerchantAddress = v
}

// GetUserAddress returns the UserAddress field value
func (o *PaymentSubscription) GetUserAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAddress
}

// GetUserAddressOk returns a tuple with the UserAddress field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetUserAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAddress, true
}

// SetUserAddress sets field value
func (o *PaymentSubscription) SetUserAddress(v string) {
	o.UserAddress = v
}

// GetTokenId returns the TokenId field value
func (o *PaymentSubscription) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *PaymentSubscription) SetTokenId(v string) {
	o.TokenId = v
}

// GetAmount returns the Amount field value
func (o *PaymentSubscription) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PaymentSubscription) SetAmount(v string) {
	o.Amount = v
}

// GetStartTime returns the StartTime field value
func (o *PaymentSubscription) GetStartTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetStartTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *PaymentSubscription) SetStartTime(v int32) {
	o.StartTime = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *PaymentSubscription) GetExpirationTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetExpirationTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *PaymentSubscription) SetExpirationTime(v int32) {
	o.ExpirationTime = v
}

// GetChargesMade returns the ChargesMade field value
func (o *PaymentSubscription) GetChargesMade() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChargesMade
}

// GetChargesMadeOk returns a tuple with the ChargesMade field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetChargesMadeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargesMade, true
}

// SetChargesMade sets field value
func (o *PaymentSubscription) SetChargesMade(v int32) {
	o.ChargesMade = v
}

// GetPeriodType returns the PeriodType field value
func (o *PaymentSubscription) GetPeriodType() PaymentSubscriptionPeriodType {
	if o == nil {
		var ret PaymentSubscriptionPeriodType
		return ret
	}

	return o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetPeriodTypeOk() (*PaymentSubscriptionPeriodType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodType, true
}

// SetPeriodType sets field value
func (o *PaymentSubscription) SetPeriodType(v PaymentSubscriptionPeriodType) {
	o.PeriodType = v
}

// GetPeriods returns the Periods field value
func (o *PaymentSubscription) GetPeriods() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetPeriodsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Periods, true
}

// SetPeriods sets field value
func (o *PaymentSubscription) SetPeriods(v int32) {
	o.Periods = v
}

// GetInterval returns the Interval field value
func (o *PaymentSubscription) GetInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *PaymentSubscription) SetInterval(v int32) {
	o.Interval = v
}

// GetStatus returns the Status field value
func (o *PaymentSubscription) GetStatus() PaymentSubscriptionStatus {
	if o == nil {
		var ret PaymentSubscriptionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetStatusOk() (*PaymentSubscriptionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PaymentSubscription) SetStatus(v PaymentSubscriptionStatus) {
	o.Status = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *PaymentSubscription) GetCreatedTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetCreatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *PaymentSubscription) SetCreatedTimestamp(v int32) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *PaymentSubscription) GetUpdatedTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *PaymentSubscription) GetUpdatedTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *PaymentSubscription) SetUpdatedTimestamp(v int32) {
	o.UpdatedTimestamp = v
}

func (o PaymentSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plan_id"] = o.PlanId
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["merchant_id"] = o.MerchantId
	toSerialize["merchant_address"] = o.MerchantAddress
	toSerialize["user_address"] = o.UserAddress
	toSerialize["token_id"] = o.TokenId
	toSerialize["amount"] = o.Amount
	toSerialize["start_time"] = o.StartTime
	toSerialize["expiration_time"] = o.ExpirationTime
	toSerialize["charges_made"] = o.ChargesMade
	toSerialize["period_type"] = o.PeriodType
	toSerialize["periods"] = o.Periods
	toSerialize["interval"] = o.Interval
	toSerialize["status"] = o.Status
	toSerialize["created_timestamp"] = o.CreatedTimestamp
	toSerialize["updated_timestamp"] = o.UpdatedTimestamp
	return toSerialize, nil
}

func (o *PaymentSubscription) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"plan_id",
		"subscription_id",
		"merchant_id",
		"merchant_address",
		"user_address",
		"token_id",
		"amount",
		"start_time",
		"expiration_time",
		"charges_made",
		"period_type",
		"periods",
		"interval",
		"status",
		"created_timestamp",
		"updated_timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentSubscription := _PaymentSubscription{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentSubscription)

	if err != nil {
		return err
	}

	*o = PaymentSubscription(varPaymentSubscription)

	return err
}

type NullablePaymentSubscription struct {
	value *PaymentSubscription
	isSet bool
}

func (v NullablePaymentSubscription) Get() *PaymentSubscription {
	return v.value
}

func (v *NullablePaymentSubscription) Set(val *PaymentSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSubscription(val *PaymentSubscription) *NullablePaymentSubscription {
	return &NullablePaymentSubscription{value: val, isSet: true}
}

func (v NullablePaymentSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


