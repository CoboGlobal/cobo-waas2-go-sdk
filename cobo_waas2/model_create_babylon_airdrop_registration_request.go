/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the CreateBabylonAirdropRegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBabylonAirdropRegistrationRequest{}

// CreateBabylonAirdropRegistrationRequest struct for CreateBabylonAirdropRegistrationRequest
type CreateBabylonAirdropRegistrationRequest struct {
	BtcAddress *StakingSource `json:"btc_address,omitempty"`
	BabylonAddress *StakingSource `json:"babylon_address,omitempty"`
}

// NewCreateBabylonAirdropRegistrationRequest instantiates a new CreateBabylonAirdropRegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBabylonAirdropRegistrationRequest() *CreateBabylonAirdropRegistrationRequest {
	this := CreateBabylonAirdropRegistrationRequest{}
	return &this
}

// NewCreateBabylonAirdropRegistrationRequestWithDefaults instantiates a new CreateBabylonAirdropRegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBabylonAirdropRegistrationRequestWithDefaults() *CreateBabylonAirdropRegistrationRequest {
	this := CreateBabylonAirdropRegistrationRequest{}
	return &this
}

// GetBtcAddress returns the BtcAddress field value if set, zero value otherwise.
func (o *CreateBabylonAirdropRegistrationRequest) GetBtcAddress() StakingSource {
	if o == nil || IsNil(o.BtcAddress) {
		var ret StakingSource
		return ret
	}
	return *o.BtcAddress
}

// GetBtcAddressOk returns a tuple with the BtcAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBabylonAirdropRegistrationRequest) GetBtcAddressOk() (*StakingSource, bool) {
	if o == nil || IsNil(o.BtcAddress) {
		return nil, false
	}
	return o.BtcAddress, true
}

// HasBtcAddress returns a boolean if a field has been set.
func (o *CreateBabylonAirdropRegistrationRequest) HasBtcAddress() bool {
	if o != nil && !IsNil(o.BtcAddress) {
		return true
	}

	return false
}

// SetBtcAddress gets a reference to the given StakingSource and assigns it to the BtcAddress field.
func (o *CreateBabylonAirdropRegistrationRequest) SetBtcAddress(v StakingSource) {
	o.BtcAddress = &v
}

// GetBabylonAddress returns the BabylonAddress field value if set, zero value otherwise.
func (o *CreateBabylonAirdropRegistrationRequest) GetBabylonAddress() StakingSource {
	if o == nil || IsNil(o.BabylonAddress) {
		var ret StakingSource
		return ret
	}
	return *o.BabylonAddress
}

// GetBabylonAddressOk returns a tuple with the BabylonAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBabylonAirdropRegistrationRequest) GetBabylonAddressOk() (*StakingSource, bool) {
	if o == nil || IsNil(o.BabylonAddress) {
		return nil, false
	}
	return o.BabylonAddress, true
}

// HasBabylonAddress returns a boolean if a field has been set.
func (o *CreateBabylonAirdropRegistrationRequest) HasBabylonAddress() bool {
	if o != nil && !IsNil(o.BabylonAddress) {
		return true
	}

	return false
}

// SetBabylonAddress gets a reference to the given StakingSource and assigns it to the BabylonAddress field.
func (o *CreateBabylonAirdropRegistrationRequest) SetBabylonAddress(v StakingSource) {
	o.BabylonAddress = &v
}

func (o CreateBabylonAirdropRegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBabylonAirdropRegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BtcAddress) {
		toSerialize["btc_address"] = o.BtcAddress
	}
	if !IsNil(o.BabylonAddress) {
		toSerialize["babylon_address"] = o.BabylonAddress
	}
	return toSerialize, nil
}

type NullableCreateBabylonAirdropRegistrationRequest struct {
	value *CreateBabylonAirdropRegistrationRequest
	isSet bool
}

func (v NullableCreateBabylonAirdropRegistrationRequest) Get() *CreateBabylonAirdropRegistrationRequest {
	return v.value
}

func (v *NullableCreateBabylonAirdropRegistrationRequest) Set(val *CreateBabylonAirdropRegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBabylonAirdropRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBabylonAirdropRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBabylonAirdropRegistrationRequest(val *CreateBabylonAirdropRegistrationRequest) *NullableCreateBabylonAirdropRegistrationRequest {
	return &NullableCreateBabylonAirdropRegistrationRequest{value: val, isSet: true}
}

func (v NullableCreateBabylonAirdropRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBabylonAirdropRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


