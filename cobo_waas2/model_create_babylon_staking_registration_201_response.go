/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the CreateBabylonStakingRegistration201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBabylonStakingRegistration201Response{}

// CreateBabylonStakingRegistration201Response struct for CreateBabylonStakingRegistration201Response
type CreateBabylonStakingRegistration201Response struct {
	// The registration ID, a unique identifier for tracking the Babylon Phase-2 registration request. You can use it with the [Get Babylon Phase-2 registration details operation](https://www.cobo.com/developers/v2/api-references/stakings/get-babylon-phase-2-registration-details) to check the registration status.
	RegistrationId *string `json:"registration_id,omitempty"`
}

// NewCreateBabylonStakingRegistration201Response instantiates a new CreateBabylonStakingRegistration201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBabylonStakingRegistration201Response() *CreateBabylonStakingRegistration201Response {
	this := CreateBabylonStakingRegistration201Response{}
	return &this
}

// NewCreateBabylonStakingRegistration201ResponseWithDefaults instantiates a new CreateBabylonStakingRegistration201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBabylonStakingRegistration201ResponseWithDefaults() *CreateBabylonStakingRegistration201Response {
	this := CreateBabylonStakingRegistration201Response{}
	return &this
}

// GetRegistrationId returns the RegistrationId field value if set, zero value otherwise.
func (o *CreateBabylonStakingRegistration201Response) GetRegistrationId() string {
	if o == nil || IsNil(o.RegistrationId) {
		var ret string
		return ret
	}
	return *o.RegistrationId
}

// GetRegistrationIdOk returns a tuple with the RegistrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBabylonStakingRegistration201Response) GetRegistrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationId) {
		return nil, false
	}
	return o.RegistrationId, true
}

// HasRegistrationId returns a boolean if a field has been set.
func (o *CreateBabylonStakingRegistration201Response) HasRegistrationId() bool {
	if o != nil && !IsNil(o.RegistrationId) {
		return true
	}

	return false
}

// SetRegistrationId gets a reference to the given string and assigns it to the RegistrationId field.
func (o *CreateBabylonStakingRegistration201Response) SetRegistrationId(v string) {
	o.RegistrationId = &v
}

func (o CreateBabylonStakingRegistration201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBabylonStakingRegistration201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegistrationId) {
		toSerialize["registration_id"] = o.RegistrationId
	}
	return toSerialize, nil
}

type NullableCreateBabylonStakingRegistration201Response struct {
	value *CreateBabylonStakingRegistration201Response
	isSet bool
}

func (v NullableCreateBabylonStakingRegistration201Response) Get() *CreateBabylonStakingRegistration201Response {
	return v.value
}

func (v *NullableCreateBabylonStakingRegistration201Response) Set(val *CreateBabylonStakingRegistration201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBabylonStakingRegistration201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBabylonStakingRegistration201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBabylonStakingRegistration201Response(val *CreateBabylonStakingRegistration201Response) *NullableCreateBabylonStakingRegistration201Response {
	return &NullableCreateBabylonStakingRegistration201Response{value: val, isSet: true}
}

func (v NullableCreateBabylonStakingRegistration201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBabylonStakingRegistration201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


