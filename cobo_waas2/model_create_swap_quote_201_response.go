/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSwapQuote201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSwapQuote201Response{}

// CreateSwapQuote201Response struct for CreateSwapQuote201Response
type CreateSwapQuote201Response struct {
	// The amount of tokens to pay.
	PayAmount string `json:"pay_amount"`
	// The amount of tokens to receive.
	ReceiveAmount string `json:"receive_amount"`
	// The amount of tokens to pay for fee.
	FeeAmount string `json:"fee_amount"`
	// The minimum amount of tokens to pay.
	MinPayAmount *string `json:"min_pay_amount,omitempty"`
	// The maximum amount of tokens to pay.
	MaxPayAmount *string `json:"max_pay_amount,omitempty"`
	// The minimum amount of tokens to receive.
	MinReceiveAmount *string `json:"min_receive_amount,omitempty"`
	// The maximum amount of tokens to receive.
	MaxReceiveAmount *string `json:"max_receive_amount,omitempty"`
	// The time when the quote will expire, in Unix timestamp format, measured in milliseconds.
	QuoteExpiredTimestamp int32 `json:"quote_expired_timestamp"`
	// The unique identifier of this quote.
	QuoteId string `json:"quote_id"`
}

type _CreateSwapQuote201Response CreateSwapQuote201Response

// NewCreateSwapQuote201Response instantiates a new CreateSwapQuote201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSwapQuote201Response(payAmount string, receiveAmount string, feeAmount string, quoteExpiredTimestamp int32, quoteId string) *CreateSwapQuote201Response {
	this := CreateSwapQuote201Response{}
	this.PayAmount = payAmount
	this.ReceiveAmount = receiveAmount
	this.FeeAmount = feeAmount
	this.QuoteExpiredTimestamp = quoteExpiredTimestamp
	this.QuoteId = quoteId
	return &this
}

// NewCreateSwapQuote201ResponseWithDefaults instantiates a new CreateSwapQuote201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSwapQuote201ResponseWithDefaults() *CreateSwapQuote201Response {
	this := CreateSwapQuote201Response{}
	return &this
}

// GetPayAmount returns the PayAmount field value
func (o *CreateSwapQuote201Response) GetPayAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayAmount
}

// GetPayAmountOk returns a tuple with the PayAmount field value
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetPayAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayAmount, true
}

// SetPayAmount sets field value
func (o *CreateSwapQuote201Response) SetPayAmount(v string) {
	o.PayAmount = v
}

// GetReceiveAmount returns the ReceiveAmount field value
func (o *CreateSwapQuote201Response) GetReceiveAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiveAmount
}

// GetReceiveAmountOk returns a tuple with the ReceiveAmount field value
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetReceiveAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiveAmount, true
}

// SetReceiveAmount sets field value
func (o *CreateSwapQuote201Response) SetReceiveAmount(v string) {
	o.ReceiveAmount = v
}

// GetFeeAmount returns the FeeAmount field value
func (o *CreateSwapQuote201Response) GetFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeAmount, true
}

// SetFeeAmount sets field value
func (o *CreateSwapQuote201Response) SetFeeAmount(v string) {
	o.FeeAmount = v
}

// GetMinPayAmount returns the MinPayAmount field value if set, zero value otherwise.
func (o *CreateSwapQuote201Response) GetMinPayAmount() string {
	if o == nil || IsNil(o.MinPayAmount) {
		var ret string
		return ret
	}
	return *o.MinPayAmount
}

// GetMinPayAmountOk returns a tuple with the MinPayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetMinPayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MinPayAmount) {
		return nil, false
	}
	return o.MinPayAmount, true
}

// HasMinPayAmount returns a boolean if a field has been set.
func (o *CreateSwapQuote201Response) HasMinPayAmount() bool {
	if o != nil && !IsNil(o.MinPayAmount) {
		return true
	}

	return false
}

// SetMinPayAmount gets a reference to the given string and assigns it to the MinPayAmount field.
func (o *CreateSwapQuote201Response) SetMinPayAmount(v string) {
	o.MinPayAmount = &v
}

// GetMaxPayAmount returns the MaxPayAmount field value if set, zero value otherwise.
func (o *CreateSwapQuote201Response) GetMaxPayAmount() string {
	if o == nil || IsNil(o.MaxPayAmount) {
		var ret string
		return ret
	}
	return *o.MaxPayAmount
}

// GetMaxPayAmountOk returns a tuple with the MaxPayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetMaxPayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MaxPayAmount) {
		return nil, false
	}
	return o.MaxPayAmount, true
}

// HasMaxPayAmount returns a boolean if a field has been set.
func (o *CreateSwapQuote201Response) HasMaxPayAmount() bool {
	if o != nil && !IsNil(o.MaxPayAmount) {
		return true
	}

	return false
}

// SetMaxPayAmount gets a reference to the given string and assigns it to the MaxPayAmount field.
func (o *CreateSwapQuote201Response) SetMaxPayAmount(v string) {
	o.MaxPayAmount = &v
}

// GetMinReceiveAmount returns the MinReceiveAmount field value if set, zero value otherwise.
func (o *CreateSwapQuote201Response) GetMinReceiveAmount() string {
	if o == nil || IsNil(o.MinReceiveAmount) {
		var ret string
		return ret
	}
	return *o.MinReceiveAmount
}

// GetMinReceiveAmountOk returns a tuple with the MinReceiveAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetMinReceiveAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MinReceiveAmount) {
		return nil, false
	}
	return o.MinReceiveAmount, true
}

// HasMinReceiveAmount returns a boolean if a field has been set.
func (o *CreateSwapQuote201Response) HasMinReceiveAmount() bool {
	if o != nil && !IsNil(o.MinReceiveAmount) {
		return true
	}

	return false
}

// SetMinReceiveAmount gets a reference to the given string and assigns it to the MinReceiveAmount field.
func (o *CreateSwapQuote201Response) SetMinReceiveAmount(v string) {
	o.MinReceiveAmount = &v
}

// GetMaxReceiveAmount returns the MaxReceiveAmount field value if set, zero value otherwise.
func (o *CreateSwapQuote201Response) GetMaxReceiveAmount() string {
	if o == nil || IsNil(o.MaxReceiveAmount) {
		var ret string
		return ret
	}
	return *o.MaxReceiveAmount
}

// GetMaxReceiveAmountOk returns a tuple with the MaxReceiveAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetMaxReceiveAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MaxReceiveAmount) {
		return nil, false
	}
	return o.MaxReceiveAmount, true
}

// HasMaxReceiveAmount returns a boolean if a field has been set.
func (o *CreateSwapQuote201Response) HasMaxReceiveAmount() bool {
	if o != nil && !IsNil(o.MaxReceiveAmount) {
		return true
	}

	return false
}

// SetMaxReceiveAmount gets a reference to the given string and assigns it to the MaxReceiveAmount field.
func (o *CreateSwapQuote201Response) SetMaxReceiveAmount(v string) {
	o.MaxReceiveAmount = &v
}

// GetQuoteExpiredTimestamp returns the QuoteExpiredTimestamp field value
func (o *CreateSwapQuote201Response) GetQuoteExpiredTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteExpiredTimestamp
}

// GetQuoteExpiredTimestampOk returns a tuple with the QuoteExpiredTimestamp field value
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetQuoteExpiredTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteExpiredTimestamp, true
}

// SetQuoteExpiredTimestamp sets field value
func (o *CreateSwapQuote201Response) SetQuoteExpiredTimestamp(v int32) {
	o.QuoteExpiredTimestamp = v
}

// GetQuoteId returns the QuoteId field value
func (o *CreateSwapQuote201Response) GetQuoteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *CreateSwapQuote201Response) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *CreateSwapQuote201Response) SetQuoteId(v string) {
	o.QuoteId = v
}

func (o CreateSwapQuote201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSwapQuote201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pay_amount"] = o.PayAmount
	toSerialize["receive_amount"] = o.ReceiveAmount
	toSerialize["fee_amount"] = o.FeeAmount
	if !IsNil(o.MinPayAmount) {
		toSerialize["min_pay_amount"] = o.MinPayAmount
	}
	if !IsNil(o.MaxPayAmount) {
		toSerialize["max_pay_amount"] = o.MaxPayAmount
	}
	if !IsNil(o.MinReceiveAmount) {
		toSerialize["min_receive_amount"] = o.MinReceiveAmount
	}
	if !IsNil(o.MaxReceiveAmount) {
		toSerialize["max_receive_amount"] = o.MaxReceiveAmount
	}
	toSerialize["quote_expired_timestamp"] = o.QuoteExpiredTimestamp
	toSerialize["quote_id"] = o.QuoteId
	return toSerialize, nil
}

func (o *CreateSwapQuote201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pay_amount",
		"receive_amount",
		"fee_amount",
		"quote_expired_timestamp",
		"quote_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSwapQuote201Response := _CreateSwapQuote201Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSwapQuote201Response)

	if err != nil {
		return err
	}

	*o = CreateSwapQuote201Response(varCreateSwapQuote201Response)

	return err
}

type NullableCreateSwapQuote201Response struct {
	value *CreateSwapQuote201Response
	isSet bool
}

func (v NullableCreateSwapQuote201Response) Get() *CreateSwapQuote201Response {
	return v.value
}

func (v *NullableCreateSwapQuote201Response) Set(val *CreateSwapQuote201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSwapQuote201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSwapQuote201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSwapQuote201Response(val *CreateSwapQuote201Response) *NullableCreateSwapQuote201Response {
	return &NullableCreateSwapQuote201Response{value: val, isSet: true}
}

func (v NullableCreateSwapQuote201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSwapQuote201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


