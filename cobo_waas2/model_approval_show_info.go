/*
Cobo Wallet as a Service 2.0

Contact: help@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cobo_waas2

import (
	"encoding/json"
)

// checks if the ApprovalShowInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalShowInfo{}

// ApprovalShowInfo Extra information for transaction approval details. 
type ApprovalShowInfo struct {
	// The name of the organization that the transaction belongs to.
	OrgName *string `json:"org_name,omitempty"`
	// The name of the wallet that the transaction belongs to.
	WalletName *string `json:"wallet_name,omitempty"`
	// The environment in which the transaction is processed.
	Environment *string `json:"environment,omitempty"`
	// The label of the address from which the transaction is initiated.
	FromAddressLabel *string `json:"from_address_label,omitempty"`
	// The label of the address to which the transaction is sent.
	ToAddressLabel *string `json:"to_address_label,omitempty"`
}

// NewApprovalShowInfo instantiates a new ApprovalShowInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalShowInfo() *ApprovalShowInfo {
	this := ApprovalShowInfo{}
	return &this
}

// NewApprovalShowInfoWithDefaults instantiates a new ApprovalShowInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalShowInfoWithDefaults() *ApprovalShowInfo {
	this := ApprovalShowInfo{}
	return &this
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *ApprovalShowInfo) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalShowInfo) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *ApprovalShowInfo) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *ApprovalShowInfo) SetOrgName(v string) {
	o.OrgName = &v
}

// GetWalletName returns the WalletName field value if set, zero value otherwise.
func (o *ApprovalShowInfo) GetWalletName() string {
	if o == nil || IsNil(o.WalletName) {
		var ret string
		return ret
	}
	return *o.WalletName
}

// GetWalletNameOk returns a tuple with the WalletName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalShowInfo) GetWalletNameOk() (*string, bool) {
	if o == nil || IsNil(o.WalletName) {
		return nil, false
	}
	return o.WalletName, true
}

// HasWalletName returns a boolean if a field has been set.
func (o *ApprovalShowInfo) HasWalletName() bool {
	if o != nil && !IsNil(o.WalletName) {
		return true
	}

	return false
}

// SetWalletName gets a reference to the given string and assigns it to the WalletName field.
func (o *ApprovalShowInfo) SetWalletName(v string) {
	o.WalletName = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ApprovalShowInfo) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalShowInfo) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ApprovalShowInfo) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *ApprovalShowInfo) SetEnvironment(v string) {
	o.Environment = &v
}

// GetFromAddressLabel returns the FromAddressLabel field value if set, zero value otherwise.
func (o *ApprovalShowInfo) GetFromAddressLabel() string {
	if o == nil || IsNil(o.FromAddressLabel) {
		var ret string
		return ret
	}
	return *o.FromAddressLabel
}

// GetFromAddressLabelOk returns a tuple with the FromAddressLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalShowInfo) GetFromAddressLabelOk() (*string, bool) {
	if o == nil || IsNil(o.FromAddressLabel) {
		return nil, false
	}
	return o.FromAddressLabel, true
}

// HasFromAddressLabel returns a boolean if a field has been set.
func (o *ApprovalShowInfo) HasFromAddressLabel() bool {
	if o != nil && !IsNil(o.FromAddressLabel) {
		return true
	}

	return false
}

// SetFromAddressLabel gets a reference to the given string and assigns it to the FromAddressLabel field.
func (o *ApprovalShowInfo) SetFromAddressLabel(v string) {
	o.FromAddressLabel = &v
}

// GetToAddressLabel returns the ToAddressLabel field value if set, zero value otherwise.
func (o *ApprovalShowInfo) GetToAddressLabel() string {
	if o == nil || IsNil(o.ToAddressLabel) {
		var ret string
		return ret
	}
	return *o.ToAddressLabel
}

// GetToAddressLabelOk returns a tuple with the ToAddressLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalShowInfo) GetToAddressLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ToAddressLabel) {
		return nil, false
	}
	return o.ToAddressLabel, true
}

// HasToAddressLabel returns a boolean if a field has been set.
func (o *ApprovalShowInfo) HasToAddressLabel() bool {
	if o != nil && !IsNil(o.ToAddressLabel) {
		return true
	}

	return false
}

// SetToAddressLabel gets a reference to the given string and assigns it to the ToAddressLabel field.
func (o *ApprovalShowInfo) SetToAddressLabel(v string) {
	o.ToAddressLabel = &v
}

func (o ApprovalShowInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalShowInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if !IsNil(o.WalletName) {
		toSerialize["wallet_name"] = o.WalletName
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.FromAddressLabel) {
		toSerialize["from_address_label"] = o.FromAddressLabel
	}
	if !IsNil(o.ToAddressLabel) {
		toSerialize["to_address_label"] = o.ToAddressLabel
	}
	return toSerialize, nil
}

type NullableApprovalShowInfo struct {
	value *ApprovalShowInfo
	isSet bool
}

func (v NullableApprovalShowInfo) Get() *ApprovalShowInfo {
	return v.value
}

func (v *NullableApprovalShowInfo) Set(val *ApprovalShowInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalShowInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalShowInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalShowInfo(val *ApprovalShowInfo) *NullableApprovalShowInfo {
	return &NullableApprovalShowInfo{value: val, isSet: true}
}

func (v NullableApprovalShowInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalShowInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


