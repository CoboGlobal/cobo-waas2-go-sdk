/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTssRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTssRequestRequest{}

// CreateTssRequestRequest struct for CreateTssRequestRequest
type CreateTssRequestRequest struct {
	Type TSSRequestType `json:"type"`
	TargetKeyGroupId string `json:"target_key_group_id"`
	UsedKeyGroupId *string `json:"used_key_group_id,omitempty"`
	DetailParams *CreateTssRequestRequestDetailParams `json:"detail_params,omitempty"`
}

type _CreateTssRequestRequest CreateTssRequestRequest

// NewCreateTssRequestRequest instantiates a new CreateTssRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTssRequestRequest(type_ TSSRequestType, targetKeyGroupId string) *CreateTssRequestRequest {
	this := CreateTssRequestRequest{}
	this.Type = type_
	this.TargetKeyGroupId = targetKeyGroupId
	return &this
}

// NewCreateTssRequestRequestWithDefaults instantiates a new CreateTssRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTssRequestRequestWithDefaults() *CreateTssRequestRequest {
	this := CreateTssRequestRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateTssRequestRequest) GetType() TSSRequestType {
	if o == nil {
		var ret TSSRequestType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTssRequestRequest) GetTypeOk() (*TSSRequestType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTssRequestRequest) SetType(v TSSRequestType) {
	o.Type = v
}

// GetTargetKeyGroupId returns the TargetKeyGroupId field value
func (o *CreateTssRequestRequest) GetTargetKeyGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetKeyGroupId
}

// GetTargetKeyGroupIdOk returns a tuple with the TargetKeyGroupId field value
// and a boolean to check if the value has been set.
func (o *CreateTssRequestRequest) GetTargetKeyGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetKeyGroupId, true
}

// SetTargetKeyGroupId sets field value
func (o *CreateTssRequestRequest) SetTargetKeyGroupId(v string) {
	o.TargetKeyGroupId = v
}

// GetUsedKeyGroupId returns the UsedKeyGroupId field value if set, zero value otherwise.
func (o *CreateTssRequestRequest) GetUsedKeyGroupId() string {
	if o == nil || IsNil(o.UsedKeyGroupId) {
		var ret string
		return ret
	}
	return *o.UsedKeyGroupId
}

// GetUsedKeyGroupIdOk returns a tuple with the UsedKeyGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTssRequestRequest) GetUsedKeyGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.UsedKeyGroupId) {
		return nil, false
	}
	return o.UsedKeyGroupId, true
}

// HasUsedKeyGroupId returns a boolean if a field has been set.
func (o *CreateTssRequestRequest) HasUsedKeyGroupId() bool {
	if o != nil && !IsNil(o.UsedKeyGroupId) {
		return true
	}

	return false
}

// SetUsedKeyGroupId gets a reference to the given string and assigns it to the UsedKeyGroupId field.
func (o *CreateTssRequestRequest) SetUsedKeyGroupId(v string) {
	o.UsedKeyGroupId = &v
}

// GetDetailParams returns the DetailParams field value if set, zero value otherwise.
func (o *CreateTssRequestRequest) GetDetailParams() CreateTssRequestRequestDetailParams {
	if o == nil || IsNil(o.DetailParams) {
		var ret CreateTssRequestRequestDetailParams
		return ret
	}
	return *o.DetailParams
}

// GetDetailParamsOk returns a tuple with the DetailParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTssRequestRequest) GetDetailParamsOk() (*CreateTssRequestRequestDetailParams, bool) {
	if o == nil || IsNil(o.DetailParams) {
		return nil, false
	}
	return o.DetailParams, true
}

// HasDetailParams returns a boolean if a field has been set.
func (o *CreateTssRequestRequest) HasDetailParams() bool {
	if o != nil && !IsNil(o.DetailParams) {
		return true
	}

	return false
}

// SetDetailParams gets a reference to the given CreateTssRequestRequestDetailParams and assigns it to the DetailParams field.
func (o *CreateTssRequestRequest) SetDetailParams(v CreateTssRequestRequestDetailParams) {
	o.DetailParams = &v
}

func (o CreateTssRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTssRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["target_key_group_id"] = o.TargetKeyGroupId
	if !IsNil(o.UsedKeyGroupId) {
		toSerialize["used_key_group_id"] = o.UsedKeyGroupId
	}
	if !IsNil(o.DetailParams) {
		toSerialize["detail_params"] = o.DetailParams
	}
	return toSerialize, nil
}

func (o *CreateTssRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"target_key_group_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTssRequestRequest := _CreateTssRequestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTssRequestRequest)

	if err != nil {
		return err
	}

	*o = CreateTssRequestRequest(varCreateTssRequestRequest)

	return err
}

type NullableCreateTssRequestRequest struct {
	value *CreateTssRequestRequest
	isSet bool
}

func (v NullableCreateTssRequestRequest) Get() *CreateTssRequestRequest {
	return v.value
}

func (v *NullableCreateTssRequestRequest) Set(val *CreateTssRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTssRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTssRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTssRequestRequest(val *CreateTssRequestRequest) *NullableCreateTssRequestRequest {
	return &NullableCreateTssRequestRequest{value: val, isSet: true}
}

func (v NullableCreateTssRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTssRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


