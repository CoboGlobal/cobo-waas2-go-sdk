/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the LinkSubAccountsByWalletIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkSubAccountsByWalletIdRequest{}

// LinkSubAccountsByWalletIdRequest struct for LinkSubAccountsByWalletIdRequest
type LinkSubAccountsByWalletIdRequest struct {
	// The ID of main account wallet.
	WalletId *string `json:"wallet_id,omitempty"`
	// The ID list of sub accounts.
	SubAccountIds []string `json:"sub_account_ids,omitempty"`
}

// NewLinkSubAccountsByWalletIdRequest instantiates a new LinkSubAccountsByWalletIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkSubAccountsByWalletIdRequest() *LinkSubAccountsByWalletIdRequest {
	this := LinkSubAccountsByWalletIdRequest{}
	return &this
}

// NewLinkSubAccountsByWalletIdRequestWithDefaults instantiates a new LinkSubAccountsByWalletIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkSubAccountsByWalletIdRequestWithDefaults() *LinkSubAccountsByWalletIdRequest {
	this := LinkSubAccountsByWalletIdRequest{}
	return &this
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *LinkSubAccountsByWalletIdRequest) GetWalletId() string {
	if o == nil || IsNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSubAccountsByWalletIdRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletId) {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *LinkSubAccountsByWalletIdRequest) HasWalletId() bool {
	if o != nil && !IsNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *LinkSubAccountsByWalletIdRequest) SetWalletId(v string) {
	o.WalletId = &v
}

// GetSubAccountIds returns the SubAccountIds field value if set, zero value otherwise.
func (o *LinkSubAccountsByWalletIdRequest) GetSubAccountIds() []string {
	if o == nil || IsNil(o.SubAccountIds) {
		var ret []string
		return ret
	}
	return o.SubAccountIds
}

// GetSubAccountIdsOk returns a tuple with the SubAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkSubAccountsByWalletIdRequest) GetSubAccountIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubAccountIds) {
		return nil, false
	}
	return o.SubAccountIds, true
}

// HasSubAccountIds returns a boolean if a field has been set.
func (o *LinkSubAccountsByWalletIdRequest) HasSubAccountIds() bool {
	if o != nil && !IsNil(o.SubAccountIds) {
		return true
	}

	return false
}

// SetSubAccountIds gets a reference to the given []string and assigns it to the SubAccountIds field.
func (o *LinkSubAccountsByWalletIdRequest) SetSubAccountIds(v []string) {
	o.SubAccountIds = v
}

func (o LinkSubAccountsByWalletIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkSubAccountsByWalletIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	if !IsNil(o.SubAccountIds) {
		toSerialize["sub_account_ids"] = o.SubAccountIds
	}
	return toSerialize, nil
}

type NullableLinkSubAccountsByWalletIdRequest struct {
	value *LinkSubAccountsByWalletIdRequest
	isSet bool
}

func (v NullableLinkSubAccountsByWalletIdRequest) Get() *LinkSubAccountsByWalletIdRequest {
	return v.value
}

func (v *NullableLinkSubAccountsByWalletIdRequest) Set(val *LinkSubAccountsByWalletIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkSubAccountsByWalletIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkSubAccountsByWalletIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkSubAccountsByWalletIdRequest(val *LinkSubAccountsByWalletIdRequest) *NullableLinkSubAccountsByWalletIdRequest {
	return &NullableLinkSubAccountsByWalletIdRequest{value: val, isSet: true}
}

func (v NullableLinkSubAccountsByWalletIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkSubAccountsByWalletIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


