/*
Cobo Wallet as a Service 2.0

API version: 1.0.0
Contact: support@cobo.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package CoboWaas2

import (
	"encoding/json"
)

// checks if the TransactionAddressDestinationUtxoOutputs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionAddressDestinationUtxoOutputs{}

// TransactionAddressDestinationUtxoOutputs struct for TransactionAddressDestinationUtxoOutputs
type TransactionAddressDestinationUtxoOutputs struct {
	Outputs []TransactionAddressDestinationUtxoOutputsOutputsInner `json:"outputs,omitempty"`
	// The address used to receive the remaining funds or change from the transaction.
	ChangeAddress *string `json:"change_address,omitempty"`
}

// NewTransactionAddressDestinationUtxoOutputs instantiates a new TransactionAddressDestinationUtxoOutputs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionAddressDestinationUtxoOutputs() *TransactionAddressDestinationUtxoOutputs {
	this := TransactionAddressDestinationUtxoOutputs{}
	return &this
}

// NewTransactionAddressDestinationUtxoOutputsWithDefaults instantiates a new TransactionAddressDestinationUtxoOutputs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionAddressDestinationUtxoOutputsWithDefaults() *TransactionAddressDestinationUtxoOutputs {
	this := TransactionAddressDestinationUtxoOutputs{}
	return &this
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *TransactionAddressDestinationUtxoOutputs) GetOutputs() []TransactionAddressDestinationUtxoOutputsOutputsInner {
	if o == nil || IsNil(o.Outputs) {
		var ret []TransactionAddressDestinationUtxoOutputsOutputsInner
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressDestinationUtxoOutputs) GetOutputsOk() ([]TransactionAddressDestinationUtxoOutputsOutputsInner, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *TransactionAddressDestinationUtxoOutputs) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []TransactionAddressDestinationUtxoOutputsOutputsInner and assigns it to the Outputs field.
func (o *TransactionAddressDestinationUtxoOutputs) SetOutputs(v []TransactionAddressDestinationUtxoOutputsOutputsInner) {
	o.Outputs = v
}

// GetChangeAddress returns the ChangeAddress field value if set, zero value otherwise.
func (o *TransactionAddressDestinationUtxoOutputs) GetChangeAddress() string {
	if o == nil || IsNil(o.ChangeAddress) {
		var ret string
		return ret
	}
	return *o.ChangeAddress
}

// GetChangeAddressOk returns a tuple with the ChangeAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionAddressDestinationUtxoOutputs) GetChangeAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeAddress) {
		return nil, false
	}
	return o.ChangeAddress, true
}

// HasChangeAddress returns a boolean if a field has been set.
func (o *TransactionAddressDestinationUtxoOutputs) HasChangeAddress() bool {
	if o != nil && !IsNil(o.ChangeAddress) {
		return true
	}

	return false
}

// SetChangeAddress gets a reference to the given string and assigns it to the ChangeAddress field.
func (o *TransactionAddressDestinationUtxoOutputs) SetChangeAddress(v string) {
	o.ChangeAddress = &v
}

func (o TransactionAddressDestinationUtxoOutputs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionAddressDestinationUtxoOutputs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if !IsNil(o.ChangeAddress) {
		toSerialize["change_address"] = o.ChangeAddress
	}
	return toSerialize, nil
}

type NullableTransactionAddressDestinationUtxoOutputs struct {
	value *TransactionAddressDestinationUtxoOutputs
	isSet bool
}

func (v NullableTransactionAddressDestinationUtxoOutputs) Get() *TransactionAddressDestinationUtxoOutputs {
	return v.value
}

func (v *NullableTransactionAddressDestinationUtxoOutputs) Set(val *TransactionAddressDestinationUtxoOutputs) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionAddressDestinationUtxoOutputs) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionAddressDestinationUtxoOutputs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionAddressDestinationUtxoOutputs(val *TransactionAddressDestinationUtxoOutputs) *NullableTransactionAddressDestinationUtxoOutputs {
	return &NullableTransactionAddressDestinationUtxoOutputs{value: val, isSet: true}
}

func (v NullableTransactionAddressDestinationUtxoOutputs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionAddressDestinationUtxoOutputs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


